,index,BB,average_energy,occurences
0,1,"('add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.7316613559699648,14.0
1,2,"('add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4')",0.24792934828202665,4.0
2,3,"('add $0x30, %rsp', 'popq  %rbp', 'retq')",0.13182009584454968,4.0
3,4,"('add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.34170209811200397,16.0
4,5,"('add $0x38, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.7059386033035945,6.0
5,6,"('add $0x38, %rsp', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",2.1164833770688247,3.0
6,7,"('add $0x38, %rsp', 'mov %r14d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",2.1164833770688247,3.0
7,8,"('add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.36172408172272147,20.0
8,9,"('add $0x68, %rsp', 'popq  %rbp', 'popq  %r12', 'retq')",0.38966562431038015,4.0
9,10,"('add $0x8, %rbx', 'cmp %rbx, %r12', 'jnz 0xfffffffffffffff7')",0.7054944590229416,3.0
10,11,"('add $0x8, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')",0.5490637336909581,6.0
11,12,"('add $0x8, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",1.2989313836389904,6.0
12,13,"('add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb')",0.28247018534112356,8.0
13,14,"('add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'jmp 0x92558')",1.1678753579210894,4.0
14,15,"('add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')",0.6870389233914019,9.0
15,16,"('add $0x88, %rsp', 'mov %r8, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",1.1012671235271918,9.0
16,17,"('add $0xa0, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.6729964377813283,9.0
17,18,"('add $0xd8, %rsp', 'retq')",0.42137152869746786,14.0
18,19,"('add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44')",0.6070324210334743,16.0
19,20,"('add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c')",0.6384138002331086,9.0
20,21,"('add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b')",0.8076601499189429,4.0
21,22,"('add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6')",0.11908136861691543,8.0
22,23,"('add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21')",0.10206978074407175,8.0
23,24,"('add %rbx, %rdi', 'add %rbx, %r14', 'movq  %rdi, 0x28(%r12)', 'jmp 0xfffffffffffffef4')",0.26364019168909936,4.0
24,25,"('add %rdi, %rax', 'vzeroupper', 'retq')",0.27957361425051763,4.0
25,26,"('addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519')",0.17011562522142756,8.0
26,27,"('addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0')",0.17011562522142756,8.0
27,28,"('addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c')",0.27957361425051763,4.0
28,29,"('and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f')",0.29350534546488316,4.0
29,30,"('and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e')",1.095567046585914,14.0
30,31,"('and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')",0.9330874508589396,7.0
31,32,"('and $0xfffffffffffffff0, %rax', 'lea -0x11(%rax), %rbx', 'shr $0x4, %rbx', 'jmp 0xffffffffffffff78')",0.7752338148261284,16.0
32,33,"('and $0xfffffffffffffff0, %rax', 'mov %rax, %r13', 'test %rdi, %rdi', 'jz 0x504')",0.41412296655939984,10.0
33,34,"('bsf %r8, %rax', 'add %rdi, %rax', 'cmpb  $0x0, (%rax)', 'jz 0x40')",0.43140673645811556,6.0
34,35,"('callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'cmpb  $0x0, 0xc3755(%rip)', 'jnz 0x2d')",1.3475474368798332,4.0
35,36,"('callq  0x3451f', 'nop %edi, %edx', 'pushq  %r12', 'mov %esi, %r10d', 'mov %esi, %r12d', 'pushq  %rbp', 'mov %rdi, %rbp', 'sub $0x68, %rsp', 'movq  %rdx, 0x40(%rsp)', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'and $0x40, %r10d', 'jnz 0x5b')",1.5295335278213396,3.0
36,37,"('callq  0x35618', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12')",0.869342968457719,8.0
37,38,"('callq  0x4ef50', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'movl  %fs:0x18, %ebp', 'xor %r12d, %r12d', 'test %ebp, %ebp', 'setnz %r12b', 'xor %edi, %edi', 'mov %r12d, %esi', 'callq  0x25251', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74')",4.156342886998061,2.0
38,39,"('callq  0x4ef50', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'movl  %fs:0x18, %ebp', 'xor %r12d, %r12d', 'test %ebp, %ebp', 'setnz %r12b', 'xor %edi, %edi', 'mov %r12d, %esi', 'callq  0x25251', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74', 'test %sil, %sil', 'jz 0x1e', 'movq  0x500ea(%rip), %rbp', 'mov %rbp, %rdi', 'test %rbp, %rbp', 'jnz 0x30', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'test %ebp, %ebp', 'jnz 0x16a', 'movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc', 'movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39', 'xor %r15d, %r15d', 'jmp 0x91', 'movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42', 'vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6', 'tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d', 'movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37', 'add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq', 'addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c', 'movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'jmp 0xffffffffffffffe5', 'movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf0fe', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d', 'test %rsi, %rsi', 'jz 0x294', 'movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f', 'cmpq  $0x0, (%rbp)', 'jz 0xd', 'movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1', 'mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5', 'movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4', 'test $0x1, %ah', 'jz 0x34', 'cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103', 'movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax', 'nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df', 'movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6', 'test $0x202, %eax', 'jz 0xe5', 'mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39', 'movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35', 'movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6', 'and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121', 'movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11', 'jmp 0x34e8f', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'movl  (%rbx), %edx', 'mov %edx, %ecx', 'or $0x20, %edx', 'or $0x10, %ecx', 'test %rax, %rax', 'mov $0xffffffff, %eax', 'cmovz %ecx, %edx', 'movl  %edx, (%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movl  (%rbx), %eax', 'mov $0xffffffffffffffff, %r12', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe7b2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'xor %r14d, %r14d', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'xor %r12d, %r12d', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x8(%rsp)', 'test %ecx, %ecx', 'jnz 0x296', 'cmp $0x1, %edx', 'jz 0x185', 'cmp $0x24, %edx', 'jnbe 0x17c', 'movsxb  (%r13), %rax', 'movq  0x68(%r8), %rsi', 'mov %r13, %rbx', 'mov %rax, %rcx', 'testb  $0x20, 0x1(%rsi,%rax,2)', 'jz 0x15', 'test %cl, %cl', 'jz 0x364', 'cmp $0x2d, %cl', 'jz 0x232', 'movl  $0x0, 0x14(%rsp)', 'cmp $0x2b, %cl', 'jz 0x171', 'cmp $0x30, %cl', 'jz 0x1c8', 'test %edx, %edx', 'jnz 0x140', 'cmp $0xa, %edx', 'jz 0xfffffffffffffec3', 'test %r14, %r14', 'jnz 0x347', 'mov $0x8, %eax', 'mov $0xa, %edx', 'xor %ebp, %ebp', 'cdqe', 'lea 0x998ac(%rip), %rsi', 'movq  (%rsi,%rax,8), %r8', 'lea 0x99861(%rip), %rsi', 'movzxb  (%rsi,%rax,1), %eax', 'movb  %al, 0x12(%rsp)', 'test %cl, %cl', 'jz 0x220', 'cmp %rbx, %r14', 'jz 0x217', 'movq  0xb26f9(%rip), %r10', 'lea -0x1(%rbp), %rsi', 'movq  0xb26de(%rip), %r11', 'mov %rbx, %rdi', 'xor %eax, %eax', 'movq  %rsi, 0x18(%rsp)', 'xor %r9d, %r9d', 'movsxd %edx, %r15', 'jmp 0x2e', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'test %rbp, %rbp', 'jnz 0xcc', 'movzx %cl, %ecx', 'testb  $0x4, 0x1(%r11,%rcx,2)', 'jz 0x2d', 'cmp %rdi, %rbx', 'jz 0x179', 'movq  0x8(%rsp), %rbx', 'test %rbx, %rbx', 'jz 0x5', 'test %r9d, %r9d', 'jnz 0x321', 'movl  0x14(%rsp), %ecx', 'mov %rax, %rdx', 'neg %rdx', 'test %ecx, %ecx', 'cmovnz %rdx, %rax', 'add $0x28, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x20(%rbp)', 'cmpq  $0x0, -0x8(%rbp)', 'jz 0xb', 'movq  -0x8(%rbp), %rdi', 'callq  0x24c1e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x18(%rbp), %rdi', 'callq  0x164c5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8', 'callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'jmp 0xfffffffffffffce7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203', 'movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00', 'movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238', 'mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d', 'cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16', 'movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb', 'test %rdx, %rdx', 'jnz 0xfffffffffffffff1', 'cmp %rdx, %rbx', 'jz 0x6d', 'movq  0x68(%rbx), %rax', 'and $0x7f, %sil', 'add $0x68, %rcx', 'movq  %rax, (%rcx)', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jz 0xfffffffffffffeb9', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf', 'subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24', 'movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147', 'subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc', 'movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163', 'add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42', 'movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4', 'mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1', 'mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa', 'movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e', 'popq  %rbx', 'retq', 'testb  $0x20, 0x74(%rbx)', 'jnz 0x37', 'movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1', 'mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9', 'nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7', 'retq', 'mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c', 'xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'test $0x1, %al', 'jz 0x2b', 'callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6', 'testb  $0x2, 0x8(%r12)', 'jnz 0x142', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc', 'movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3', 'testb  $0x2, 0x4(%rbp)', 'jz 0x5a9', 'movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f', 'movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5', 'mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434', 'cmpq  %r14, 0x888(%rbp)', 'jbe 0x427', 'movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9', 'testb  $0x1, 0x8(%r12)', 'jnz 0x26', 'cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3', 'add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c', 'cmp $0xffff, %rbx', 'jnbe 0x1b2', 'movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b', 'lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b', 'movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1', 'movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'retq', 'test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3', 'test %edx, %edx', 'jnz 0x13', 'movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6', 'subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d', 'xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8', 'movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf', 'testb  $0x80, (%rbp)', 'jz 0xe', 'popq  %rbp', 'retq', 'movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127', 'cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25', 'lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16', 'lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa', 'mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xee5c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'lea 0xe0(%rsp), %rax', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x10, (%rsp)', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x320b', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffff03e', 'movsx %r15b, %eax', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %ecx', 'lea 0xaae7b(%rip), %rax', 'movq  (%rax,%rcx,8), %rax', 'jmp %rax', 'nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffffb46', 'movsx %r15b, %eax', 'mov $0x1, %r11d', 'lea 0xaba97(%rip), %rsi', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %eax', 'movq  (%rsi,%rax,8), %rax', 'jmp %rax', 'nop %edi, %edx', 'movl  $0xa, -0x510(%rbp)', 'movl  -0x4e8(%rbp), %edi', 'movl  (%r14), %eax', 'test %edi, %edi', 'jz 0x65f', 'cmp $0x2f, %eax', 'jnbe 0xb5e', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movl  $0x0, -0x4d8(%rbp)', 'movq  (%rdx), %rax', 'movl  $0x0, -0x518(%rbp)', 'movq  %rax, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'jmp 0xfffffffffffffcf4', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73', 'mov %rbx, %r14', 'movq  0xd8(%rbp), %rax', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %rax, %rdx', 'sub %r15, %r13', 'sub %r15, %rdx', 'cmp %rdx, %r13', 'jbe 0x1ac', 'mov $0xffffffff, %esi', 'mov %rbp, %rdi', 'callq  0x18(%rax)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201', 'mov %esi, %ebx', 'movq  0x20(%rdi), %rsi', 'test $0x8, %ah', 'jz 0x52', 'test %rsi, %rsi', 'jz 0x135', 'mov %rbp, %rdi', 'callq  0x1025', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test $0x2, %al', 'jz 0xc', 'movq  0xd8(%rbx), %rbp', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbp, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x68', 'mov %rbx, %rdi', 'callq  0x68(%rbp)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0xa0, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x98(%rsp)', 'xor %eax, %eax', 'movl  0x70(%rdi), %eax', 'test %eax, %eax', 'js 0xae', 'movq  0xd8(%rdi), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xff', 'mov %rsp, %rsi', 'mov %rbp, %rdi', 'callq  0x90(%rbx)', 'nop %edi, %edx', 'mov %rsi, %rdx', 'movl  0x70(%rdi), %esi', 'mov $0x1, %edi', 'jmp 0x35421', 'nop %edi, %edx', 'mov %edi, %r8d', 'mov %esi, %edi', 'mov %rdx, %rsi', 'cmp $0x1, %r8d', 'jnbe 0x30', 'mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9', 'retq', 'test %eax, %eax', 'js 0x73', 'movl  0x18(%rsp), %eax', 'and $0xf000, %eax', 'cmp $0x2000, %eax', 'jz 0x83', 'movq  0x38(%rsp), %rbx', 'lea -0x1(%rbx), %rax', 'cmp $0x1ffe, %rax', 'jnbe 0x4e', 'mov %rbx, %rdi', 'callq  0xfffffffffffb2591', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b', 'test %rdi, %rdi', 'js 0x132', 'lea 0x17(%rdi), %rax', 'xor %ebx, %ebx', 'cmp $0x1f, %rax', 'jnbe 0x82', 'and $0xfffffffffffffff0, %rax', 'lea -0x11(%rax), %rbx', 'shr $0x4, %rbx', 'jmp 0xffffffffffffff78', 'movq  %fs:0xffffffffffffffc8, %rax', 'test %rax, %rax', 'jz 0x88', 'cmpq  0x9d253(%rip), %rbx', 'jb 0xb3', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x123', 'mov %rbp, %rsi', 'lea 0x9d283(%rip), %rdi', 'callq  0xffffffffffffda13', 'test %rsi, %rsi', 'js 0x60d', 'pushq  %r15', 'lea 0x17(%rsi), %rax', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x88, %rsp', 'cmp $0x1f, %rax', 'jnbe 0x108', 'and $0xfffffffffffffff0, %rax', 'mov %rax, %r13', 'test %rdi, %rdi', 'jz 0x504', 'mov %eax, %r14d', 'shr $0x4, %r14d', 'cmpq  0xa1cfa(%rip), %rax', 'jbe 0x272', 'cmp $0x3ff, %rax', 'jbe 0x1f6', 'mov %rax, %rcx', 'mov %rax, %rdi', 'mov %rax, %rsi', 'mov %rax, %r15', 'shr $0xc, %rsi', 'shr $0xf, %r15', 'mov $0x2, %edx', 'shr $0x6, %rcx', 'shr $0x9, %rdi', 'lea 0x77(%r15), %r10d', 'movq  %rsi, 0x58(%rsp)', 'shr $0x12, %rax', 'cmp $0xbffff, %r13', 'movq  %r15, 0x60(%rsp)', 'lea 0x30(%rcx), %r11d', 'cmovnbe %rdx, %rax', 'mov %r15, %rdx', 'lea 0x6e(%rsi), %r15d', 'movq  %rcx, 0x40(%rsp)', 'movq  %rdi, 0x50(%rsp)', 'lea 0x7c(%rax), %r9d', 'mov %rsi, %rax', 'mov %edi, %esi', 'movl  %r11d, 0x4c(%rsp)', 'add $0x5b, %esi', 'movl  %r9d, 0x68(%rsp)', 'movl  %r10d, 0x6c(%rsp)', 'movl  %r15d, 0x70(%rsp)', 'movl  %esi, 0x74(%rsp)', 'movl  %r11d, 0x28(%rsp)', 'cmp $0x30, %rcx', 'jbe 0x20', 'movl  %esi, 0x28(%rsp)', 'cmp $0x14, %rdi', 'jbe 0x16', 'movl  0x8(%rbx), %eax', 'test %eax, %eax', 'jz 0x228', 'lea -0x11(%r13), %rax', 'shr $0x4, %rax', 'mov %rax, %r15', 'xor %eax, %eax', 'movq  %rax, 0x10(%rsp)', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x12', 'cmpq  %r15, 0x9f3ce(%rip)', 'cmovnbe %r13, %rax', 'movq  %rax, 0x10(%rsp)', 'movq  $0x0, 0x8(%rsp)', 'lea 0x60(%rbx), %r11', 'movl  %r14d, 0x48(%rsp)', 'movq  %rbp, 0x20(%rsp)', 'movq  0x78(%rbx), %r10', 'cmp %r11, %r10', 'jz 0x337', 'cmp $0x3ff, %r13', 'jbe 0x25', 'movl  0x28(%rsp), %eax', 'lea -0x2(%rax,%rax,1), %eax', 'lea 0x70(%rbx,%rax,8), %rax', 'movq  (%rax), %rdx', 'lea -0x10(%rax), %rcx', 'cmp %rcx, %rdx', 'jz 0xc', 'movl  0x28(%rsp), %eax', 'lea 0x1(%rax), %ecx', 'add %eax, %eax', 'mov %ecx, %edi', 'lea 0x60(%rbx,%rax,8), %rdx', 'shr $0x5, %edi', 'mov %edi, %eax', 'movl  0x860(%rbx,%rax,4), %esi', 'mov $0x1, %eax', 'shl %cl, %eax', 'nop', 'cmp %esi, %eax', 'jnbe 0x1ae', 'lea 0x1(%rdi), %eax', 'cmp $0x3, %edi', 'jz 0x3f', 'movq  0x60(%rbx), %r8', 'movq  0x8(%r8), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  %rax, 0x888(%rbx)', 'jb 0x218', 'lea 0x20(%r13), %rdx', 'cmp %rax, %rdx', 'jbe 0x262', 'lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8', 'add $0x88, %rsp', 'mov %r8, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %rax, %r8', 'test %rax, %rax', 'jz 0xc8', 'movq  -0x8(%rax), %rax', 'test $0x2, %al', 'jnz 0x20', 'test $0x4, %al', 'jz 0x1c', 'popq  %rbx', 'mov %r8, %rax', 'popq  %rbp', 'popq  %r12', 'retq', 'mov %rax, %rsi', 'test %rax, %rax', 'jz 0x53', 'lea (%rax,%rbx,1), %rdx', 'mov $0x1, %ecx', 'mov %rbp, %rdi', 'callq  0xfffffffffffaae28', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'mov $0x1, %eax', 'movq  0x98(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0x97', 'add $0xa0, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'cmp $0xffffffff, %eax', 'jnz 0x36', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movq  0x38(%rbp), %rdx', 'movl  (%rbp), %eax', 'movq  %rdx, 0x18(%rbp)', 'movq  %rdx, 0x8(%rbp)', 'movq  %rdx, 0x10(%rbp)', 'jmp 0xfffffffffffffeba', 'test $0x1, %ah', 'jnz 0x150', 'movq  0x40(%rbp), %rcx', 'cmp %rdx, %rcx', 'jz 0xe3', 'movqq  0x10(%rbp), %xmm0', 'movq %rcx, %xmm2', 'movq %rdx, %xmm1', 'mov %eax, %ecx', 'movqq  %xmm0, 0x8(%rbp)', 'or $0x8, %ch', 'punpcklqdq %xmm1, %xmm0', 'mov %rdx, %rsi', 'movl  %ecx, (%rbp)', 'movl  0xc0(%rbp), %ecx', 'movupsx  %xmm0, 0x18(%rbp)', 'movq %rdx, %xmm0', 'punpcklqdq %xmm2, %xmm0', 'movupsx  %xmm0, 0x28(%rbp)', 'test %ecx, %ecx', 'jnle 0xffffffffffffff5e', 'test $0x202, %eax', 'jz 0xffffffffffffff53', 'cmp $0xffffffff, %ebx', 'jz 0xbd', 'popq  %rbx', 'mov %rbp, %rdi', 'sub %rsi, %rdx', 'popq  %rbp', 'popq  %r12', 'jmp 0xfffffffffffff479', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7', 'retq', 'cmp $0xffffffff, %eax', 'jz 0x150', 'movq  0x40(%rbp), %rcx', 'subq  0x38(%rbp), %rcx', 'mov %r14, %r8', 'cmp $0x7f, %rcx', 'jbe 0xd', 'mov %r14, %rax', 'xor %edx, %edx', 'div %rcx', 'sub %rdx, %r8', 'test %r8, %r8', 'jnz 0x4b', 'mov %rbx, %r13', 'test %r14, %r14', 'jz 0xffffffffffffff62', 'lea (%r12,%r8,1), %rsi', 'mov %r14, %rdx', 'mov %rbp, %rdi', 'callq  0x260b', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x149', 'pushq  %r15', 'pushq  %r14', 'mov %rsi, %r14', 'pushq  %r13', 'mov %rdx, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'jmp 0x58', 'movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0', 'sub %rdi, %rbx', 'cmp %rbx, %rbp', 'cmovbe %rbp, %rbx', 'cmp $0x14, %rbx', 'jbe 0xffffffffffffff94', 'test %rbx, %rbx', 'jnz 0xad', 'lea 0xf(%rdi), %rax', 'sub %r14, %rax', 'cmp $0x1e, %rax', 'jbe 0x6d', 'lea -0x1(%rbx), %rax', 'cmp $0xe, %rax', 'jbe 0x63', 'xor %eax, %eax', 'nopw  %ax, (%rax,%rax,1)', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'jmp 0xffffffffffffffc9', 'add %rbx, %rdi', 'add %rbx, %r14', 'movq  %rdi, 0x28(%r12)', 'jmp 0xfffffffffffffef4', 'sub %rbx, %rbp', 'test %rbp, %rbp', 'jz 0x7c', 'add $0x8, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'sub %r14, %rax', 'add %rax, %r13', 'jmp 0xffffffffffffff47', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73', 'sub %rdi, %rax', 'xor %r15d, %r15d', 'mov %rax, %rdx', 'test %rdx, %rdx', 'jz 0x65', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'cmp $0x1, %dl', 'jnbe 0x3d', 'jb 0x7', 'movzxb  (%rsi), %ecx', 'movb  %cl, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq', 'movq  -0x10(%rbp), %rdi', 'callq  0x164a3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8', 'callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'jmp 0xfffffffffffffce7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203', 'movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00', 'movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238', 'mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d', 'cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16', 'movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb', 'movq  %rdx, 0xa4e4a(%rip)', 'and $0x7f, %sil', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jnz 0x109', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf', 'subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24', 'movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147', 'subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc', 'movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163', 'add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42', 'movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4', 'mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1', 'movl  0xc0(%rdi), %edx', 'test %edx, %edx', 'jle 0x28', 'movq  0x20(%rdi), %rsi', 'movq  0x28(%rdi), %rdx', 'sub %rsi, %rdx', 'callq  0xfffffffffffffd3d', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'mov %rsi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r14', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %r14, %rax', 'sub %r15, %r13', 'sub %r15, %rax', 'testl  $0x1000, (%rdi)', 'jnz 0xc5', 'movq  $0xffffffffffffffff, 0x90(%rdi)', 'jmp 0xffffffffffffff80', 'cmp %rax, %r13', 'jbe 0xb2', 'mov %rbp, %rdx', 'mov %r12, %rsi', 'mov %rbx, %rdi', 'callq  0x78(%r14)', 'nop %edi, %edx', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'test %rdx, %rdx', 'jle 0x84', 'mov %rsi, %rbp', 'mov %rdx, %r12', 'mov %rdx, %rbx', 'jmp 0x1a', 'movl  0x70(%r13), %edi', 'mov %rbx, %rdx', 'mov %rbp, %rsi', 'testb  $0x2, 0x74(%r13)', 'jz 0xffffffffffffffdc', 'callq  0x35618', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53', 'retq', 'test %rax, %rax', 'js 0x30', 'sub %rax, %rbx', 'add %rax, %rbp', 'test %rbx, %rbx', 'jle 0x55', 'mov %r12, %rax', 'sub %rbx, %rax', 'jmp 0xffffffffffffffd5', 'movq  0x90(%r13), %rdx', 'test %rdx, %rdx', 'js 0xc', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq', 'mov %rax, %r13', 'movzxw  0x80(%rbx), %eax', 'test %r13, %r13', 'jz 0x7', 'test %ax, %ax', 'jnz 0x6d', 'movq  0x38(%rbx), %rax', 'movl  0xc0(%rbx), %edx', 'movq  %rax, 0x18(%rbx)', 'movq  %rax, 0x8(%rbx)', 'movq  %rax, 0x10(%rbx)', 'movq  %rax, 0x28(%rbx)', 'movq  %rax, 0x20(%rbx)', 'test %edx, %edx', 'jle 0x3b', 'testl  $0x202, (%rbx)', 'jnz 0xffffffffffffffc5', 'jmp 0xffffffffffffffbf', 'movq  0x40(%rbx), %rax', 'movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %eax, %ebp', 'jmp 0xfffffffffffffee3', 'mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa', 'movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e', 'popq  %rbx', 'retq', 'testb  $0x20, 0x74(%rbx)', 'jnz 0x37', 'movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1', 'mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9', 'nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7', 'retq', 'mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c', 'xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'test $0x1, %al', 'jz 0x2b', 'callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6', 'testb  $0x2, 0x8(%r12)', 'jnz 0x142', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc', 'movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3', 'testb  $0x2, 0x4(%rbp)', 'jz 0x5a9', 'movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f', 'movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5', 'mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434', 'cmpq  %r14, 0x888(%rbp)', 'jbe 0x427', 'movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9', 'testb  $0x1, 0x8(%r12)', 'jnz 0x26', 'cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3', 'add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c', 'cmp $0xffff, %rbx', 'jnbe 0x1b2', 'movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b', 'lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b', 'movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1', 'movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'retq', 'test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3', 'test %edx, %edx', 'jnz 0x13', 'movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6', 'subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d', 'xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8', 'movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf', 'testb  $0x80, (%rbp)', 'jz 0xe', 'popq  %rbp', 'retq', 'movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127', 'cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25', 'lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16', 'lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa', 'mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'add $0x30, %rsp', 'popq  %rbp', 'retq', 'cmpl  $0x2, -0xc(%rbp)', 'jnl 0x7e')",136.02514032263238,1.0
39,40,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",0.6145537204984829,1.0
40,41,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')",0.09898333290334642,1.0
41,42,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'retq')",0.21268426875052437,4.0
42,43,"('callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9')",0.37421361156001215,8.0
43,44,"('callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')",0.6384138002331086,9.0
44,45,"('callq  0xffffffffffffff34', 'pushq  %rbp', 'mov %rsp, %rbp')",0.3561834723333188,4.0
45,46,"('callq  0xffffffffffffffd6', 'pushq  %rbp', 'mov %rsp, %rbp')",1.1673735732836377,1.0
46,47,"('cmp $0x1, %dl', 'jnbe 0x3d')",0.09415655944236818,4.0
47,48,"('cmp $0x1, %edx', 'jz 0x185')",0.15531867458362086,4.0
48,49,"('cmp $0x10, %dl', 'jnb 0x19')",0.25180263117885404,20.0
49,50,"('cmp $0x1f, %rbx', 'jbe 0x2a4')",0.13745507379535504,21.0
50,51,"('cmp $0x2, %ebp', 'jz 0xffffffffffffff2f')",0.5879118238462206,3.0
51,52,"('cmp $0x20, %rdx', 'jb 0x4b')",0.2759236203276624,16.0
52,53,"('cmp $0x24, %edx', 'jnbe 0x17c')",0.15531867458362086,4.0
53,54,"('cmp $0x2d, %cl', 'jz 0x232')",0.18638342352838314,4.0
54,55,"('cmp $0x2f, %eax', 'jnbe 0x7b4')",0.07595881227204984,4.0
55,56,"('cmp $0x2f, %eax', 'jnbe 0xb5e')",0.09415655944236818,4.0
56,57,"('cmp $0x30, %cl', 'jz 0x1c8')",0.18638342352838314,4.0
57,58,"('cmp $0x3ff, %r13', 'jbe 0x25')",0.29580171335978467,10.0
58,59,"('cmp $0x3ff, %rax', 'jbe 0x1f6')",0.29580171335978467,10.0
59,60,"('cmp $0x4, %dl', 'jnb 0x35')",0.08505768585720902,8.0
60,61,"('cmp $0x4, %rdx', 'jnz 0xffffffffffffff86')",0.4491824789599444,4.0
61,62,"('cmp $0x61, %al', 'jle 0x27a')",0.19609341801112268,3.0
62,63,"('cmp $0x61, %al', 'jz 0x18a')",0.19609341801112268,3.0
63,64,"('cmp $0x77, %al', 'jz 0x4e')",0.19609341801112268,3.0
64,65,"('cmp $0x7fffffff, %r15', 'jnle 0x348')",0.42137152869746786,14.0
65,66,"('cmp $0x8, %dl', 'jnb 0x29')",0.29576358590555507,16.0
66,67,"('cmp $0xa, %ebx', 'jz 0xa3')",0.8941293628050767,28.0
67,68,"('cmp $0xa, %edx', 'jz 0xfffffffffffffec3')",0.15531867458362086,4.0
68,69,"('cmp $0xffff, %rbx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",0.9105322803480983,1.0
69,70,"('cmp $0xffff, %rbx', 'jnbe 0x1b2')",0.09415655944236818,8.0
70,71,"('cmp $0xffffffff, %eax', 'jnz 0x36')",0.30590724637922156,9.0
71,72,"('cmp $0xffffffff, %eax', 'jz 0x150')",0.36081416056327087,6.0
72,73,"('cmp $0xffffffff, %eax', 'jz 0x42')",0.8941293628050767,28.0
73,74,"('cmp $0xffffffff, %eax', 'jz 0xd0')",0.5879118238462206,3.0
74,75,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b')",0.4667895547981157,8.0
75,76,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c')",0.1553186745836209,8.0
76,77,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32')",0.15531867458362086,4.0
77,78,"('cmp $0xffffffff, %eax', 'mov $0xffffffff, %eax', 'cmovz %eax, %r14d', 'test %ebp, %ebp', 'jz 0x3e')",1.0582410125157204,3.0
78,79,"('cmp $0xffffffff, %ebx', 'jz 0xbd')",0.09415655944236818,4.0
79,80,"('cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",0.03299444430111547,1.0
80,81,"('cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.03299444430111547,2.0
81,82,"('cmp $0xffffffffffffffff, %rax', 'jz 0x12')",0.19609341801112268,3.0
82,83,"('cmp %r14, %rdi', 'jz 0x4a')",0.15531867458362086,48.0
83,84,"('cmp %rax, %r12', 'jb 0xfffffffffffffff0')",0.31045725778768934,200.0
84,85,"('cmp %rax, %r13', 'jbe 0xb2')",0.2716695192011563,8.0
85,86,"('cmp %rax, %r15', 'jnz 0x285')",0.42137152869746786,14.0
86,87,"('cmp %rax, %r15', 'jnz 0xfffffffffffffce0')",0.08505768585720902,8.0
87,88,"('cmp %rax, %r8', 'jnb 0xffffffffffffffa9')",0.15531867458362086,48.0
88,89,"('cmp %rbx, %r14', 'jz 0x217')",0.15531867458362086,4.0
89,90,"('cmp %rdi, %rbx', 'jz 0x179')",0.15531867458362086,4.0
90,91,"('cmp %rdx, %rbx', 'jz 0x6d')",0.15531867458362086,4.0
91,92,"('cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd')",1.8210975166074324,16.0
92,93,"('cmpb  $0x0, 0xa5e70(%rip)', 'jnz 0xc')",0.7054944590229416,3.0
93,94,"('cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718')",0.10206978074407175,8.0
94,95,"('cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62')",0.10206978074407175,8.0
95,96,"('cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa')",0.10206978074407175,8.0
96,97,"('cmpl  $0x2, -0xc(%rbp)', 'jnl 0x7e')",0.13190750951054744,6.0
97,98,"('cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d')",0.10206978074407175,8.0
98,99,"('cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95')",0.16494682251757745,21.0
99,100,"('cmpq  $0x0, (%rbp)', 'jz 0xd')",0.2073533784935016,7.0
100,101,"('cmpq  $0x0, -0x10(%rbp)', 'jnz 0xc')",0.2353133184469929,3.0
101,102,"('cmpq  $0x0, -0x500(%rbp)', 'jz 0x670')",0.10206978074407175,8.0
102,103,"('cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b')",0.10206978074407175,8.0
103,104,"('cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6')",0.2073533784935016,7.0
104,105,"('cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25')",0.11298858115046845,8.0
105,106,"('cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a')",0.2073533784935016,7.0
106,107,"('cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8')",0.5056465297704732,14.0
107,108,"('cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120')",0.10206978074407175,8.0
108,109,"('cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112')",0.10206978074407175,8.0
109,110,"('cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3')",0.2016045477279829,9.0
110,111,"('cmpq  %r14, 0x888(%rbp)', 'jbe 0x427')",0.2016045477279829,9.0
111,112,"('cmpq  %r15, 0x9f3ce(%rip)', 'cmovnbe %r13, %rax', 'movq  %rax, 0x10(%rsp)', 'movq  $0x0, 0x8(%rsp)', 'lea 0x60(%rbx), %r11', 'movl  %r14d, 0x48(%rsp)', 'movq  %rbp, 0x20(%rsp)', 'movq  0x78(%rbx), %r10', 'cmp %r11, %r10', 'jz 0x337')",1.952292362763739,10.0
112,113,"('cmpq  %rdx, 0x40(%rbp)', 'jz 0xf6')",1.0729552353660918,28.0
113,114,"('cmpq  0x8(%rdx), %r14', 'jz 0x248')",0.5879118238462206,3.0
114,115,"('cmpq  0x9d253(%rip), %rbx', 'jb 0xb3')",0.25841110260403644,16.0
115,116,"('cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6')",0.16800326398100304,9.0
116,117,"('cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16')",1.2224333619577235,8.0
117,118,"('cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f')",1.4860299866564748,7.0
118,119,"('cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  0xa4b37(%rip), %rdx', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'movq  %rbx, 0xa4b28(%rip)', 'movq  %rdx, 0x68(%rbx)', 'test $0x80, %ah', 'jnz 0x1a6')",2.15703435830927,3.0
119,120,"('cmpxchgl  %edx, 0xb6e4a(%rip)', 'cmpq  %r15, 0xb6e4b(%rip)', 'jnz 0xffffffffffffffbf')",2.6950963948017232,4.0
120,121,"('cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')",3.8802188486074862,6.0
121,122,"('imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f')",0.5902129914738355,48.0
122,123,"('jb 0x7',)",0.07532504474828694,4.0
123,124,"('jmp 0x17b',)",0.7186928789611451,4.0
124,125,"('jmp 0x2',)",0.31375041524396513,3.0
125,126,"('jmp 0x34e8f',)",0.27647068845417444,7.0
126,127,"('jmp 0xfffffffffffffbfc',)",0.13609320999676866,8.0
127,128,"('jmp 0xfffffffffffffce7',)",0.1995812519502312,8.0
128,129,"('jmp 0xfffffffffffffef1',)",0.31375041524396513,3.0
129,130,"('jmp 0xffffffffffffff47',)",0.8138215291391043,7.0
130,131,"('jmp 0xffffffffffffff6d',)",0.7186928789611451,4.0
131,132,"('jmp 0xffffffffffffffbf',)",0.16386017075721473,6.0
132,133,"('jmp 0xffffffffffffffc9',)",0.15065161053863094,4.0
133,134,"('jmp 0xffffffffffffffe5',)",0.24851089336183146,4.0
134,135,"('jnz 0x9',)",0.12425493966689671,48.0
135,136,"('lea (%r12,%r8,1), %rsi', 'mov %r14, %rdx', 'mov %rbp, %rdi', 'callq  0x260b', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x149')",1.443257318271776,6.0
136,137,"('lea (%rax,%rbx,1), %rdx', 'mov $0x1, %ecx', 'mov %rbp, %rdi', 'callq  0xfffffffffffaae28', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6')",2.7531672454690703,9.0
137,138,"('lea (%rax,%rbx,2), %rcx', 'movzxw  (%rcx), %edx', 'test %dx, %dx', 'jz 0xffffffffffffff49')",0.8153259483793693,8.0
138,139,"('lea (%rax,%rbx,8), %rax', 'sub $0x1, %edx', 'movq  0x80(%rax), %r8', 'movq  (%r8), %rsi', 'movq  %rsi, 0x80(%rax)', 'movw  %dx, (%rcx)', 'movq  $0x0, 0x8(%r8)', 'jmp 0xffffffffffffff71')",1.294220209374347,6.0
139,140,"('lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b')",0.27490638120085464,12.0
140,141,"('lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59')",0.7559923792976772,12.0
141,142,"('lea -0x1(%rax), %r8', 'movq  0xb6e31(%rip), %r15', 'movq  %r8, 0x8(%r14)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xb3')",1.7068946368814342,4.0
142,143,"('lea -0x1(%rax), %rbx', 'nopl  %eax, (%rax)', 'callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'movq  0xc50cd(%rip), %r8', 'test %r8, %r8', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",0.1583749550902151,1.0
143,144,"('lea -0x1(%rax), %rbx', 'nopl  %eax, (%rax)', 'callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'movq  0xc50cd(%rip), %r8', 'test %r8, %r8', 'jz 0x1c')",2.704395200915046,3.0
144,145,"('lea -0x1(%rbx), %rax', 'cmp $0xe, %rax', 'jbe 0x63')",0.16948160419065517,4.0
145,146,"('lea -0x11(%r13), %rax', 'shr $0x4, %rax', 'mov %rax, %r15', 'xor %eax, %eax', 'movq  %rax, 0x10(%rsp)', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x12')",1.0648870198787765,10.0
146,147,"('lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29')",0.3298929690164628,21.0
147,148,"('lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq')",1.7697612607240256,14.0
148,149,"('lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d')",0.2795736142505176,52.0
149,150,"('lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax')",1.531043669076962,8.0
150,151,"('lea 0x1(%rbx), %rdi', 'lea 0x797c4(%rip), %rsi', 'callq  0xfffffffffffe3a1f', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'movzxb  (%rsi), %eax', 'test %al, %al', 'jz 0x19e')",1.1506188315756618,5.0
151,152,"('lea 0x1(%rdi), %eax', 'cmp $0x3, %edi', 'jz 0x3f')",0.5324430029253694,10.0
152,153,"('lea 0x1(%rdx), %rax', 'movq  %rax, 0x28(%rbp)', 'movb  %bl, (%rdx)', 'movl  (%rbp), %eax', 'test $0x2, %al', 'jnz 0xb1')",3.3976895506032148,28.0
153,154,"('lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673')",0.20617894087727592,12.0
154,155,"('lea 0x17(%rdi), %rax', 'xor %ebx, %ebx', 'cmp $0x1f, %rax', 'jnbe 0x82')",0.5168230924826062,16.0
155,156,"('lea 0x2(%rdi), %eax', 'cmp $0x2, %edi', 'jz 0x26')",1.6094328530491377,2.0
156,157,"('lea 0x20(%r13), %rdx', 'cmp %rax, %rdx', 'jbe 0x262')",0.5324430029253694,10.0
157,158,"('lea 0x3396f(%rip), %rcx', 'jmp 0x11')",1.0780385579206893,4.0
158,159,"('lea 0x80(%rsp), %rax', 'movl  $0x10, 0x10(%rsp)', 'movl  0x40(%rsp), %r10d', 'movq  %rax, 0x18(%rsp)', 'lea 0x30(%rsp), %rax', 'movq  %rax, 0x20(%rsp)', 'jmp 0xffffffffffffff91')",1.1765638881601965,3.0
159,160,"('lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe')",0.24741897831308107,21.0
160,161,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",1.8435536745234182,1.0
161,162,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8')",2.673565790977441,8.0
162,163,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'retq')",1.4831255206332872,1.0
163,164,"('lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b')",0.16948160419065514,8.0
164,165,"('lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa')",0.16948160419065514,8.0
165,166,"('lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16')",0.4029919807860473,8.0
166,167,"('lea 0xac724(%rip), %rax', 'mov %rbx, %rdi', 'movq  %rax, 0xd8(%rbx)', 'callq  0x469a', 'nop %edi, %edx', 'orl  $0x240c, (%rdi)', 'pushq  %rbx', 'mov %rdi, %rbx', 'movq  $0xffffffffffffffff, 0x90(%rdi)', 'callq  0x1587', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x30, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'movl  (%rdi), %eax', 'test $0x80, %al', 'jnz 0x179')",2.7060974159815356,3.0
167,168,"('lea 0xf(%rdi), %rax', 'sub %r14, %rax', 'cmp $0x1e, %rax', 'jbe 0x6d')",0.18831362589875542,4.0
168,169,"('mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e')",0.20413905447412445,8.0
169,170,"('mov $0x0, %r13', 'mov %eax, %r12d', 'test %r13, %r13', 'jz 0x242')",0.8230770941996627,3.0
170,171,"('mov $0x0, %rbp', 'or $0x80, %al', 'mov %rdi, %rbx', 'movl  %eax, (%rdi)', 'test %rbp, %rbp', 'jz 0x189')",0.4706252848566017,3.0
171,172,"('mov $0x0, %rbp', 'test %rbp, %rbp', 'jz 0xe')",0.5390192789603446,4.0
172,173,"('mov $0x1, %eax', 'movq  0x98(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0x97')",0.6729964377813283,9.0
173,174,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",0.5390192789603446,4.0
174,175,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",0.3331731082842125,1.0
175,176,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.039593738772553774,1.0
176,177,"('mov $0x1, %eax', 'syscall', 'jz 0x1c')",0.03299444430111547,1.0
177,178,"('mov $0x1, %eax', 'syscall', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test %eax, %eax', 'jz 0xc8')",0.059389594130792644,1.0
178,179,"('mov $0x1, %ebx', 'jmp 0xfffffffffffff58c')",0.1531035303345648,8.0
179,180,"('mov $0x1, %ecx', 'cmpxchgl  %ecx, (%rdx)', 'test %eax, %eax', 'jz 0x238')",3.5274722951147077,3.0
180,181,"('mov $0x1, %ecx', 'mov %r13, %rdx', 'mov %rbp, %rsi', 'mov %rbx, %rdi', 'callq  0x4b67', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x38, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jnz 0x33a')",2.0785959094749136,3.0
181,182,"('mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b')",3.792345931194436,14.0
182,183,"('mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4')",1.147589727020487,8.0
183,184,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa5f35(%rip)', 'movq  %rbx, 0xa5f36(%rip)', 'movl  0xa5f2c(%rip), %eax', 'movq  0xa3351(%rip), %rbx', 'lea 0x1(%rax), %edx', 'movl  %edx, 0xa5f1c(%rip)', 'test %rbx, %rbx', 'jz 0x13e')",5.643955672183533,3.0
184,185,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa623d(%rip)', 'movq  %rbx, 0xa623e(%rip)', 'movl  0xa6234(%rip), %eax', 'movq  0xa3659(%rip), %rbx', 'xor %r14d, %r14d', 'lea 0x1(%rax), %edx', 'movl  %edx, 0xa6221(%rip)', 'test %rbx, %rbx', 'jz 0x133')",4.401991538697176,4.0
185,186,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7774(%rip)', 'movq  %r12, 0xa7775(%rip)', 'movl  0xa776b(%rip), %edx', 'movl  (%rbx), %ecx', 'movq  %rbx, 0xa774e(%rip)', 'add $0x1, %edx', 'movl  %edx, 0xa7759(%rip)', 'and $0x8000, %ecx', 'jnz 0x9f')",1.8432839430653047,3.0
186,187,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125')",1.1974857371523207,8.0
187,188,"('mov $0x1004, %r8d', 'mov $0x1, %edx', 'mov $0x440, %ecx', 'jmp 0xfffffffffffffec0')",0.43140673645811556,3.0
188,189,"('mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23')",1.4326641536549691,14.0
189,190,"('mov $0x493170, %eax', 'test %rax, %rax', 'jz 0xc')",0.5390192789603446,4.0
190,191,"('mov $0x496060, %rdi', 'mov $0x0, %al', 'callq  0xf060', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')",6.610406190678933,6.0
191,192,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')",0.5924793441388115,4.0
192,193,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f', 'add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1', 'movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7', 'movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e', 'cmp $0x2f, %eax', 'jnbe 0x7b4', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036', 'test %r11, %r11', 'js 0xb40', 'movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc', 'movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39', 'xor %r15d, %r15d', 'jmp 0x91', 'movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42', 'vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6', 'tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d', 'movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37', 'add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq', 'addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c', 'movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'jmp 0xffffffffffffffe5', 'movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf0fe', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d', 'test %rsi, %rsi', 'jz 0x294', 'movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f', 'cmpq  $0x0, (%rbp)', 'jz 0xd', 'movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1', 'mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5', 'movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4', 'test $0x1, %ah', 'jz 0x34', 'cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103', 'movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax', 'nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df', 'movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6', 'test $0x202, %eax', 'jz 0xe5', 'mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39', 'movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35', 'movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6', 'and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121', 'movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11', 'jmp 0x34e8f', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq')",19.518368613690598,1.0
193,194,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f', 'add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1', 'movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7', 'movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e', 'cmp $0x2f, %eax', 'jnbe 0x7b4', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036', 'test %r11, %r11', 'js 0xb40', 'movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq')",33.32541088438895,1.0
194,195,"('mov $0x4b3e00, %edi', 'callq  0x915cb', 'jz 0x29d')",0.08578677201654585,1.0
195,196,"('mov $0x4b3e00, %edi', 'callq  0x915cb', 'nop %edi, %edx', 'jmp 0xfffffffffffffecc')",2.1164833770688247,3.0
196,197,"('mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39')",1.1404408293524413,7.0
197,198,"('mov $0x4c52c8, %rbx', 'mov $0x4c52d0, %rax', 'cmp %rax, %rbx', 'jnb 0x20')",0.6288560789607449,4.0
198,199,"('mov $0x5, %eax', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')",0.3331731082842125,1.0
199,200,"('mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.47506300956032604,2.0
200,201,"('mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",0.33675093721169524,6.0
201,202,"('mov $0x8, %eax', 'mov $0xa, %edx', 'xor %ebp, %ebp', 'cdqe', 'lea 0x998ac(%rip), %rsi', 'movq  (%rsi,%rax,8), %r8', 'lea 0x99861(%rip), %rsi', 'movzxb  (%rsi,%rax,1), %eax', 'movb  %al, 0x12(%rsp)', 'test %cl, %cl', 'jz 0x220')",0.9319150895858396,4.0
202,203,"('mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3')",0.4933360483124674,8.0
203,204,"('mov $0xffffffff, %esi', 'mov %rbp, %rdi', 'callq  0x18(%rax)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')",2.2370486067147097,6.0
204,205,"('mov $0xffffffff, %esi', 'mov %rbx, %rdi', 'callq  0x18(%r15)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')",2.7849331948021234,4.0
205,206,"('mov %eax, %ebp', 'jmp 0xfffffffffffffee3')",0.18434150906915558,6.0
206,207,"('mov %eax, %ebx',)",3.9987465579156427,7.0
207,208,"('mov %eax, %edi', 'callq  0xd98e', 'nop %edi, %edx', 'pushq  %rax', 'popq  %rax', 'mov $0x1, %ecx', 'mov $0x1, %edx', 'lea 0xb2ea9(%rip), %rsi', 'sub $0x8, %rsp', 'callq  0xfffffffffffffd25', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'mov %edi, %ebp', 'pushq  %rbx', 'mov %rsi, %rbx', 'sub $0x8, %rsp', 'cmpq  $0x0, 0xb3036(%rip)', 'jz 0xa')",5.92921206856379,4.0
208,209,"('mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movl  $0x0, -0x4d8(%rbp)', 'movq  (%rdx), %rax', 'movl  $0x0, -0x518(%rbp)', 'movq  %rax, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'jmp 0xfffffffffffffcf4')",0.6779304728747726,4.0
209,210,"('mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036')",0.2734524339990061,4.0
210,211,"('mov %eax, %edx', 'movl  0x860(%rbx,%rdx,4), %esi', 'test %esi, %esi', 'jnz 0x244')",1.251781107927107,2.0
211,212,"('mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')",1.1963092409455613,17.0
212,213,"('mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c')",0.2688062138636865,9.0
213,214,"('mov %eax, %r12d', 'test %r12d, %r12d', 'js 0x94')",0.2597782659062978,4.0
214,215,"('mov %eax, %r13d', 'test %eax, %eax', 'jnz 0x102')",167.29732695507641,1.0
215,216,"('mov %eax, %r14d', 'shr $0x4, %r14d', 'cmpq  0xa1cfa(%rip), %rax', 'jbe 0x272')",0.47328339035359973,10.0
216,217,"('mov %ebp, %edi', 'callq  0x40c9b', 'nop %edi, %edx', 'mov $0xffffffffffffffc0, %r9', 'mov %edi, %edx', 'mov $0xe7, %r8d', 'mov $0x3c, %esi', 'jmp 0x17')",2.5868125657383243,3.0
217,218,"('mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42')",0.4659570377789008,4.0
218,219,"('mov %edx, %edi', 'mov %r8d, %eax')",0.6790986331745723,1.0
219,220,"('mov %edx, %edi', 'mov %r8d, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",0.04619303324399208,1.0
220,221,"('mov %edx, %edi', 'mov %r8d, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.04619303324399208,1.0
221,222,"('mov %esi, %ebx', 'movq  0x20(%rdi), %rsi', 'test $0x8, %ah', 'jz 0x52')",1.5261704237783997,38.0
222,223,"('mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824')",0.27218489895148024,8.0
223,224,"('mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.9882017579202889,4.0
224,225,"('mov %r12, %rax', 'sub %rbx, %rax', 'jmp 0xffffffffffffffd5')",0.5284909075160313,9.0
225,226,"('mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.20714514059283662,8.0
226,227,"('mov %r12d, %edx', 'mov %rbp, %rsi', 'mov $0xffffff9c, %edi', 'mov $0x101, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')",0.4997576343702426,2.0
227,228,"('mov %r12d, %edx', 'mov %rbp, %rsi', 'mov $0xffffff9c, %edi', 'mov $0x101, %eax', 'syscall', 'jnz 0x52e')",0.05279232771543038,1.0
228,229,"('mov %r12d, %esi', 'mov $0x2, %edi', 'callq  0x250ee', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74')",808.6037455974986,1.0
229,230,"('mov %r13d, %eax', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')",306.7117627042133,1.0
230,231,"('mov %r14, %rax', 'xor %edx, %edx', 'div %rcx', 'sub %rdx, %r8', 'test %r8, %r8', 'jnz 0x4b')",10.680102938377496,6.0
231,232,"('mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425')",0.5056465297704732,14.0
232,233,"('mov %r8, %rax', 'retq')",0.08505768585720902,8.0
233,234,"('mov %rax, %r12', 'test %rax, %rax', 'jz 0x160')",0.215741360479549,5.0
234,235,"('mov %rax, %r13', 'movzxw  0x80(%rbx), %eax', 'test %r13, %r13', 'jz 0x7')",0.42279335696360426,9.0
235,236,"('mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434')",0.23520538079583472,9.0
236,237,"('mov %rax, %r8', 'test %rax, %rax', 'jz 0xc8')",0.36708941674167067,9.0
237,238,"('mov %rax, %rbx', 'lea 0xe0(%rax), %rax', 'xor %edx, %edx', 'xor %esi, %esi', 'movq  %rax, 0x88(%rbx)', 'lea 0xf0(%rbx), %rcx', 'mov %rbx, %rdi', 'mov %rbx, %r12', 'lea 0xac4f0(%rip), %r8', 'callq  0x6f00', 'nop %edi, %edx', 'or $0xfbad0000, %esi', 'movl  $0x0, 0x74(%rdi)', 'movl  %esi, (%rdi)', 'movl  0xa6513(%rip), %esi', 'test %esi, %esi', 'jz 0x9')",1.8040640426294348,3.0
238,239,"('mov %rax, %rbx', 'test %rax, %rax', 'jz 0xfffffffffffffe44')",0.2353133184469929,6.0
239,240,"('mov %rax, %rcx', 'mov %rax, %rdi', 'mov %rax, %rsi', 'mov %rax, %r15', 'shr $0xc, %rsi', 'shr $0xf, %r15', 'mov $0x2, %edx', 'shr $0x6, %rcx', 'shr $0x9, %rdi', 'lea 0x77(%r15), %r10d', 'movq  %rsi, 0x58(%rsp)', 'shr $0x12, %rax', 'cmp $0xbffff, %r13', 'movq  %r15, 0x60(%rsp)', 'lea 0x30(%rcx), %r11d', 'cmovnbe %rdx, %rax', 'mov %r15, %rdx', 'lea 0x6e(%rsi), %r15d', 'movq  %rcx, 0x40(%rsp)', 'movq  %rdi, 0x50(%rsp)', 'lea 0x7c(%rax), %r9d', 'mov %rsi, %rax', 'mov %edi, %esi', 'movl  %r11d, 0x4c(%rsp)', 'add $0x5b, %esi', 'movl  %r9d, 0x68(%rsp)', 'movl  %r10d, 0x6c(%rsp)', 'movl  %r15d, 0x70(%rsp)', 'movl  %esi, 0x74(%rsp)', 'movl  %r11d, 0x28(%rsp)', 'cmp $0x30, %rcx', 'jbe 0x20')",4.910312335640091,10.0
240,241,"('mov %rax, %rsi', 'test %rax, %rax', 'jz 0x53')",0.36708941674167067,9.0
241,242,"('mov %rbp, %rdi', 'callq  0x1025', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7')",1.1546051109968596,6.0
242,243,"('mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec')",0.7234808658496691,8.0
243,244,"('mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')",0.37662826582554876,8.0
244,245,"('mov %rbp, %rdx', 'mov %r12, %rsi', 'mov %rbx, %rdi', 'callq  0x78(%r14)', 'nop %edi, %edx', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'test %rdx, %rdx', 'jle 0x84')",1.9016886624641698,8.0
245,246,"('mov %rbp, %rsi', 'lea 0x9d283(%rip), %rdi', 'callq  0xffffffffffffda13', 'test %rsi, %rsi', 'js 0x60d')",1.0648870198787765,10.0
246,247,"('mov %rbx, %r13', 'test %r14, %r14', 'jz 0xffffffffffffff62')",0.4329774658890096,6.0
247,248,"('mov %rbx, %r14', 'movq  0xd8(%rbp), %rax', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %rax, %rdx', 'sub %r15, %r13', 'sub %r15, %rdx', 'cmp %rdx, %r13', 'jbe 0x1ac')",1.0824421436804668,6.0
248,249,"('mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')",0.8335683127833606,8.0
249,250,"('mov %rbx, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.3955248811196709,5.0
250,251,"('mov %rbx, %rdi', 'callq  0x14ad', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x30, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'movl  (%rdi), %eax', 'test $0x80, %al', 'jnz 0x179')",1.4023160038385618,5.0
251,252,"('mov %rbx, %rdi', 'callq  0x36c9', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7')",0.6275001544692382,3.0
252,253,"('mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb')",0.9330874508589396,7.0
253,254,"('mov %rbx, %rdi', 'callq  0x60(%r13)', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x28(%rdi), %rdx', 'movq  0x20(%rdi), %rsi', 'cmp %rsi, %rdx', 'jbe 0x38')",3.8802188486074862,3.0
254,255,"('mov %rbx, %rdi', 'callq  0x68(%rbp)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0xa0, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x98(%rsp)', 'xor %eax, %eax', 'movl  0x70(%rdi), %eax', 'test %eax, %eax', 'js 0xae')",2.4472599990898485,9.0
255,256,"('mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9')",0.4581777526805524,9.0
256,257,"('mov %rbx, %rdi', 'callq  0xfffffffffffb2591', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')",1.8931331558031843,10.0
257,258,"('mov %rbx, %rdi', 'jz 0x5f')",0.20485191618485296,1.0
258,259,"('mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa')",0.5437301490165771,10.0
259,260,"('mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3')",0.47773779370599107,64.0
260,261,"('mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c')",0.8972268497237615,22.0
261,262,"('mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e')",0.16494682251757745,21.0
262,263,"('mov %rsi, %rbp', 'mov %rdx, %r12', 'mov %rdx, %rbx', 'jmp 0x1a')",0.5976734492565627,8.0
263,264,"('mov %rsp, %rsi', 'mov %rbp, %rdi', 'callq  0x90(%rbx)', 'nop %edi, %edx', 'mov %rsi, %rdx', 'movl  0x70(%rdi), %esi', 'mov $0x1, %edi', 'jmp 0x35421')",1.4071743699064134,9.0
264,265,"('movb  $0x1, 0xb575e(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xa8')",0.9882017579202889,4.0
265,266,"('movb  $0x1, 0xc372f(%rip)', 'popq  %rbp', 'retq')",0.8983649579198888,4.0
266,267,"('movd %eax, %xmm1', 'movd %edx, %xmm2', 'mov %rdi, %rax', 'and $0xfff, %eax', 'punpcklbw %xmm1, %xmm1', 'cmp $0xfbf, %rax', 'punpcklbw %xmm2, %xmm2', 'punpcklwd %xmm1, %xmm1', 'punpcklwd %xmm2, %xmm2', 'pshufd $0x0, %xmm1, %xmm1', 'pshufd $0x0, %xmm2, %xmm2', 'jnbe 0x305')",2.7845345127785084,6.0
267,268,"('movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36')",3.9035881387717093,14.0
268,269,"('movdqux  (%rdi), %xmm3', 'pxor %xmm5, %xmm5', 'movdqux  0x1(%rdi), %xmm4', 'movdqa %xmm3, %xmm6', 'pcmpeqb %xmm1, %xmm3', 'pcmpeqb %xmm2, %xmm4', 'movdqux  0x10(%rdi), %xmm0', 'pcmpeqb %xmm5, %xmm6', 'pminub %xmm4, %xmm3', 'movdqa %xmm3, %xmm4', 'movdqux  0x11(%rdi), %xmm3', 'pcmpeqb %xmm0, %xmm5', 'pcmpeqb %xmm2, %xmm3', 'por %xmm6, %xmm4', 'pcmpeqb %xmm1, %xmm0', 'pminub %xmm3, %xmm0', 'por %xmm5, %xmm0', 'pmovmskb %xmm4, %r8d', 'pmovmskb %xmm0, %eax', 'shl $0x10, %rax', 'or %rax, %r8', 'jz 0x68')",1.6064022612528401,6.0
269,270,"('movl  $0x0, -0x18(%rbp)',)",0.35919186870265774,1.0
270,271,"('movl  $0x0, -0xc(%rbp)',)",0.35919186870265774,1.0
271,272,"('movl  $0x0, 0x14(%rsp)', 'cmp $0x2b, %cl', 'jz 0x171')",0.3106383631952798,4.0
272,273,"('movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3')",0.5712121340974048,9.0
273,274,"('movl  $0x5, -0x10(%rbp)',)",0.03854793785600849,6.0
274,275,"('movl  $0xffffffff, 0x70(%rbx)', 'popq  %rbx', 'retq')",0.39218818805962946,3.0
275,276,"('movl  $0xffffffff, 0xc0(%rbx)', 'movq  0x68(%rbx), %rbx', 'test %rbx, %rbx', 'jz 0x10f')",1.528571553222604,9.0
276,277,"('movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b')",0.7937912884429347,6.0
277,278,"('movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5')",0.43140673645811556,3.0
278,279,"('movl  %ebx, -0x14(%rbp)',)",0.4622240625616008,6.0
279,280,"('movl  %esi, 0x28(%rsp)', 'cmp $0x14, %rdi', 'jbe 0x16')",0.2631955403944273,8.0
280,281,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",0.059389594130792644,1.0
281,282,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x190')",0.31375041524396513,3.0
282,283,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x1eb')",0.9406597293763833,3.0
283,284,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d')",0.1995812519502312,8.0
284,285,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90')",0.27647068845417444,7.0
285,286,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0xc7')",0.7186928789611451,4.0
286,287,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103')",0.1746336271448285,8.0
287,288,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x123')",0.41412296655939984,10.0
288,289,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x196')",0.274531866845479,3.0
289,290,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f')",0.5899208065377369,14.0
290,291,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d8')",0.8230770941996627,3.0
291,292,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238')",0.1746336271448285,8.0
292,293,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x26b')",0.6288560789607449,4.0
293,294,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x297')",0.8230770941996627,3.0
294,295,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x69')",0.274531866845479,3.0
295,296,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x8f')",0.6288560789607449,4.0
296,297,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc')",0.23520538079583472,9.0
297,298,"('movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b')",0.6535060865369886,8.0
298,299,"('movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5')",0.21744715844510726,4.0
299,300,"('movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42')",0.1746336271448285,8.0
300,301,"('movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3')",0.22597665528691785,8.0
301,302,"('movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0')",0.18831362589875542,8.0
302,303,"('movl  (%rbx), %eax', 'mov $0xffffffffffffffff, %r12', 'test $0x80, %ah', 'jnz 0x2f')",0.24851089336183146,4.0
303,304,"('movl  (%rbx), %eax', 'movq  0x38(%rbx), %rdi', 'mov %eax, %edx', 'test %rbp, %rbp', 'jz 0x57')",1.4109889180458832,3.0
304,305,"('movl  (%rbx), %eax', 'test $0x1, %al', 'jz 0x122')",0.8230770941996627,3.0
305,306,"('movl  (%rbx), %eax', 'test $0x202, %eax', 'jnz 0xfffffffffffffe18')",0.274531866845479,3.0
306,307,"('movl  (%rbx), %ebp', 'and $0x2, %ebp', 'jnz 0xffffffffffffffe4')",0.8230770941996626,9.0
307,308,"('movl  (%rbx), %edx', 'mov %ebp, %eax', 'and $0x1004, %ebp', 'movl  %r12d, 0x70(%rbx)', 'and $0x100c, %eax', 'and $0xffffeff3, %edx', 'or %eax, %edx', 'movl  %edx, (%rbx)', 'cmp $0x1004, %ebp', 'jnz 0x3b')",0.8659251869555705,4.0
308,309,"('movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35')",0.24191203347383805,7.0
309,310,"('movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b')",0.345588288137144,7.0
310,311,"('movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test %eax, %eax', 'jz 0xc8')",0.9406597293763833,3.0
311,312,"('movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1')",0.24947599454701763,8.0
312,313,"('movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq')",0.18230145366133105,4.0
313,314,"('movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f')",0.5899208065377369,14.0
314,315,"('movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239')",0.7314990390533078,8.0
315,316,"('movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96')",0.22115114936098715,8.0
316,317,"('movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932')",0.17011562522142756,8.0
317,318,"('movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a')",0.20413905447412445,8.0
318,319,"('movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35')",0.22115114936098715,8.0
319,320,"('movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x3b')",0.04619303324399208,1.0
320,321,"('movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e')",0.12639251077104424,3.0
321,322,"('movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33')",0.11908136861691543,8.0
322,323,"('movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e')",0.11908136861691543,8.0
323,324,"('movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7')",0.1063426413892812,4.0
324,325,"('movl  -0xc(%rbp), %eax', 'add $0x1, %eax', 'movl  %eax, -0xc(%rbp)', 'jmp 0xffffffffffffff7e')",0.1445571330254539,6.0
325,326,"('movl  0x14(%rsp), %ecx', 'mov %rax, %rdx', 'neg %rdx', 'test %ecx, %ecx', 'cmovnz %rdx, %rax', 'add $0x28, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.7455316660574564,4.0
326,327,"('movl  0x18(%rsp), %eax', 'and $0xf000, %eax', 'cmp $0x2000, %eax', 'jz 0x83')",0.47328339035359973,10.0
327,328,"('movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1')",0.13182009584454968,8.0
328,329,"('movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c')",0.9319150895858396,4.0
329,330,"('movl  0x28(%rsp), %eax', 'lea -0x2(%rax,%rax,1), %eax', 'lea 0x70(%rbx,%rax,8), %rax', 'movq  (%rax), %rdx', 'lea -0x10(%rax), %rcx', 'cmp %rcx, %rdx', 'jz 0xc')",1.3606887332385615,10.0
330,331,"('movl  0x28(%rsp), %eax', 'lea 0x1(%rax), %ecx', 'add %eax, %eax', 'mov %ecx, %edi', 'lea 0x60(%rbx,%rax,8), %rdx', 'shr $0x5, %edi', 'mov %edi, %eax', 'movl  0x860(%rbx,%rax,4), %esi', 'mov $0x1, %eax', 'shl %cl, %eax', 'nop', 'cmp %esi, %eax', 'jnbe 0x1ae')",1.4790099864381765,10.0
331,332,"('movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0xffffffffffffff10')",1.2934062828691621,3.0
332,333,"('movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa76e0(%rip), %edx', 'jnz 0x3e')",0.5098451852924719,3.0
333,334,"('movl  0x70(%r13), %edi', 'mov %rbx, %rdx', 'mov %rbp, %rsi', 'testb  $0x2, 0x74(%r13)', 'jz 0xffffffffffffffdc')",0.5433392919093221,8.0
334,335,"('movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b')",0.13182009584454968,8.0
335,336,"('movl  0x8(%rbx), %eax', 'test %eax, %eax', 'jz 0x228')",0.41412296655939984,10.0
336,337,"('movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9')",0.23520538079583472,9.0
337,338,"('movl  0xa5dde(%rip), %eax', 'sub $0x1, %eax', 'movl  %eax, 0xa5dd5(%rip)', 'test %eax, %eax', 'jnz 0x24')",1.4109889180458832,3.0
338,339,"('movl  0xa60ee(%rip), %eax', 'sub $0x1, %eax', 'movl  %eax, 0xa60e5(%rip)', 'test %eax, %eax', 'jnz 0x20')",1.4109889180458832,3.0
339,340,"('movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127')",0.13182009584454968,8.0
340,341,"('movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x10')",0.8230770941996627,3.0
341,342,"('movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jnle 0xffffffffffffff0b')",0.681825446753177,11.0
342,343,"('movl  0xc0(%rbx), %edx', 'test %edx, %edx', 'jz 0xffffffffffffffda')",0.8230770941996625,6.0
343,344,"('movl  0xc0(%rdi), %edx', 'test %edx, %edx', 'jle 0x28')",0.13182009584454968,4.0
344,345,"('movq  $0x0, (%rax)', 'movq  $0x0, 0x8(%rax)', 'movl  %edx, 0xc0(%rdi)', 'test %edx, %edx', 'js 0x3c')",0.6667200549051086,3.0
345,346,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6')",0.20714514059283662,8.0
346,347,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x158')",0.43140673645811556,3.0
347,348,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1a8')",1.2934062828691621,3.0
348,349,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6')",0.9270177687456449,14.0
349,350,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf')",0.27442361935242027,8.0
350,351,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee')",0.34170209811200397,8.0
351,352,"('movq  $0x0, 0x8(%rsp)', 'lea -0x1b90(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe01')",1.7967314368818346,4.0
352,353,"('movq  $0x0, 0x8(%rsp)', 'lea -0x1ed8(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffdc1')",2.351648647422267,3.0
353,354,"('movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00')",0.49895249610805426,8.0
354,355,"('movq  $0x0, 0x8(%rsp)', 'lea -0x5e0(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe7a')",0.784375700100567,3.0
355,356,"('movq  $0x0, 0xa5dca(%rip)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xa0')",1.2934062828691621,3.0
356,357,"('movq  $0x0, 0xa60da(%rip)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x72')",1.2934062828691621,3.0
357,358,"('movq  $0x0, 0xa6155(%rip)', 'movq  0x68(%rbx), %rbx', 'test %rbx, %rbx', 'jz 0x6e')",1.3842930751019982,10.0
358,359,"('movq  $0x0, 0xa7683(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa768e(%rip)', 'jnz 0x24')",0.5098451852924719,3.0
359,360,"('movq  $0x0, 0xa7685(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xb3')",0.43140673645811556,3.0
360,361,"('movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147')",0.27442361935242027,8.0
361,362,"('movq  $0xffffffffffffffff, 0x90(%rbx)', 'movl  (%rbx), %edx', 'mov %edx, %ecx', 'or $0x20, %edx', 'or $0x10, %ecx', 'test %rax, %rax', 'mov $0xffffffff, %eax', 'cmovz %ecx, %edx', 'movl  %edx, (%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",1.0561700292527363,4.0
362,363,"('movq  $0xffffffffffffffff, 0x90(%rbx)', 'xor %eax, %eax', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')",1.6461541883993254,3.0
363,364,"('movq  $0xffffffffffffffff, 0x90(%rdi)', 'jmp 0xffffffffffffff80')",0.22597665528691788,4.0
364,365,"('movq  %fs:0x10, %r12', 'cmpq  %r12, 0xa779a(%rip)', 'jz 0x25')",0.39218818805962946,3.0
365,366,"('movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25')",0.22452760922058637,8.0
366,367,"('movq  %fs:0x10, %r12', 'jmp 0xaf')",1.0780385579206893,4.0
367,368,"('movq  %fs:0x10, %r14', 'jmp 0x1d')",1.4109889180458832,3.0
368,369,"('movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0xfb')",501.8919828932853,1.0
369,370,"('movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'nop %edi, %edx', 'movzxb  (%rsi), %eax', 'test %al, %al', 'jz 0x19e')",1.1661038509386674,1.0
370,371,"('movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0xa6263(%rip)', 'jz 0x25')",0.8983649579198888,4.0
371,372,"('movq  %fs:0x10, %rbx', 'cmpq  0xa5f5b(%rip), %rbx', 'jz 0x25')",1.0582410125157204,3.0
372,373,"('movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'lea 0xe0(%rsp), %rax', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x10, (%rsp)', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x320b', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2')",1.8831393010716677,4.0
373,374,"('movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2')",11.59741271172425,10.0
374,375,"('movq  %fs:0xffffffffffffffc8, %rax', 'test %rax, %rax', 'jz 0x88')",0.4651399846872656,16.0
375,376,"('movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a')",0.2749107270353033,21.0
376,377,"('movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967')",0.30383626311623735,4.0
377,378,"('movq  %rax, (%rbp)', 'test %rax, %rax', 'jz 0xfc')",0.35296828762375926,3.0
378,379,"('movq  %rax, (%rcx)', 'test %rbp, %rbp', 'jz 0xe')",0.8085281579194884,4.0
379,380,"('movq  %rax, -0x10(%rbp)', 'cmpq  $0x0, -0x18(%rbp)', 'jnz 0xc')",0.39218818805962946,3.0
380,381,"('movq  %rax, -0x18(%rbp)', 'mov $0x49608d, %rdi', 'mov $0x4ab33a, %rsi', 'callq  0x16867', 'nop %edi, %edx', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'mov $0x1d8, %edi', 'pushq  %rbx', 'sub $0x8, %rsp', 'callq  0xdc37', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')",3.6648960789020326,1.0
381,382,"('movq  %rax, -0x18(%rbp)', 'mov $0x49608d, %rdi', 'mov $0x4ab33a, %rsi', 'callq  0x16957', 'nop %edi, %edx', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'mov $0x1d8, %edi', 'pushq  %rbx', 'sub $0x8, %rsp', 'callq  0xdc37', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')",2.050213602700062,2.0
382,383,"('movq  %rax, -0x20(%rbp)', 'cmpq  $0x0, -0x8(%rbp)', 'jz 0xb')",0.3106383631952798,4.0
383,384,"('movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4')",0.27957361425051763,8.0
384,385,"('movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",3.1982417278423196,3.0
385,386,"('movq  %rbx, 0xa6145(%rip)', 'test %ebp, %ebp', 'jz 0x40')",0.8766316637184608,11.0
386,387,"('movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",2.130456683432749,1.0
387,388,"('movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')",0.6930342756399417,7.0
388,389,"('movq  %rdx, 0x30(%rbp)', 'cmp $0xffffffff, %ebx', 'jnz 0xffffffffffffff4f')",1.6094328530491377,2.0
389,390,"('movq  %rdx, 0xa4e4a(%rip)', 'and $0x7f, %sil', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jnz 0x109')",0.26364019168909936,4.0
390,391,"('movq  (%r14), %rax', 'movq  %rax, (%rbx)', 'test %rax, %rax', 'jz 0xa')",1.1678753579210894,4.0
391,392,"('movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55')",0.4659570377789008,4.0
392,393,"('movq  -0x10(%rbp), %rdi', 'callq  0x163b3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",0.7559923792976773,3.0
393,394,"('movq  -0x10(%rbp), %rdi', 'callq  0x164a3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",0.21776454922100774,1.0
394,395,"('movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xed6c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')",0.939263750777375,3.0
395,396,"('movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xee5c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')",0.2705568769364381,1.0
396,397,"('movq  -0x18(%rbp), %rdi', 'callq  0x162e5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",1.8324480394510163,1.0
397,398,"('movq  -0x18(%rbp), %rdi', 'callq  0x163d5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",0.7559923792976773,3.0
398,399,"('movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xef1e', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04')",1.2157824365586825,3.0
399,400,"('movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf00e', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04')",0.9629788245025637,4.0
400,401,"('movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c')",0.8427436368395289,14.0
401,402,"('movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')",4.045169775524264,14.0
402,403,"('movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad')",0.9270177687456449,14.0
403,404,"('movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36')",0.8220000274186117,8.0
404,405,"('movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f')",0.1531035303345648,8.0
405,406,"('movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb')",0.17011562522142756,8.0
406,407,"('movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48')",0.23816299074084035,8.0
407,408,"('movq  -0x8(%rax), %rax', 'test $0x2, %al', 'jnz 0x20')",0.5506329984146859,9.0
408,409,"('movq  -0x8(%rbp), %rdi', 'callq  0x24a3e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')",1.2771602016626877,1.0
409,410,"('movq  -0x8(%rbp), %rdi', 'callq  0x24b2e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')",0.5269038409667471,3.0
410,411,"('movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe5d2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf')",1.6103333099469,1.0
411,412,"('movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe6c2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf')",0.6643573695765204,3.0
412,413,"('movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39')",0.35738471773868513,21.0
413,414,"('movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq')",2.0258804788857,8.0
414,415,"('movq  0x10(%rdi), %rdx', 'movq  0x20(%rdi), %rsi', 'cmp %rsi, %rdx', 'jz 0x3f')",1.1678753579210894,4.0
415,416,"('movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25')",0.3106383631952798,4.0
416,417,"('movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37')",0.7765964150022187,4.0
417,418,"('movq  0x10(%rsp), %rax', 'mov $0x78, %edi', 'movq  $0x78, (%rax)', 'callq  0xdae1', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')",1.5687520762198257,3.0
418,419,"('movq  0x18(%rax), %rdx', 'mov %rax, %r12', 'movq  0x28(%rax), %rax', 'cmp %rdx, %rbx', 'jnz 0xffffffffffffffe8')",1.2577121579214898,4.0
419,420,"('movq  0x18(%rax), %rdx', 'movq  0x20(%rax), %rdi', 'movq  $0x0, 0x10(%rax)', 'mov %ebp, %esi', 'ror $0x11, %rdx', 'xorq  %fs:0x30, %rdx', 'callq  %rdx', 'nop %edi, %edx', 'pushq  %rbp', 'lea 0xbcfb4(%rip), %rax', 'lea 0xbcf9d(%rip), %rbp', 'pushq  %rbx', 'sub %rbp, %rax', 'sub $0x8, %rsp', 'sar $0x3, %rax', 'jz 0x17')",4.491826310641501,4.0
420,421,"('movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa')",0.8427436368395289,14.0
421,422,"('movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax')",0.6220589765913183,7.0
422,423,"('movq  0x20(%rbx), %rax', 'cmpq  %rax, 0x28(%rbx)', 'jnbe 0xffffffffffffff0e')",0.9740355096760396,11.0
423,424,"('movq  0x20(%rdi), %rsi', 'movq  0x28(%rdi), %rdx', 'sub %rsi, %rdx', 'callq  0xfffffffffffffd3d', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7')",0.45195331057383575,4.0
424,425,"('movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0')",0.9381172230757194,6.0
425,426,"('movq  0x28(%rdi), %rdx', 'cmp $0xffffffff, %ebx', 'jz 0xbd')",1.5093197661579314,32.0
426,427,"('movq  0x28(%rsp), %rax', 'mov %rax, %rdx', 'shr $0x20, %rax', 'shr $0x8, %rdx', 'and $0xfffff000, %eax', 'and $0xfff, %edx', 'or %edx, %eax', 'sub $0x88, %eax', 'cmp $0x7, %eax', 'jnbe 0x13')",3.218863678042199,2.0
427,428,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x109')",0.3718007318435421,8.0
428,429,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x162')",1.1758236476924413,3.0
429,430,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163')",0.24947599454701763,8.0
430,431,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x657')",0.39218818805962946,6.0
431,432,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0xe4')",1.1758236476924413,3.0
432,433,"('movq  0x28(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xac')",0.4329631004918043,4.0
433,434,"('movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73')",0.45747185396235174,10.0
434,435,"('movq  0x3397b(%rip), %rax', 'test %rax, %rax', 'jz 0x50')",0.8085281579194884,4.0
435,436,"('movq  0x38(%rbp), %rdx', 'movl  (%rbp), %eax', 'movq  %rdx, 0x18(%rbp)', 'movq  %rdx, 0x8(%rbp)', 'movq  %rdx, 0x10(%rbp)', 'jmp 0xfffffffffffffeba')",1.8762347841607852,6.0
436,437,"('movq  0x38(%rbx), %rax', 'movl  0xc0(%rbx), %edx', 'movq  %rax, 0x18(%rbx)', 'movq  %rax, 0x8(%rbx)', 'movq  %rax, 0x10(%rbx)', 'movq  %rax, 0x28(%rbx)', 'movq  %rax, 0x20(%rbx)', 'test %edx, %edx', 'jle 0x3b')",1.6383229625314737,9.0
437,438,"('movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6')",0.4838240669476761,7.0
438,439,"('movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846')",0.21277857335806027,20.0
439,440,"('movq  0x38(%rsp), %rbx', 'lea -0x1(%rbx), %rax', 'cmp $0x1ffe, %rax', 'jnbe 0x4e')",0.7690853065189921,10.0
440,441,"('movq  0x40(%rbp), %rcx', 'cmp %rdx, %rcx', 'jz 0xe3')",0.6494653538101492,6.0
441,442,"('movq  0x40(%rbp), %rcx', 'subq  0x38(%rbp), %rcx', 'mov %r14, %r8', 'cmp $0x7f, %rcx', 'jbe 0xd')",0.8659539177499811,6.0
442,443,"('movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7')",0.9422368809848516,12.0
443,444,"('movq  0x40(%rbx), %rax', 'movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.6390522998877154,6.0
444,445,"('movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11')",0.8294111961956336,7.0
445,446,"('movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf')",0.16948160419065514,8.0
446,447,"('movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd')",0.31102847426762115,7.0
447,448,"('movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e')",0.22243435114170032,10.0
448,449,"('movq  0x48(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0xd')",0.35296828762375926,3.0
449,450,"('movq  0x50099(%rip), %r12', 'test %r12, %r12', 'jz 0x86')",250.94599246067068,1.0
450,451,"('movq  0x500ea(%rip), %rbp', 'mov %rbp, %rdi', 'test %rbp, %rbp', 'jnz 0x30')",139.69209386442358,2.0
451,452,"('movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1')",0.26364019168909936,8.0
452,453,"('movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12')",0.16948160419065514,8.0
453,454,"('movq  0x60(%rbx), %r8', 'movq  0x8(%r8), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  %rax, 0x888(%rbx)', 'jb 0x218')",0.887405140079354,10.0
454,455,"('movq  0x68(%rbx), %rax', 'and $0x7f, %sil', 'add $0x68, %rcx', 'movq  %rax, (%rcx)', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jz 0xfffffffffffffeb9')",0.5902129914738355,4.0
455,456,"('movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb')",0.22452760922058637,8.0
456,457,"('movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5')",0.30240569489415425,9.0
457,458,"('movq  0x8(%r14), %rax', 'test %rax, %rax', 'jz 0x10a')",0.8085281579194884,8.0
458,459,"('movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f')",0.3696075863694219,9.0
459,460,"('movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4')",0.44926541196733966,7.0
460,461,"('movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39')",0.5280855216403871,4.0
461,462,"('movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1')",0.4838240669476761,7.0
462,463,"('movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.7144679311407323,4.0
463,464,"('movq  0x8(%rbx), %rsi', 'subq  0x10(%rbx), %rsi', 'jz 0x41')",1.1758236476924413,3.0
464,465,"('movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191')",0.31102847426762115,7.0
465,466,"('movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d')",0.5280855216403871,4.0
466,467,"('movq  0x8(%rsp), %rbx', 'test %rbx, %rbx', 'jz 0x5')",0.27957361425051763,4.0
467,468,"('movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5')",1.2641147309535528,14.0
468,469,"('movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26')",1.1798414682143255,14.0
469,470,"('movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28')",0.349267254289657,8.0
470,471,"('movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144')",0.22597665528691785,8.0
471,472,"('movq  0x88(%rbx), %rax', 'movq  %r14, 0x8(%rax)', 'movl  $0x1, 0x4(%rax)', 'jmp 0xfffffffffffffdcf')",2.351648647422267,3.0
472,473,"('movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d')",0.46595703777890074,8.0
473,474,"('movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23')",0.4241096216918461,8.0
474,475,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x125')",0.549063733690958,3.0
475,476,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c')",0.4838240669476761,7.0
476,477,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb')",0.32431962948425425,8.0
477,478,"('movq  0x88(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffff1f')",1.0582410125157204,3.0
478,479,"('movq  0x88(%rbx), %rdx', 'test %rdx, %rdx', 'jz 0x3f')",1.0582410125157204,3.0
479,480,"('movq  0x90(%r13), %rdx', 'test %rdx, %rdx', 'js 0xc')",0.47564134355134374,9.0
480,481,"('movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc')",0.4038305819734904,4.0
481,482,"('movq  0xb26f9(%rip), %r10', 'lea -0x1(%rbp), %rsi', 'movq  0xb26de(%rip), %r11', 'mov %rbx, %rdi', 'xor %eax, %eax', 'movq  %rsi, 0x18(%rsp)', 'xor %r9d, %r9d', 'movsxd %edx, %r15', 'jmp 0x2e')",0.869787619752391,4.0
482,483,"('movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16')",0.22115114936098715,8.0
483,484,"('movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354')",1.4326641536549691,14.0
484,485,"('movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482')",0.20413905447412445,8.0
485,486,"('movq  0xd8(%r12), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x6d')",2.5035601877981377,28.0
486,487,"('movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555')",0.20413905447412445,8.0
487,488,"('movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103')",0.4838240669476761,7.0
488,489,"('movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d')",0.26364019168909936,8.0
489,490,"('movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1')",0.3460109060511613,10.0
490,491,"('movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121')",0.898529665045493,7.0
491,492,"('movq  0xd8(%rbx), %r15', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r15, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x16e')",1.2577121579214898,4.0
492,493,"('movq  0xd8(%rbx), %r15', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r15, %rsi', 'sub %rdx, %rax', 'sub %rdx, %rsi', 'cmp %rsi, %rax', 'jbe 0x19b')",1.6461541883993254,3.0
493,494,"('movq  0xd8(%rbx), %rbp', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbp, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x68')",0.7796719620415352,12.0
494,495,"('movq  0xd8(%rdi), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xff')",0.8565413714917276,9.0
495,496,"('movq %r12, %xmm0', 'movq %rbp, %xmm1', 'or $0x1, %edx', 'punpcklqdq %xmm1, %xmm0', 'movl  %edx, (%rbx)', 'movupsx  %xmm0, 0x38(%rbx)', 'jmp 0xffffffffffffffa5')",3.174724389584545,3.0
496,497,"('movqq  0x10(%rbp), %xmm0', 'movq %rcx, %xmm2', 'movq %rdx, %xmm1', 'mov %eax, %ecx', 'movqq  %xmm0, 0x8(%rbp)', 'or $0x8, %ch', 'punpcklqdq %xmm1, %xmm0', 'mov %rdx, %rsi', 'movl  %ecx, (%rbp)', 'movl  0xc0(%rbp), %ecx', 'movupsx  %xmm0, 0x18(%rbp)', 'movq %rdx, %xmm0', 'punpcklqdq %xmm2, %xmm0', 'movupsx  %xmm0, 0x28(%rbp)', 'test %ecx, %ecx', 'jnle 0xffffffffffffff5e')",3.3194910884045226,6.0
497,498,"('movqq  0x38(%rbx), %xmm0', 'mov %rbx, %rax', 'punpcklqdq %xmm0, %xmm0', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'popq  %rbx', 'retq')",2.4692299305616037,3.0
498,499,"('movqq  0xa5d38(%rip), %xmm0', 'or $0x1, %eax', 'movq  %rbx, 0xa5d2e(%rip)', 'movl  %eax, (%rbx)', 'movhpsq  0x38(%rbx), %xmm0', 'movupsx  %xmm0, 0xa8(%rbx)', 'jmp 0xfffffffffffffec5')",3.174724389584545,3.0
499,500,"('movsx %r15b, %eax', 'mov $0x1, %r11d', 'lea 0xaba97(%rip), %rsi', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %eax', 'movq  (%rsi,%rax,8), %rax', 'jmp %rax')",0.6026054281264858,4.0
500,501,"('movsx %r15b, %eax', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %ecx', 'lea 0xaae7b(%rip), %rax', 'movq  (%rax,%rcx,8), %rax', 'jmp %rax')",0.5837734064183854,4.0
501,502,"('movsxb  (%r13), %rax', 'movq  0x68(%r8), %rsi', 'mov %r13, %rbx', 'mov %rax, %rcx', 'testb  $0x20, 0x1(%rsi,%rax,2)', 'jz 0x15')",0.4038305819734904,4.0
502,503,"('movzx %bl, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",1.9670835841431307,28.0
503,504,"('movzx %cl, %ecx', 'testb  $0x4, 0x1(%r11,%rcx,2)', 'jz 0x2d')",0.21744715844510726,4.0
504,505,"('movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e')",0.18638342352838314,48.0
505,506,"('movzxb  (%r14), %esi', 'lea 0x1(%r14), %r15', 'mov %r12, %rdi', 'callq  0x18(%rbx)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')",6.437728370112437,28.0
506,507,"('movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1')",0.15065161053863088,44.0
507,508,"('movzxb  (%rdx), %eax', 'mov %rdi, %rbp', 'mov %rdx, %rbx', 'mov %ecx, %r9d', 'cmp $0x72, %al', 'jz 0x5b6')",0.39218818805962946,3.0
508,509,"('movzxb  (%rsi), %ecx', 'movb  %cl, (%rdi)', 'retq')",0.18831362589875542,4.0
509,510,"('movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c')",0.1531035303345648,8.0
510,511,"('movzxb  0x1(%rbx), %eax', 'lea 0x1(%rbx), %rdi', 'cmp $0x78, %al', 'jnle 0x25')",0.43140673645811556,3.0
511,512,"('movzxb  0x1(%rsi), %edx', 'test %dl, %dl', 'jz 0xbb')",0.27453186684547903,6.0
512,513,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",0.21744715844510729,2.0
513,514,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.21744715844510726,4.0
514,515,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'jnz 0x1eb')",0.039593738772553774,1.0
515,516,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'nop %edi, %edx', 'jmp 0xfffffffffffffecc')",0.07258818307366924,1.0
516,517,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'retq')",0.039593738772553774,1.0
517,518,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",0.04619303324399208,1.0
518,519,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.3887012836462225,1.0
519,520,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",0.3887012836462225,1.0
520,521,"('nop %edi, %edx', 'mov %edi, %r8d', 'mov %esi, %edi', 'mov %rdx, %rsi', 'cmp $0x1, %r8d', 'jnbe 0x30')",0.5506329984146859,9.0
521,522,"('nop %edi, %edx', 'movl  $0xa, -0x510(%rbp)', 'movl  -0x4e8(%rbp), %edi', 'movl  (%r14), %eax', 'test %edi, %edi', 'jz 0x65f')",0.26364019168909936,4.0
522,523,"('nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12')",0.27647068845417444,7.0
523,524,"('nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0')",0.27647068845417444,7.0
524,525,"('nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1')",0.15191762454409968,4.0
525,526,"('nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffff03e')",0.37662826582554876,4.0
526,527,"('nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffffb46')",0.37662826582554876,4.0
527,528,"('nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'test %rdi, %rdi', 'jz 0xd5')",1.6170578368810338,4.0
528,529,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')",0.4487276873848921,1.0
529,530,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d')",1.5295335278213396,6.0
530,531,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'xor %r14d, %r14d', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'xor %r12d, %r12d', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x8(%rsp)', 'test %ecx, %ecx', 'jnz 0x296')",1.180425982947671,4.0
531,532,"('nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8')",0.28247018534112356,8.0
532,533,"('nop %edi, %edx', 'sub $0x8, %rsp', 'add $0x8, %rsp', 'retq')",0.6288560789607449,4.0
533,534,"('nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7')",0.5546266915075393,10.0
534,535,"('or $0x2, %edx', 'lea 0x84(%rbx), %rbp', 'lea 0x83(%rbx), %r12', 'movl  %edx, (%rbx)', 'test %rdi, %rdi', 'jz 0x6')",2.1164833770688247,3.0
535,536,"('or %ecx, %edx', 'mov %rbp, %rdi', 'mov $0x1b6, %ecx', 'callq  0xfffffffffffff98b', 'nop %edi, %edx', 'pushq  %r12', 'xor %eax, %eax', 'pushq  %rbp', 'mov %r8d, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'mov %rsi, %rdi', 'mov %edx, %esi', 'mov %ecx, %edx', 'testb  $0x2, 0x74(%rbx)', 'jnz 0xb5')",1.411877206607189,3.0
536,537,"('orl  $0x200, (%rbp)', 'jmp 0xffffffffffffff55')",2.1459084426761077,2.0
537,538,"('popq  %rbp', 'retq')",0.2768287360076241,13.0
538,539,"('popq  %rbx', 'mov %r8, %rax', 'popq  %rbp', 'popq  %r12', 'retq')",0.5763605572520434,15.0
539,540,"('popq  %rbx', 'mov %rbp, %rdi', 'sub %rsi, %rdx', 'popq  %rbp', 'popq  %r12', 'jmp 0xfffffffffffff479')",1.267716761350209,10.0
540,541,"('popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",46.97661867824167,12.0
541,542,"('popq  %rbx', 'retq')",0.1482904462520999,10.0
542,543,"('pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203')",0.7234808658496691,8.0
543,544,"('pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test $0x2, %al', 'jz 0xc')",1.2236301122147062,9.0
544,545,"('pushq  %r15', 'lea 0x17(%rsi), %rax', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x88, %rsp', 'cmp $0x1f, %rax', 'jnbe 0x108')",2.129774242563161,10.0
545,546,"('pushq  %r15', 'pushq  %r14', 'mov %rsi, %r14', 'pushq  %r13', 'mov %rdx, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'jmp 0x58')",2.67002607260372,6.0
546,547,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab')",1.319572648658642,21.0
547,548,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'mov %rsi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r14', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %r14, %rax', 'sub %r15, %r13', 'sub %r15, %rax', 'testl  $0x1000, (%rdi)', 'jnz 0xc5')",2.3363611607210677,8.0
548,549,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df')",1.0713232296694717,7.0
549,550,"('pushq  %rbp', 'mov %rsp, %rbp', 'callq  0xffffffffffffff7f', 'mov $0x4c4b10, %eax', 'cmp $0x4c4b10, %rax', 'jz 0x15')",1.7068946368814342,4.0
550,551,"('pxor %xmm0, %xmm0', 'mov %rbx, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')",2.5068571309590895,3.0
551,552,"('pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9')",0.43914765749569207,8.0
552,553,"('pxor %xmm0, %xmm0', 'movq  %rcx, 0xa0(%rdi)', 'movq  $0x0, 0x50(%rcx)', 'movq  %r8, 0xe0(%rcx)', 'movupsx  %xmm0, (%rcx)', 'movupsx  %xmm0, 0x10(%rcx)', 'movupsx  %xmm0, 0x20(%rcx)', 'movupsx  %xmm0, 0x30(%rcx)', 'movupsx  %xmm0, 0x40(%rcx)', 'movq  $0x0, 0xa8(%rdi)', 'retq')",1.228332723575918,3.0
553,554,"('retq',)",0.1992218995304787,61.0
554,555,"('sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111')",0.4323123533921706,188.0
555,556,"('sub $0x1, %rax', 'sub %rbx, %rax', 'shr $0x3, %rax', 'lea 0x8(%rbx,%rax,8), %r12', 'nopl  %eax, (%rax)', 'callq  (%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'xor %edi, %edi', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x38, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'callq  0xfffffffffffffcdc', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %edi, %ebp', 'pushq  %rbx', 'sub $0x38, %rsp', 'mov $0x0, %r13', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %r13, %r13', 'jz 0x202')",9.253163528298222,4.0
556,557,"('sub $0x1, %rbp', 'mov %r15, %r14', 'movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0')",2.682386060359154,28.0
557,558,"('sub $0x1, %rbx', 'cmp $0xffffffffffffffff, %rbx', 'jnz 0xfffffffffffffff4')",0.5390192789603446,8.0
558,559,"('sub %r14, %rax', 'add %rax, %r13', 'jmp 0xffffffffffffff47')",0.7216286591358877,6.0
559,560,"('sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",1.1036962558597159,16.0
560,561,"('sub %rax, %rbx', 'add %rax, %rbp', 'test %rbx, %rbx', 'jle 0x55')",0.3699440183384808,9.0
561,562,"('sub %rbx, %rbp', 'test %rbp, %rbp', 'jz 0x7c')",0.11298858115046846,4.0
562,563,"('sub %rdi, %rax', 'xor %r15d, %r15d', 'mov %rax, %rdx', 'test %rdx, %rdx', 'jz 0x65')",0.15065161053863094,4.0
563,564,"('sub %rdi, %rbx', 'cmp %rbx, %rbp', 'cmovbe %rbp, %rbx', 'cmp $0x14, %rbx', 'jbe 0xffffffffffffff94')",0.16948160419065517,4.0
564,565,"('subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')",0.6834041962240079,8.0
565,566,"('subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7')",0.22597665528691785,8.0
566,567,"('subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffeef')",1.4109889180458832,3.0
567,568,"('subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16')",1.0112920455129082,14.0
568,569,"('subl  $0x1, (%rdi)', 'movl  0xa76bd(%rip), %edx', 'jmp 0x1b')",0.549063733690958,3.0
569,570,"('subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24')",0.4740048713026515,8.0
570,571,"('subl  $0x1, 0xa5dab(%rip)', 'test %r13, %r13', 'jz 0xc')",1.0582410125157204,3.0
571,572,"('subl  $0x1, 0xa60bf(%rip)', 'test %r13, %r13', 'jz 0xc')",1.0582410125157204,3.0
572,573,"('subl  $0x1, 0xa7666(%rip)', 'test %rbp, %rbp', 'jz 0xc')",0.35296828762375926,3.0
573,574,"('subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc')",0.22452760922058637,8.0
574,575,"('subl  $0x1, 0xb6ce3(%rip)', 'test %r13b, %r13b', 'jz 0x33')",0.8085281579194884,4.0
575,576,"('subl  $0x1, 0xb6d06(%rip)', 'jmp 0xfffffffffffffe66')",1.0780385579206893,4.0
576,577,"('subl  $0x1, 0xb6e0e(%rip)', 'mov %r8, %rax', 'shl $0x5, %rax', 'add %r14, %rax', 'movq  0x10(%rax), %rdx', 'cmp $0x3, %rdx', 'jz 0x34')",1.5272210368806336,4.0
577,578,"('syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",0.17978352064012196,5.0
578,579,"('syscall', 'cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')",0.21776454922100774,1.0
579,580,"('syscall', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8')",0.8329307426544551,1.0
580,581,"('test $0x1, %ah', 'jnz 0x150')",0.36081416056327087,6.0
581,582,"('test $0x1, %ah', 'jz 0x34')",0.1727935646239788,7.0
582,583,"('test $0x1, %al', 'jz 0x2b')",0.16800326398100304,9.0
583,584,"('test $0x1, %al', 'jz 0x2e')",0.5879118238462206,3.0
584,585,"('test $0x2, %ah', 'jz 0xb')",0.8941293628050767,28.0
585,586,"('test $0x202, %eax', 'jz 0xe5')",0.15531867458362086,4.0
586,587,"('test $0x202, %eax', 'jz 0xffffffffffffff53')",0.36081416056327087,6.0
587,588,"('test $0x4, %al', 'jz 0x1c')",0.30590724637922156,9.0
588,589,"('test $0x8, %al', 'jnz 0x29c')",0.13745507379535504,21.0
589,590,"('test $0x80, %ah', 'jnz 0x2f')",0.15531867458362086,4.0
590,591,"('test %al, %al', 'jz 0xfffffffffffffec1')",0.19609341801112268,3.0
591,592,"('test %ax, %ax', 'jnz 0x6d')",0.2642453410882337,9.0
592,593,"('test %bl, %bl', 'jz 0xffffffffffffff2c')",139.4144499455294,1.0
593,594,"('test %cl, %cl', 'jz 0x364')",0.18638342352838314,4.0
594,595,"('test %eax, %eax', 'js 0x73')",0.29580171335978467,10.0
595,596,"('test %ebp, %ebp', 'jnz 0x16a')",69.84604642519777,2.0
596,597,"('test %ebp, %ebp', 'jz 0x16')",139.4144499455294,1.0
597,598,"('test %ebp, %ebp', 'jz 0x3e')",0.5086379124826342,7.0
598,599,"('test %ebx, %ebx', 'jle 0x17e0')",0.08505768585720902,8.0
599,600,"('test %edx, %edx', 'jnz 0x13')",0.09415655944236818,8.0
600,601,"('test %edx, %edx', 'jnz 0x140')",0.15531867458362086,4.0
601,602,"('test %r11, %r11', 'js 0xb40')",0.07595881227204984,4.0
602,603,"('test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')",0.4896168469760172,8.0
603,604,"('test %r13, %r13', 'jz 0x2a99')",0.42137152869746786,14.0
604,605,"('test %r14, %r14', 'jnz 0x347')",0.15531867458362086,4.0
605,606,"('test %r8d, %r8d', 'js 0xa85')",0.08505768585720902,8.0
606,607,"('test %r9d, %r9d', 'jnz 0x321')",0.15531867458362086,4.0
607,608,"('test %r9d, %r9d', 'js 0x1eea')",0.08505768585720902,8.0
608,609,"('test %rax, %rax', 'jle 0x51')",0.1553186745836209,8.0
609,610,"('test %rax, %rax', 'js 0x30')",0.2642453410882337,9.0
610,611,"('test %rax, %rax', 'jz 0x1a')",0.5879118238462206,3.0
611,612,"('test %rax, %rax', 'jz 0x4f')",0.19609341801112268,6.0
612,613,"('test %rax, %rax', 'jz 0xd0')",0.19609341801112268,3.0
613,614,"('test %rbp, %rbp', 'jnz 0xcc')",0.15531867458362086,4.0
614,615,"('test %rbp, %rbp', 'jz 0x7c')",0.8941293628050767,30.0
615,616,"('test %rbx, %rbx', 'jnz 0xad')",0.09415655944236818,4.0
616,617,"('test %rdi, %rdi', 'js 0x132')",0.25841110260403644,16.0
617,618,"('test %rdi, %rdi', 'jz 0x75')",0.13745507379535504,21.0
618,619,"('test %rdx, %rdx', 'jnz 0xfffffffffffffff1')",0.15531867458362086,4.0
619,620,"('test %rsi, %rsi', 'jz 0x135')",0.36081416056327087,6.0
620,621,"('test %rsi, %rsi', 'jz 0x185')",0.8385110023244349,32.0
621,622,"('test %rsi, %rsi', 'jz 0x294')",0.1727935646239788,7.0
622,623,"('test %sil, %sil', 'jz 0x1e')",69.84604642519777,2.0
623,624,"('testb  $0x1, 0x74(%rbx)', 'jz 0x36')",0.2353133184469929,6.0
624,625,"('testb  $0x1, 0x8(%r12)', 'jnz 0x26')",0.2016045477279829,9.0
625,626,"('testb  $0x2, 0x4(%rbp)', 'jz 0x5a9')",0.2016045477279829,9.0
626,627,"('testb  $0x2, 0x8(%r12)', 'jnz 0x142')",0.2016045477279829,9.0
627,628,"('testb  $0x20, 0x74(%rbx)', 'jnz 0x37')",0.1482904462520999,10.0
628,629,"('testb  $0x80, (%rbp)', 'jz 0xe')",0.11298858115046845,8.0
629,630,"('testl  $0x202, (%rbx)', 'jnz 0xffffffffffffffc5')",0.31709490505292126,9.0
630,631,"('testl  $0x8000, (%r12)', 'jnz 0x19')",0.5056465297704732,14.0
631,632,"('tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq')",0.7775976294132136,22.0
632,633,"('tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69')",0.27957361425051763,4.0
633,634,"('vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq')",0.12153480945490638,4.0
634,635,"('vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c')",1.068286650279045,18.0
635,636,"('vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6')",0.34170209811200397,4.0
636,637,"('xor %eax, %eax', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')",0.8983649579198888,4.0
637,638,"('xor %eax, %eax', 'nopw  %ax, (%rax,%rax,1)', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1')",0.18831362589875542,4.0
638,639,"('xor %eax, %eax', 'pxor %xmm0, %xmm0', 'movq  $0x0, 0x68(%rdi)', 'movw  %ax, 0x80(%rdi)', 'movq  0x88(%rdi), %rax', 'movupsx  %xmm0, 0x8(%rdi)', 'movupsx  %xmm0, 0x18(%rdi)', 'movupsx  %xmm0, 0x28(%rdi)', 'movupsx  %xmm0, 0x38(%rdi)', 'movupsx  %xmm0, 0x48(%rdi)', 'movupsx  %xmm0, 0x58(%rdi)', 'test %rax, %rax', 'jz 0x11')",1.228332723575918,3.0
639,640,"('xor %eax, %eax', 'retq')",0.19609341801112268,6.0
640,641,"('xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e')",0.1531035303345648,8.0
641,642,"('xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72')",0.8369696163298912,8.0
642,643,"('xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6')",1.4448313151263479,9.0
643,644,"('xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea')",0.2749107270353033,21.0
644,645,"('xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x58(%r15)', 'nop %edi, %edx', 'pushq  %rbx', 'mov %rdi, %rbx', 'callq  0x3fa8', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'mov %rdx, %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r13', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r13, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xd0')",7.0549445902294154,3.0
645,646,"('xor %esi, %esi', 'mov $0x2, %edx', 'mov %rbx, %rdi', 'callq  0x80(%rbp)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x35f39')",0.8628134729162311,3.0
646,647,"('xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59')",0.5084468406280415,8.0
647,648,"('xor %r12d, %r12d', 'nop', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x1eb')",0.8983649579198888,4.0
648,649,"('xor %r15d, %r15d', 'jmp 0x91')",0.27957361425051763,4.0
649,650,"('xor %r15d, %r15d', 'jmp 0xffffffffffffff00')",0.6057225503153613,12.0
