,bb,energy
0,(),"[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"
1,"('add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[2.731594812988219, 3.70613254309618, 0.7374660870430403, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
2,"('add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4')","[0.6686358918782755, 0.1076938337499437, 0.1076938337499437, 0.1076938337499437]"
3,"('add $0x30, %rsp', 'popq  %rbp', 'retq')","[0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
4,"('add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
5,"('add $0x38, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134]"
6,"('add $0x38, %rsp', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.11878121631766134, 0.11878121631766134, 6.111887698571151]"
7,"('add $0x38, %rsp', 'mov %r14d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.11878121631766134, 0.11878121631766134, 6.111887698571151]"
8,"('add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.9439891214345513, 0.9439891214345513, 0.9439891214345513, 0.9439891214345513, 0.9439891214345513, 0.9439891214345513, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303]"
9,"('add $0x68, %rsp', 'popq  %rbp', 'popq  %r12', 'retq')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644]"
10,"('add $0x8, %rbx', 'cmp %rbx, %r12', 'jnz 0xfffffffffffffff7')","[0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
11,"('add $0x8, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416]"
12,"('add $0x8, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[2.731594812988219, 3.70613254309618, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
13,"('add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb')","[0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
14,"('add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'jmp 0x92558')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472]"
15,"('add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')","[0.5326141708581873, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472]"
16,"('add $0x88, %rsp', 'mov %r8, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[2.731594812988219, 3.70613254309618, 0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
17,"('add $0xa0, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[1.6693071525821044, 2.2648600157041567, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
18,"('add $0xd8, %rsp', 'retq')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
19,"('add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44')","[0.4506725931618157, 0.4506725931618157, 0.6108160131503387, 0.6108160131503387, 3.4318298465872936, 3.4318298465872936, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
20,"('add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c')","[2.8833501930462355, 1.0550454721585714, 1.0550454721585714, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965]"
21,"('add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b')","[1.4437467558047938, 1.4437467558047938, 0.1715735440330917, 0.1715735440330917]"
22,"('add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6')","[0.28679146582514853, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
23,"('add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
24,"('add %rbx, %rdi', 'add %rbx, %r14', 'movq  %rdi, 0x28(%r12)', 'jmp 0xfffffffffffffef4')","[0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
25,"('add %rdi, %rax', 'vzeroupper', 'retq')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644]"
26,"('addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519')","[0.4097038323697059, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
27,"('addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0')","[0.4097038323697059, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
28,"('addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644]"
29,"('and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f')","[0.7915462303667568, 0.1274917171642586, 0.1274917171642586, 0.1274917171642586]"
30,"('and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e')","[1.972817912698137, 2.6766507177761087, 0.5326141708581873, 0.7218743919304349, 0.7218743919304349, 4.055799831446836, 4.055799831446836, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
31,"('and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')","[1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398]"
32,"('and $0xfffffffffffffff0, %rax', 'lea -0x11(%rax), %rbx', 'shr $0x4, %rbx', 'jmp 0xffffffffffffff78')","[2.27632867281417, 3.088443447904137, 0.6145537204984829, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
33,"('and $0xfffffffffffffff0, %rax', 'mov %rax, %r13', 'test %rdi, %rdi', 'jz 0x504')","[1.0622876604061149, 1.4412745554480995, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
34,"('bsf %r8, %rax', 'add %rdi, %rax', 'cmpb  $0x0, (%rax)', 'jz 0x40')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924]"
35,"('callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'cmpb  $0x0, 0xc3755(%rip)', 'jnz 0x2d')","[0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 5.093239748809293]"
36,"('callq  0x3451f', 'nop %edi, %edx', 'pushq  %r12', 'mov %esi, %r10d', 'mov %esi, %r12d', 'pushq  %rbp', 'mov %rdi, %rbp', 'sub $0x68, %rsp', 'movq  %rdx, 0x40(%rsp)', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'and $0x40, %r10d', 'jnz 0x5b')","[2.1656211477352287, 2.1656211477352287, 0.25735828799356153]"
37,"('callq  0x35618', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12')","[0.888458918016465, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 5.4327890653965785]"
38,"('callq  0x4ef50', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'movl  %fs:0x18, %ebp', 'xor %r12d, %r12d', 'test %ebp, %ebp', 'setnz %r12b', 'xor %edi, %edi', 'mov %r12d, %esi', 'callq  0x25251', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74')","[5.136443722448005, 3.1762420515481162]"
39,"('callq  0x4ef50', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'movl  %fs:0x18, %ebp', 'xor %r12d, %r12d', 'test %ebp, %ebp', 'setnz %r12b', 'xor %edi, %edi', 'mov %r12d, %esi', 'callq  0x25251', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74', 'test %sil, %sil', 'jz 0x1e', 'movq  0x500ea(%rip), %rbp', 'mov %rbp, %rdi', 'test %rbp, %rbp', 'jnz 0x30', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'test %ebp, %ebp', 'jnz 0x16a', 'movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc', 'movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39', 'xor %r15d, %r15d', 'jmp 0x91', 'movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42', 'vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6', 'tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d', 'movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37', 'add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq', 'addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c', 'movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'jmp 0xffffffffffffffe5', 'movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf0fe', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d', 'test %rsi, %rsi', 'jz 0x294', 'movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f', 'cmpq  $0x0, (%rbp)', 'jz 0xd', 'movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1', 'mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5', 'movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4', 'test $0x1, %ah', 'jz 0x34', 'cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103', 'movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax', 'nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df', 'movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6', 'test $0x202, %eax', 'jz 0xe5', 'mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39', 'movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35', 'movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6', 'and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121', 'movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11', 'jmp 0x34e8f', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'movl  (%rbx), %edx', 'mov %edx, %ecx', 'or $0x20, %edx', 'or $0x10, %ecx', 'test %rax, %rax', 'mov $0xffffffff, %eax', 'cmovz %ecx, %edx', 'movl  %edx, (%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movl  (%rbx), %eax', 'mov $0xffffffffffffffff, %r12', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe7b2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'xor %r14d, %r14d', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'xor %r12d, %r12d', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x8(%rsp)', 'test %ecx, %ecx', 'jnz 0x296', 'cmp $0x1, %edx', 'jz 0x185', 'cmp $0x24, %edx', 'jnbe 0x17c', 'movsxb  (%r13), %rax', 'movq  0x68(%r8), %rsi', 'mov %r13, %rbx', 'mov %rax, %rcx', 'testb  $0x20, 0x1(%rsi,%rax,2)', 'jz 0x15', 'test %cl, %cl', 'jz 0x364', 'cmp $0x2d, %cl', 'jz 0x232', 'movl  $0x0, 0x14(%rsp)', 'cmp $0x2b, %cl', 'jz 0x171', 'cmp $0x30, %cl', 'jz 0x1c8', 'test %edx, %edx', 'jnz 0x140', 'cmp $0xa, %edx', 'jz 0xfffffffffffffec3', 'test %r14, %r14', 'jnz 0x347', 'mov $0x8, %eax', 'mov $0xa, %edx', 'xor %ebp, %ebp', 'cdqe', 'lea 0x998ac(%rip), %rsi', 'movq  (%rsi,%rax,8), %r8', 'lea 0x99861(%rip), %rsi', 'movzxb  (%rsi,%rax,1), %eax', 'movb  %al, 0x12(%rsp)', 'test %cl, %cl', 'jz 0x220', 'cmp %rbx, %r14', 'jz 0x217', 'movq  0xb26f9(%rip), %r10', 'lea -0x1(%rbp), %rsi', 'movq  0xb26de(%rip), %r11', 'mov %rbx, %rdi', 'xor %eax, %eax', 'movq  %rsi, 0x18(%rsp)', 'xor %r9d, %r9d', 'movsxd %edx, %r15', 'jmp 0x2e', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e', 'cmp %rax, %r8', 'jnb 0xffffffffffffffa9', 'jnz 0x9', 'imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f', 'cmp %r14, %rdi', 'jz 0x4a', 'lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d', 'test %rbp, %rbp', 'jnz 0xcc', 'movzx %cl, %ecx', 'testb  $0x4, 0x1(%r11,%rcx,2)', 'jz 0x2d', 'cmp %rdi, %rbx', 'jz 0x179', 'movq  0x8(%rsp), %rbx', 'test %rbx, %rbx', 'jz 0x5', 'test %r9d, %r9d', 'jnz 0x321', 'movl  0x14(%rsp), %ecx', 'mov %rax, %rdx', 'neg %rdx', 'test %ecx, %ecx', 'cmovnz %rdx, %rax', 'add $0x28, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x20(%rbp)', 'cmpq  $0x0, -0x8(%rbp)', 'jz 0xb', 'movq  -0x8(%rbp), %rdi', 'callq  0x24c1e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x18(%rbp), %rdi', 'callq  0x164c5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8', 'callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'jmp 0xfffffffffffffce7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203', 'movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00', 'movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238', 'mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d', 'cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16', 'movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb', 'test %rdx, %rdx', 'jnz 0xfffffffffffffff1', 'cmp %rdx, %rbx', 'jz 0x6d', 'movq  0x68(%rbx), %rax', 'and $0x7f, %sil', 'add $0x68, %rcx', 'movq  %rax, (%rcx)', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jz 0xfffffffffffffeb9', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf', 'subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24', 'movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147', 'subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc', 'movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163', 'add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42', 'movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4', 'mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1', 'mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa', 'movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e', 'popq  %rbx', 'retq', 'testb  $0x20, 0x74(%rbx)', 'jnz 0x37', 'movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1', 'mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9', 'nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7', 'retq', 'mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c', 'xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'test $0x1, %al', 'jz 0x2b', 'callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6', 'testb  $0x2, 0x8(%r12)', 'jnz 0x142', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc', 'movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3', 'testb  $0x2, 0x4(%rbp)', 'jz 0x5a9', 'movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f', 'movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5', 'mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434', 'cmpq  %r14, 0x888(%rbp)', 'jbe 0x427', 'movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9', 'testb  $0x1, 0x8(%r12)', 'jnz 0x26', 'cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3', 'add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c', 'cmp $0xffff, %rbx', 'jnbe 0x1b2', 'movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b', 'lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b', 'movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1', 'movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'retq', 'test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3', 'test %edx, %edx', 'jnz 0x13', 'movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6', 'subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d', 'xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8', 'movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf', 'testb  $0x80, (%rbp)', 'jz 0xe', 'popq  %rbp', 'retq', 'movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127', 'cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25', 'lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16', 'lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa', 'mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xee5c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'lea 0xe0(%rsp), %rax', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x10, (%rsp)', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x320b', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffff03e', 'movsx %r15b, %eax', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %ecx', 'lea 0xaae7b(%rip), %rax', 'movq  (%rax,%rcx,8), %rax', 'jmp %rax', 'nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffffb46', 'movsx %r15b, %eax', 'mov $0x1, %r11d', 'lea 0xaba97(%rip), %rsi', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %eax', 'movq  (%rsi,%rax,8), %rax', 'jmp %rax', 'nop %edi, %edx', 'movl  $0xa, -0x510(%rbp)', 'movl  -0x4e8(%rbp), %edi', 'movl  (%r14), %eax', 'test %edi, %edi', 'jz 0x65f', 'cmp $0x2f, %eax', 'jnbe 0xb5e', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movl  $0x0, -0x4d8(%rbp)', 'movq  (%rdx), %rax', 'movl  $0x0, -0x518(%rbp)', 'movq  %rax, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'jmp 0xfffffffffffffcf4', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73', 'mov %rbx, %r14', 'movq  0xd8(%rbp), %rax', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %rax, %rdx', 'sub %r15, %r13', 'sub %r15, %rdx', 'cmp %rdx, %r13', 'jbe 0x1ac', 'mov $0xffffffff, %esi', 'mov %rbp, %rdi', 'callq  0x18(%rax)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201', 'mov %esi, %ebx', 'movq  0x20(%rdi), %rsi', 'test $0x8, %ah', 'jz 0x52', 'test %rsi, %rsi', 'jz 0x135', 'mov %rbp, %rdi', 'callq  0x1025', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test $0x2, %al', 'jz 0xc', 'movq  0xd8(%rbx), %rbp', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbp, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x68', 'mov %rbx, %rdi', 'callq  0x68(%rbp)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0xa0, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x98(%rsp)', 'xor %eax, %eax', 'movl  0x70(%rdi), %eax', 'test %eax, %eax', 'js 0xae', 'movq  0xd8(%rdi), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xff', 'mov %rsp, %rsi', 'mov %rbp, %rdi', 'callq  0x90(%rbx)', 'nop %edi, %edx', 'mov %rsi, %rdx', 'movl  0x70(%rdi), %esi', 'mov $0x1, %edi', 'jmp 0x35421', 'nop %edi, %edx', 'mov %edi, %r8d', 'mov %esi, %edi', 'mov %rdx, %rsi', 'cmp $0x1, %r8d', 'jnbe 0x30', 'mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9', 'retq', 'test %eax, %eax', 'js 0x73', 'movl  0x18(%rsp), %eax', 'and $0xf000, %eax', 'cmp $0x2000, %eax', 'jz 0x83', 'movq  0x38(%rsp), %rbx', 'lea -0x1(%rbx), %rax', 'cmp $0x1ffe, %rax', 'jnbe 0x4e', 'mov %rbx, %rdi', 'callq  0xfffffffffffb2591', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b', 'test %rdi, %rdi', 'js 0x132', 'lea 0x17(%rdi), %rax', 'xor %ebx, %ebx', 'cmp $0x1f, %rax', 'jnbe 0x82', 'and $0xfffffffffffffff0, %rax', 'lea -0x11(%rax), %rbx', 'shr $0x4, %rbx', 'jmp 0xffffffffffffff78', 'movq  %fs:0xffffffffffffffc8, %rax', 'test %rax, %rax', 'jz 0x88', 'cmpq  0x9d253(%rip), %rbx', 'jb 0xb3', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x123', 'mov %rbp, %rsi', 'lea 0x9d283(%rip), %rdi', 'callq  0xffffffffffffda13', 'test %rsi, %rsi', 'js 0x60d', 'pushq  %r15', 'lea 0x17(%rsi), %rax', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x88, %rsp', 'cmp $0x1f, %rax', 'jnbe 0x108', 'and $0xfffffffffffffff0, %rax', 'mov %rax, %r13', 'test %rdi, %rdi', 'jz 0x504', 'mov %eax, %r14d', 'shr $0x4, %r14d', 'cmpq  0xa1cfa(%rip), %rax', 'jbe 0x272', 'cmp $0x3ff, %rax', 'jbe 0x1f6', 'mov %rax, %rcx', 'mov %rax, %rdi', 'mov %rax, %rsi', 'mov %rax, %r15', 'shr $0xc, %rsi', 'shr $0xf, %r15', 'mov $0x2, %edx', 'shr $0x6, %rcx', 'shr $0x9, %rdi', 'lea 0x77(%r15), %r10d', 'movq  %rsi, 0x58(%rsp)', 'shr $0x12, %rax', 'cmp $0xbffff, %r13', 'movq  %r15, 0x60(%rsp)', 'lea 0x30(%rcx), %r11d', 'cmovnbe %rdx, %rax', 'mov %r15, %rdx', 'lea 0x6e(%rsi), %r15d', 'movq  %rcx, 0x40(%rsp)', 'movq  %rdi, 0x50(%rsp)', 'lea 0x7c(%rax), %r9d', 'mov %rsi, %rax', 'mov %edi, %esi', 'movl  %r11d, 0x4c(%rsp)', 'add $0x5b, %esi', 'movl  %r9d, 0x68(%rsp)', 'movl  %r10d, 0x6c(%rsp)', 'movl  %r15d, 0x70(%rsp)', 'movl  %esi, 0x74(%rsp)', 'movl  %r11d, 0x28(%rsp)', 'cmp $0x30, %rcx', 'jbe 0x20', 'movl  %esi, 0x28(%rsp)', 'cmp $0x14, %rdi', 'jbe 0x16', 'movl  0x8(%rbx), %eax', 'test %eax, %eax', 'jz 0x228', 'lea -0x11(%r13), %rax', 'shr $0x4, %rax', 'mov %rax, %r15', 'xor %eax, %eax', 'movq  %rax, 0x10(%rsp)', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x12', 'cmpq  %r15, 0x9f3ce(%rip)', 'cmovnbe %r13, %rax', 'movq  %rax, 0x10(%rsp)', 'movq  $0x0, 0x8(%rsp)', 'lea 0x60(%rbx), %r11', 'movl  %r14d, 0x48(%rsp)', 'movq  %rbp, 0x20(%rsp)', 'movq  0x78(%rbx), %r10', 'cmp %r11, %r10', 'jz 0x337', 'cmp $0x3ff, %r13', 'jbe 0x25', 'movl  0x28(%rsp), %eax', 'lea -0x2(%rax,%rax,1), %eax', 'lea 0x70(%rbx,%rax,8), %rax', 'movq  (%rax), %rdx', 'lea -0x10(%rax), %rcx', 'cmp %rcx, %rdx', 'jz 0xc', 'movl  0x28(%rsp), %eax', 'lea 0x1(%rax), %ecx', 'add %eax, %eax', 'mov %ecx, %edi', 'lea 0x60(%rbx,%rax,8), %rdx', 'shr $0x5, %edi', 'mov %edi, %eax', 'movl  0x860(%rbx,%rax,4), %esi', 'mov $0x1, %eax', 'shl %cl, %eax', 'nop', 'cmp %esi, %eax', 'jnbe 0x1ae', 'lea 0x1(%rdi), %eax', 'cmp $0x3, %edi', 'jz 0x3f', 'movq  0x60(%rbx), %r8', 'movq  0x8(%r8), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  %rax, 0x888(%rbx)', 'jb 0x218', 'lea 0x20(%r13), %rdx', 'cmp %rax, %rdx', 'jbe 0x262', 'lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8', 'add $0x88, %rsp', 'mov %r8, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %rax, %r8', 'test %rax, %rax', 'jz 0xc8', 'movq  -0x8(%rax), %rax', 'test $0x2, %al', 'jnz 0x20', 'test $0x4, %al', 'jz 0x1c', 'popq  %rbx', 'mov %r8, %rax', 'popq  %rbp', 'popq  %r12', 'retq', 'mov %rax, %rsi', 'test %rax, %rax', 'jz 0x53', 'lea (%rax,%rbx,1), %rdx', 'mov $0x1, %ecx', 'mov %rbp, %rdi', 'callq  0xfffffffffffaae28', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'mov $0x1, %eax', 'movq  0x98(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0x97', 'add $0xa0, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'cmp $0xffffffff, %eax', 'jnz 0x36', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movq  0x38(%rbp), %rdx', 'movl  (%rbp), %eax', 'movq  %rdx, 0x18(%rbp)', 'movq  %rdx, 0x8(%rbp)', 'movq  %rdx, 0x10(%rbp)', 'jmp 0xfffffffffffffeba', 'test $0x1, %ah', 'jnz 0x150', 'movq  0x40(%rbp), %rcx', 'cmp %rdx, %rcx', 'jz 0xe3', 'movqq  0x10(%rbp), %xmm0', 'movq %rcx, %xmm2', 'movq %rdx, %xmm1', 'mov %eax, %ecx', 'movqq  %xmm0, 0x8(%rbp)', 'or $0x8, %ch', 'punpcklqdq %xmm1, %xmm0', 'mov %rdx, %rsi', 'movl  %ecx, (%rbp)', 'movl  0xc0(%rbp), %ecx', 'movupsx  %xmm0, 0x18(%rbp)', 'movq %rdx, %xmm0', 'punpcklqdq %xmm2, %xmm0', 'movupsx  %xmm0, 0x28(%rbp)', 'test %ecx, %ecx', 'jnle 0xffffffffffffff5e', 'test $0x202, %eax', 'jz 0xffffffffffffff53', 'cmp $0xffffffff, %ebx', 'jz 0xbd', 'popq  %rbx', 'mov %rbp, %rdi', 'sub %rsi, %rdx', 'popq  %rbp', 'popq  %r12', 'jmp 0xfffffffffffff479', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7', 'retq', 'cmp $0xffffffff, %eax', 'jz 0x150', 'movq  0x40(%rbp), %rcx', 'subq  0x38(%rbp), %rcx', 'mov %r14, %r8', 'cmp $0x7f, %rcx', 'jbe 0xd', 'mov %r14, %rax', 'xor %edx, %edx', 'div %rcx', 'sub %rdx, %r8', 'test %r8, %r8', 'jnz 0x4b', 'mov %rbx, %r13', 'test %r14, %r14', 'jz 0xffffffffffffff62', 'lea (%r12,%r8,1), %rsi', 'mov %r14, %rdx', 'mov %rbp, %rdi', 'callq  0x260b', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x149', 'pushq  %r15', 'pushq  %r14', 'mov %rsi, %r14', 'pushq  %r13', 'mov %rdx, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'jmp 0x58', 'movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0', 'sub %rdi, %rbx', 'cmp %rbx, %rbp', 'cmovbe %rbp, %rbx', 'cmp $0x14, %rbx', 'jbe 0xffffffffffffff94', 'test %rbx, %rbx', 'jnz 0xad', 'lea 0xf(%rdi), %rax', 'sub %r14, %rax', 'cmp $0x1e, %rax', 'jbe 0x6d', 'lea -0x1(%rbx), %rax', 'cmp $0xe, %rax', 'jbe 0x63', 'xor %eax, %eax', 'nopw  %ax, (%rax,%rax,1)', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1', 'jmp 0xffffffffffffffc9', 'add %rbx, %rdi', 'add %rbx, %r14', 'movq  %rdi, 0x28(%r12)', 'jmp 0xfffffffffffffef4', 'sub %rbx, %rbp', 'test %rbp, %rbp', 'jz 0x7c', 'add $0x8, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'sub %r14, %rax', 'add %rax, %r13', 'jmp 0xffffffffffffff47', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73', 'sub %rdi, %rax', 'xor %r15d, %r15d', 'mov %rax, %rdx', 'test %rdx, %rdx', 'jz 0x65', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'cmp $0x1, %dl', 'jnbe 0x3d', 'jb 0x7', 'movzxb  (%rsi), %ecx', 'movb  %cl, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq', 'movq  -0x10(%rbp), %rdi', 'callq  0x164a3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8', 'callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'jmp 0xfffffffffffffce7', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203', 'movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00', 'movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238', 'mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d', 'cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16', 'movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb', 'movq  %rdx, 0xa4e4a(%rip)', 'and $0x7f, %sil', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jnz 0x109', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf', 'subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24', 'movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147', 'subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc', 'movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163', 'add $0x30, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42', 'movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4', 'mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1', 'movl  0xc0(%rdi), %edx', 'test %edx, %edx', 'jle 0x28', 'movq  0x20(%rdi), %rsi', 'movq  0x28(%rdi), %rdx', 'sub %rsi, %rdx', 'callq  0xfffffffffffffd3d', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'mov %rsi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r14', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %r14, %rax', 'sub %r15, %r13', 'sub %r15, %rax', 'testl  $0x1000, (%rdi)', 'jnz 0xc5', 'movq  $0xffffffffffffffff, 0x90(%rdi)', 'jmp 0xffffffffffffff80', 'cmp %rax, %r13', 'jbe 0xb2', 'mov %rbp, %rdx', 'mov %r12, %rsi', 'mov %rbx, %rdi', 'callq  0x78(%r14)', 'nop %edi, %edx', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'test %rdx, %rdx', 'jle 0x84', 'mov %rsi, %rbp', 'mov %rdx, %r12', 'mov %rdx, %rbx', 'jmp 0x1a', 'movl  0x70(%r13), %edi', 'mov %rbx, %rdx', 'mov %rbp, %rsi', 'testb  $0x2, 0x74(%r13)', 'jz 0xffffffffffffffdc', 'callq  0x35618', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53', 'retq', 'test %rax, %rax', 'js 0x30', 'sub %rax, %rbx', 'add %rax, %rbp', 'test %rbx, %rbx', 'jle 0x55', 'mov %r12, %rax', 'sub %rbx, %rax', 'jmp 0xffffffffffffffd5', 'movq  0x90(%r13), %rdx', 'test %rdx, %rdx', 'js 0xc', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq', 'mov %rax, %r13', 'movzxw  0x80(%rbx), %eax', 'test %r13, %r13', 'jz 0x7', 'test %ax, %ax', 'jnz 0x6d', 'movq  0x38(%rbx), %rax', 'movl  0xc0(%rbx), %edx', 'movq  %rax, 0x18(%rbx)', 'movq  %rax, 0x8(%rbx)', 'movq  %rax, 0x10(%rbx)', 'movq  %rax, 0x28(%rbx)', 'movq  %rax, 0x20(%rbx)', 'test %edx, %edx', 'jle 0x3b', 'testl  $0x202, (%rbx)', 'jnz 0xffffffffffffffc5', 'jmp 0xffffffffffffffbf', 'movq  0x40(%rbx), %rax', 'movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %eax, %ebp', 'jmp 0xfffffffffffffee3', 'mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa', 'movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e', 'popq  %rbx', 'retq', 'testb  $0x20, 0x74(%rbx)', 'jnz 0x37', 'movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1', 'mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9', 'nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7', 'retq', 'mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c', 'xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6', 'test $0x1, %al', 'jz 0x2b', 'callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6', 'testb  $0x2, 0x8(%r12)', 'jnz 0x142', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc', 'movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3', 'testb  $0x2, 0x4(%rbp)', 'jz 0x5a9', 'movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f', 'movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5', 'mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434', 'cmpq  %r14, 0x888(%rbp)', 'jbe 0x427', 'movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9', 'testb  $0x1, 0x8(%r12)', 'jnz 0x26', 'cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3', 'add %r14, %rbx', 'mov %rbx, %rax', 'or $0x1, %rax', 'movq  %rax, 0x8(%r12)', 'movq  %r12, 0x60(%rbp)', 'jmp 0xfffffffffffffc8c', 'cmp $0xffff, %rbx', 'jnbe 0x1b2', 'movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b', 'lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b', 'movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1', 'movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0', 'mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9', 'retq', 'test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3', 'test %edx, %edx', 'jnz 0x13', 'movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6', 'subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d', 'xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'xor %esi, %esi', 'popq  %rbx', 'popq  %rbp', 'jmp 0x1ccb', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8', 'movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf', 'testb  $0x80, (%rbp)', 'jz 0xe', 'popq  %rbp', 'retq', 'movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127', 'cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25', 'lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16', 'lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa', 'mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86', 'test %rdi, %rdi', 'jz 0x75', 'movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95', 'lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe', 'xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab', 'mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e', 'cmp $0x1f, %rbx', 'jbe 0x2a4', 'test $0x8, %al', 'jnz 0x29c', 'movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a', 'lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29', 'lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673', 'lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b', 'lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59', 'movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846', 'add $0x48, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq', 'add $0x30, %rsp', 'popq  %rbp', 'retq', 'cmpl  $0x2, -0xc(%rbp)', 'jnl 0x7e')",[136.02514032263238]
40,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",[0.6145537204984829]
41,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')",[0.09898333290334642]
42,"('callq  0x4f131', 'nop %edi, %edx', 'mov $0x27, %eax', 'syscall', 'retq')","[0.5735829316502971, 0.09238403843190812, 0.09238403843190812, 0.09238606648798416]"
43,"('callq  0x6088', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9')","[0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
44,"('callq  0x7cf0', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')","[2.8833501930462355, 1.0550454721585714, 1.0550454721585714, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965]"
45,"('callq  0xffffffffffffff34', 'pushq  %rbp', 'mov %rsp, %rbp')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 1.1673735732836377]"
46,"('callq  0xffffffffffffffd6', 'pushq  %rbp', 'mov %rsp, %rbp')",[1.1673735732836377]
47,"('cmp $0x1, %dl', 'jnbe 0x3d')","[0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
48,"('cmp $0x1, %edx', 'jz 0x185')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
49,"('cmp $0x10, %dl', 'jnb 0x19')","[0.20485191618485296, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
50,"('cmp $0x1f, %rbx', 'jbe 0x2a4')","[0.7587769002900818, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
51,"('cmp $0x2, %ebp', 'jz 0xffffffffffffff2f')","[0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
52,"('cmp $0x20, %rdx', 'jb 0x4b')","[0.20485191618485296, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
53,"('cmp $0x24, %edx', 'jnbe 0x17c')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
54,"('cmp $0x2d, %cl', 'jz 0x232')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
55,"('cmp $0x2f, %eax', 'jnbe 0x7b4')","[0.20485191618485296, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
56,"('cmp $0x2f, %eax', 'jnbe 0xb5e')","[0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
57,"('cmp $0x30, %cl', 'jz 0x1c8')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
58,"('cmp $0x3ff, %r13', 'jbe 0x25')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
59,"('cmp $0x3ff, %rax', 'jbe 0x1f6')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
60,"('cmp $0x4, %dl', 'jnb 0x35')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
61,"('cmp $0x4, %rdx', 'jnz 0xffffffffffffff86')","[0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
62,"('cmp $0x61, %al', 'jle 0x27a')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
63,"('cmp $0x61, %al', 'jz 0x18a')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
64,"('cmp $0x77, %al', 'jz 0x4e')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
65,"('cmp $0x7fffffff, %r15', 'jnle 0x348')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
66,"('cmp $0x8, %dl', 'jnb 0x29')","[0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
67,"('cmp $0xa, %ebx', 'jz 0xa3')","[0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071]"
68,"('cmp $0xa, %edx', 'jz 0xfffffffffffffec3')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
69,"('cmp $0xffff, %rbx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",[0.9105322803480983]
70,"('cmp $0xffff, %rbx', 'jnbe 0x1b2')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
71,"('cmp $0xffffffff, %eax', 'jnz 0x36')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
72,"('cmp $0xffffffff, %eax', 'jz 0x150')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
73,"('cmp $0xffffffff, %eax', 'jz 0x42')","[0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071]"
74,"('cmp $0xffffffff, %eax', 'jz 0xd0')","[0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
75,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b')","[0.20485191618485296, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
76,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
77,"('cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
78,"('cmp $0xffffffff, %eax', 'mov $0xffffffff, %eax', 'cmovz %eax, %r14d', 'test %ebp, %ebp', 'jz 0x3e')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
79,"('cmp $0xffffffff, %ebx', 'jz 0xbd')","[0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
80,"('cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",[0.03299444430111547]
81,"('cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')","[0.03299444430111547, 0.03299444430111547]"
82,"('cmp $0xffffffffffffffff, %rax', 'jz 0x12')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
83,"('cmp %r14, %rdi', 'jz 0x4a')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
84,"('cmp %rax, %r12', 'jb 0xfffffffffffffff0')","[0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
85,"('cmp %rax, %r13', 'jbe 0xb2')","[0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
86,"('cmp %rax, %r15', 'jnz 0x285')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
87,"('cmp %rax, %r15', 'jnz 0xfffffffffffffce0')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
88,"('cmp %rax, %r8', 'jnb 0xffffffffffffffa9')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
89,"('cmp %rbx, %r14', 'jz 0x217')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
90,"('cmp %rdi, %rbx', 'jz 0x179')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
91,"('cmp %rdx, %rbx', 'jz 0x6d')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
92,"('cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd')","[1.352019807541523, 1.352019807541523, 1.8324480394510163, 1.8324480394510163, 10.295489539761881, 10.295489539761881, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774]"
93,"('cmpb  $0x0, 0xa5e70(%rip)', 'jnz 0xc')","[0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
94,"('cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
95,"('cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
96,"('cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
97,"('cmpl  $0x2, -0xc(%rbp)', 'jnl 0x7e')","[0.5387878030539867, 0.09428229891908275, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
98,"('cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
99,"('cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x95')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
100,"('cmpq  $0x0, (%rbp)', 'jz 0xd')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
101,"('cmpq  $0x0, -0x10(%rbp)', 'jnz 0xc')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774]"
102,"('cmpq  $0x0, -0x500(%rbp)', 'jz 0x670')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
103,"('cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
104,"('cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
105,"('cmpq  $0x0, 0x48(%rbp)', 'jz 0xffffffffffffff25')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
106,"('cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
107,"('cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8')","[0.9105322803480983, 1.2353781903840853, 0.24582270503303877, 0.3331731082842125, 0.3331731082842125, 1.8719079265225513, 1.8719079265225513, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
108,"('cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
109,"('cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
110,"('cmpq  %r13, 0x60(%rbp)', 'jz 0x3c3')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
111,"('cmpq  %r14, 0x888(%rbp)', 'jbe 0x427')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
112,"('cmpq  %r15, 0x9f3ce(%rip)', 'cmovnbe %r13, %rax', 'movq  %rax, 0x10(%rsp)', 'movq  $0x0, 0x8(%rsp)', 'lea 0x60(%rbx), %r11', 'movl  %r14d, 0x48(%rsp)', 'movq  %rbp, 0x20(%rsp)', 'movq  0x78(%rbx), %r10', 'cmp %r11, %r10', 'jz 0x337')","[5.007923485802388, 6.7945780190563925, 1.352019807541523, 1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774]"
113,"('cmpq  %rdx, 0x40(%rbp)', 'jz 0xf6')","[0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 0.9105322803480983, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853, 1.2353781903840853]"
114,"('cmpq  0x8(%rdx), %r14', 'jz 0x248')","[0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
115,"('cmpq  0x9d253(%rip), %rbx', 'jb 0xb3')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
116,"('cmpq  0xa2fee(%rip), %rbx', 'jnbe 0xb6')","[0.7587769002900818, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
117,"('cmpxchgl  %edx, (%rdi)', 'movl  (%rbx), %esi', 'movq  0x88(%rbx), %rdi', 'movq  0xa4e75(%rip), %rcx', 'mov %esi, %r8d', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'and $0x8000, %r8d', 'test %rcx, %rcx', 'jz 0x16')","[2.7209069574674816, 2.7209069574674816, 2.7209069574674816, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685]"
118,"('cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f')","[2.387735877239345, 2.387735877239345, 2.387735877239345, 2.387735877239345, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477]"
119,"('cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  0xa4b37(%rip), %rdx', 'addl  $0x1, 0x4(%rdi)', 'movq  %r12, 0x8(%rdi)', 'movq  %rbx, 0xa4b28(%rip)', 'movq  %rdx, 0x68(%rbx)', 'test $0x80, %ah', 'jnz 0x1a6')","[3.0540800657516938, 3.0540800657516938, 0.3629429434244223]"
120,"('cmpxchgl  %edx, 0xb6e4a(%rip)', 'cmpq  %r15, 0xb6e4b(%rip)', 'jnz 0xffffffffffffffbf')","[0.19796869386276886, 0.19796869386276886, 0.19796869386276886, 10.186479497618587]"
121,"('cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')","[0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 11.205127447380443, 11.205127447380443]"
122,"('imul %r15, %rax', 'movzx %sil, %esi', 'mov %rdi, %rcx', 'add %rsi, %rax', 'lea 0x1(%rcx), %rdi', 'movzxb  0x1(%rcx), %ecx', 'test %cl, %cl', 'jz 0x4f')","[1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965]"
123,"('jb 0x7',)","[0.22211472950411626, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717]"
124,"('jmp 0x17b',)","[0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
125,"('jmp 0x2',)","[0.4442294590082325, 0.4442294590082325, 0.05279232771543038]"
126,"('jmp 0x34e8f',)","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
127,"('jmp 0xfffffffffffffbfc',)","[0.3277622546733343, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
128,"('jmp 0xfffffffffffffce7',)","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
129,"('jmp 0xfffffffffffffef1',)","[0.4442294590082325, 0.4442294590082325, 0.05279232771543038]"
130,"('jmp 0xffffffffffffff47',)","[0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 2.7163945326982892, 2.7163945326982892]"
131,"('jmp 0xffffffffffffff6d',)","[0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
132,"('jmp 0xffffffffffffffbf',)","[0.3277622546733343, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
133,"('jmp 0xffffffffffffffc9',)","[0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
134,"('jmp 0xffffffffffffffe5',)","[0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038]"
135,"('jnz 0x9',)","[0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717]"
136,"('lea (%r12,%r8,1), %rsi', 'mov %r14, %rdx', 'mov %rbp, %rdi', 'callq  0x260b', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x149')","[3.0351055731042518, 4.117925273224208, 1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
137,"('lea (%rax,%rbx,1), %rdx', 'mov $0x1, %ecx', 'mov %rbp, %rdi', 'callq  0xfffffffffffaae28', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6')","[6.828988046498585, 9.265332371768487, 2.4987922279633654, 2.4987922279633654, 2.4987922279633654, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526]"
138,"('lea (%rax,%rbx,2), %rcx', 'movzxw  (%rcx), %edx', 'test %dx, %dx', 'jz 0xffffffffffffff49')","[1.6693071525821044, 2.2648600157041567, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924]"
139,"('lea (%rax,%rbx,8), %rax', 'sub $0x1, %edx', 'movq  0x80(%rax), %r8', 'movq  (%r8), %rsi', 'movq  %rsi, 0x80(%rax)', 'movw  %dx, (%rcx)', 'movq  $0x0, 0x8(%r8)', 'jmp 0xffffffffffffff71')","[1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 0.21776454922100774, 0.21776454922100774]"
140,"('lea (%rdx,%rax,2), %rdi', 'movzxw  (%rdi), %r8d', 'cmpq  0xa09e6(%rip), %r8', 'mov %r8, %rcx', 'jb 0x21b')","[0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
141,"('lea (%rdx,%rax,8), %rax', 'movq  %rdx, 0x18(%r12)', 'add $0x1, %ecx', 'movq  0x80(%rax), %rdx', 'movq  %rdx, 0x10(%r12)', 'movq  %rsi, 0x80(%rax)', 'movw  %cx, (%rdi)', 'jmp 0xfffffffffffffe59')","[1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774]"
142,"('lea -0x1(%rax), %r8', 'movq  0xb6e31(%rip), %r15', 'movq  %r8, 0x8(%r14)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xb3')","[0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 6.4514370151584375]"
143,"('lea -0x1(%rax), %rbx', 'nopl  %eax, (%rax)', 'callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'movq  0xc50cd(%rip), %r8', 'test %r8, %r8', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",[0.1583749550902151]
144,"('lea -0x1(%rax), %rbx', 'nopl  %eax, (%rax)', 'callq  (%rbp,%rbx,8)', 'nop %edi, %edx', 'movq  0xc50cd(%rip), %r8', 'test %r8, %r8', 'jz 0x1c')","[0.15177566061877681, 0.15177566061877681, 7.8096342815075825]"
145,"('lea -0x1(%rbx), %rax', 'cmp $0xe, %rax', 'jbe 0x63')","[0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
146,"('lea -0x11(%r13), %rax', 'shr $0x4, %rax', 'mov %rax, %r15', 'xor %eax, %eax', 'movq  %rax, 0x10(%rsp)', 'cmpq  $0x0, %fs:0xffffffffffffffc8', 'jz 0x12')","[2.731594812988219, 3.70613254309618, 0.7374660870430403, 0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
147,"('lea -0x11(%rbx), %rax', 'shr $0x4, %rax', 'cmpq  %rax, 0xa09f6(%rip)', 'jbe 0x29')","[1.8210625326401206, 0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
148,"('lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq')","[3.1868609531622685, 4.323821638288223, 0.8603764255315215, 1.1661038509386674, 1.1661038509386674, 6.551675714772854, 6.551675714772854, 0.1385770716759002, 0.1385770716759002, 0.1385770716759002, 0.1385770716759002, 0.1385770716759002, 0.1385770716759002, 0.1385770716759002]"
149,"('lea -0x30(%rcx), %esi', 'cmp $0x9, %sil', 'jbe 0x1d')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
150,"('lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax')","[3.6873284071591255, 4.997584455926731, 0.5939060815883067, 0.5939060815883067, 0.5939060815883067, 0.5939060815883067, 0.5939060815883067, 0.5939060815883067]"
151,"('lea 0x1(%rbx), %rdi', 'lea 0x797c4(%rip), %rsi', 'callq  0xfffffffffffe3a1f', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'movzxb  (%rsi), %eax', 'test %al, %al', 'jz 0x19e')","[1.7769198640890063, 1.7769198640890063, 1.7769198640890063, 0.21116728280564548, 0.21116728280564548]"
152,"('lea 0x1(%rdi), %eax', 'cmp $0x3, %edi', 'jz 0x3f')","[1.3657984205221476, 1.8530672855761279, 0.36873304352152014, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
153,"('lea 0x1(%rdx), %rax', 'movq  %rax, 0x28(%rbp)', 'movb  %bl, (%rdx)', 'movl  (%rbp), %eax', 'test $0x2, %al', 'jnz 0xb1')","[2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 2.8833501930462355, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194, 3.912028908160194]"
154,"('lea 0x10(%rsi), %rsi', 'cmpq  0x18(%r12), %rdx', 'jz 0x673')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
155,"('lea 0x17(%rdi), %rax', 'xor %ebx, %ebx', 'cmp $0x1f, %rax', 'jnbe 0x82')","[1.5175538005801636, 2.058963650640142, 0.4097038323697059, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
156,"('lea 0x2(%rdi), %eax', 'cmp $0x2, %edi', 'jz 0x26')","[1.3657984205221476, 1.8530672855761279]"
157,"('lea 0x20(%r13), %rdx', 'cmp %rax, %rdx', 'jbe 0x262')","[1.3657984205221476, 1.8530672855761279, 0.36873304352152014, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
158,"('lea 0x3396f(%rip), %rcx', 'jmp 0x11')","[0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
159,"('lea 0x80(%rsp), %rax', 'movl  $0x10, 0x10(%rsp)', 'movl  0x40(%rsp), %r10d', 'movq  %rax, 0x18(%rsp)', 'lea 0x30(%rsp), %rax', 'movq  %rax, 0x20(%rsp)', 'jmp 0xffffffffffffff91')","[1.6658614853089102, 1.6658614853089102, 0.19796869386276886]"
160,"('lea 0x9ccc0(%rip), %rdi', 'test $0x4, %al', 'jz 0xe')","[1.3657984205221476, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
161,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')",[1.8435536745234182]
162,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8')","[6.555829173616586, 8.894719320264478, 2.398841512311747, 2.398841512311747, 0.2850737023287416, 0.2850737023287416, 0.2850737023287416, 0.2850737023287416]"
163,"('lea 0x9ebf2(%rip), %rdx', 'sub %r13, %rax', 'lea (%r8,%r13,1), %rcx', 'movq  0x20(%rsp), %rbp', 'cmp %rdx, %rbx', 'movq  %rcx, 0x60(%rbx)', 'setnz %dl', 'or $0x1, %rax', 'add $0x10, %r8', 'movzx %dl, %edx', 'shl $0x2, %rdx', 'or %r13, %rdx', 'or $0x1, %rdx', 'movq  %rdx, -0x8(%r8)', 'retq')",[1.4831255206332872]
164,"('lea 0xa0686(%rip), %rax', 'cmp %rax, %rbp', 'jz 0x37b')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
165,"('lea 0xaad01(%rip), %rax', 'cmp %rax, %rbp', 'jz 0xa')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
166,"('lea 0xaaeff(%rip), %rax', 'cmp %rax, %rbp', 'lea 0xab0d5(%rip), %rax', 'setz %dl', 'cmp %rax, %rbp', 'setz %al', 'or %al, %dl', 'jnz 0x16')","[1.1883151210834715, 1.1883151210834715, 0.14121760068690592, 0.14121760068690592, 0.14121760068690592, 0.14121760068690592, 0.14121760068690592, 0.14121760068690592]"
167,"('lea 0xac724(%rip), %rax', 'mov %rbx, %rdi', 'movq  %rax, 0xd8(%rbx)', 'callq  0x469a', 'nop %edi, %edx', 'orl  $0x240c, (%rdi)', 'pushq  %rbx', 'mov %rdi, %rbx', 'movq  $0xffffffffffffffff, 0x90(%rdi)', 'callq  0x1587', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x30, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'movl  (%rdi), %eax', 'test $0x80, %al', 'jnz 0x179')","[3.8314826330441387, 3.8314826330441387, 0.45532698185633036]"
168,"('lea 0xf(%rdi), %rax', 'sub %r14, %rax', 'cmp $0x1e, %rax', 'jbe 0x6d')","[0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
169,"('mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e')","[0.49164338201000146, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
170,"('mov $0x0, %r13', 'mov %eax, %r12d', 'test %r13, %r13', 'jz 0x242')","[0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
171,"('mov $0x0, %rbp', 'or $0x80, %al', 'mov %rdi, %rbx', 'movl  %eax, (%rdi)', 'test %rbp, %rbp', 'jz 0x189')","[0.6663441885123488, 0.6663441885123488, 0.07918747754510755]"
172,"('mov $0x0, %rbp', 'test %rbp, %rbp', 'jz 0xe')","[0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
173,"('mov $0x1, %eax', 'movq  0x98(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0x97')","[1.6693071525821044, 2.2648600157041567, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
174,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')","[0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
175,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",[0.3331731082842125]
176,"('mov $0x1, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",[0.039593738772553774]
177,"('mov $0x1, %eax', 'syscall', 'jz 0x1c')",[0.03299444430111547]
178,"('mov $0x1, %eax', 'syscall', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test %eax, %eax', 'jz 0xc8')",[0.059389594130792644]
179,"('mov $0x1, %ebx', 'jmp 0xfffffffffffff58c')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
180,"('mov $0x1, %ecx', 'cmpxchgl  %ecx, (%rdx)', 'test %eax, %eax', 'jz 0x238')","[0.19796869386276886, 0.19796869386276886, 10.186479497618587]"
181,"('mov $0x1, %ecx', 'mov %r13, %rdx', 'mov %rbp, %rsi', 'mov %rbx, %rdi', 'callq  0x4b67', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x38, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jnz 0x33a')","[2.9430216869715977, 2.9430216869715977, 0.34974435448154567]"
182,"('mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b')","[6.828988046498585, 9.265332371768487, 1.8436631895515245, 2.4987922279633654, 2.4987922279633654, 14.039305392806984, 14.039305392806984, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526, 0.29695202676611526]"
183,"('mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbp), %rdi', 'movl  (%rbp), %eax', 'movq  %rbx, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'mov %eax, %edx', 'and $0x8000, %edx', 'test $0x20, %ah', 'jz 0xfffffffffffffec4')","[2.5543204033253755, 2.5543204033253755, 2.5543204033253755, 0.30355132123755363, 0.30355132123755363, 0.30355132123755363, 0.30355132123755363, 0.30355132123755363]"
184,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa5f35(%rip)', 'movq  %rbx, 0xa5f36(%rip)', 'movl  0xa5f2c(%rip), %eax', 'movq  0xa3351(%rip), %rbx', 'lea 0x1(%rax), %edx', 'movl  %edx, 0xa5f1c(%rip)', 'test %rbx, %rbx', 'jz 0x13e')","[0.3167499101804302, 0.3167499101804302, 16.298367196189737]"
185,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa623d(%rip)', 'movq  %rbx, 0xa623e(%rip)', 'movl  0xa6234(%rip), %eax', 'movq  0xa3659(%rip), %rbx', 'xor %r14d, %r14d', 'lea 0x1(%rax), %edx', 'movl  %edx, 0xa6221(%rip)', 'test %rbx, %rbx', 'jz 0x133')","[0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 16.6379185408331]"
186,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7774(%rip)', 'movq  %r12, 0xa7775(%rip)', 'movl  0xa776b(%rip), %edx', 'movl  (%rbx), %ecx', 'movq  %rbx, 0xa774e(%rip)', 'add $0x1, %edx', 'movl  %edx, 0xa7759(%rip)', 'and $0x8000, %ecx', 'jnz 0x9f')","[2.609850606743461, 2.609850606743461, 0.31015061570899194]"
187,"('mov $0x1, %edx', 'cmpxchgl  %edx, 0xa7ab6(%rip)', 'movq  %r12, 0xa7ab7(%rip)', 'movl  0xa7aad(%rip), %edx', 'movl  (%rbx), %esi', 'movq  %rbx, 0xa7a90(%rip)', 'add $0x1, %edx', 'mov %esi, %r8d', 'movl  %edx, 0xa7a98(%rip)', 'and $0x8000, %r8d', 'jnz 0x125')","[2.665378782105471, 2.665378782105471, 2.665378782105471, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302]"
188,"('mov $0x1004, %r8d', 'mov $0x1, %edx', 'mov $0x440, %ecx', 'jmp 0xfffffffffffffec0')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924]"
189,"('mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23')","[2.5798394329302026, 3.5002361780321656, 0.6964952981948545, 0.9439891214345513, 0.9439891214345513, 5.3037377731098445, 5.3037377731098445, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303]"
190,"('mov $0x493170, %eax', 'test %rax, %rax', 'jz 0xc')","[0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
191,"('mov $0x496060, %rdi', 'mov $0x0, %al', 'callq  0xf060', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')","[5.766700386092471, 7.824057816320388, 2.1100909443171427, 11.8554134878827, 11.8554134878827, 0.2507610215781993]"
192,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')","[1.597842512574562, 0.25735828799356153, 0.25735828799356153, 0.25735828799356153]"
193,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f', 'add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1', 'movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7', 'movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e', 'cmp $0x2f, %eax', 'jnbe 0x7b4', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036', 'test %r11, %r11', 'js 0xb40', 'movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58', 'retq', 'test %rax, %rax', 'jle 0x51', 'movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc', 'movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff2c', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39', 'xor %r15d, %r15d', 'jmp 0x91', 'movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42', 'vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6', 'tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d', 'movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37', 'add %r15, %rdi', 'mov %r14, %rdx', 'mov %r8, %rsi', 'callq  0xfffffffffffe85e8', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq', 'addq  %r14, 0x8(%rbx)', 'test %r13, %r13', 'jnz 0x11c', 'movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55', 'test $0x80, %ah', 'jnz 0x2f', 'movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee', 'subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4', 'jmp 0xffffffffffffffe5', 'movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf0fe', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d', 'test %rsi, %rsi', 'jz 0x294', 'movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b', 'movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%rbx), %rdi', 'movl  (%rbx), %eax', 'movq  %r12, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'test $0x20, %al', 'jz 0xfffffffffffffe3f', 'cmpq  $0x0, (%rbp)', 'jz 0xd', 'movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25', 'movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1', 'mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff32', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5', 'movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4', 'test $0x1, %ah', 'jz 0x34', 'cmpq  $0x0, 0x60(%rbp)', 'jz 0x4a', 'movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd', 'movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103', 'movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax', 'nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df', 'movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x1d6', 'test $0x202, %eax', 'jz 0xe5', 'mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39', 'movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35', 'movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6', 'and $0xf7, %dh', 'movq  %rax, 0x8(%rbx)', 'movl  %edx, (%rbx)', 'movq  %rax, 0x30(%rbx)', 'movq  %rax, 0x20(%rbx)', 'xor %eax, %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq', 'movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121', 'movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11', 'jmp 0x34e8f', 'nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq')",[19.518368613690598]
194,"('mov $0x49606f, %rdi', 'mov %ebx, %esi', 'mov $0x0, %al', 'callq  0xf032', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'mov %rdi, %r10', 'movq  %rsi, 0x28(%rsp)', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2', 'cmp $0xffffffff, %eax', 'jz 0xffffffffffffff1b', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b', 'test %r13, %r13', 'jz 0x2a99', 'mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425', 'movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'and $0x1f, %ecx', 'and $0xffffffffffffffe0, %rdi', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'sar %cl, %eax', 'test %eax, %eax', 'jz 0x1f', 'add $0x20, %rdi', 'vmovdqay  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0xe4', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'and $0x8000, %r15d', 'movq  %rax, -0x4c0(%rbp)', 'movl  %r15d, -0x4b4(%rbp)', 'jnz 0x9e', 'cmpq  $0x0, 0xaef40(%rip)', 'jz 0x3f8', 'mov $0x46d1c0, %rax', 'movq  %r12, -0x468(%rbp)', 'movq  %rax, -0x470(%rbp)', 'jmp 0xfffffffffffffc23', 'movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f', 'mov $0x1, %edx', 'cmpxchgl  %edx, (%rdi)', 'movq  0x88(%r12), %rdi', 'movq  %r15, 0x8(%rdi)', 'addl  $0x1, 0x4(%rdi)', 'jmp 0x2b', 'movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354', 'movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0x285', 'cmp $0x7fffffff, %r15', 'jnle 0x348', 'movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad', 'movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16', 'cmpq  $0x0, 0xb2ec0(%rip)', 'jnz 0x120', 'cmpq  $0x0, 0xb2ee2(%rip)', 'jnz 0x112', 'movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239', 'lea 0x1(%rbx), %rax', 'xor %r10d, %r10d', 'xor %r11d, %r11d', 'mov $0xffffffff, %r8d', 'movq  %rax, -0x4c8(%rbp)', 'movsx %r15b, %eax', 'lea 0x82821(%rip), %rbx', 'lea 0xac4da(%rip), %rsi', 'sub $0x20, %eax', 'movl  $0x0, -0x520(%rbp)', 'cdqe', 'movl  $0x0, -0x53c(%rbp)', 'movzxb  (%rbx,%rax,1), %eax', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0x0, -0x500(%rbp)', 'movq  (%rsi,%rax,8), %rax', 'lea -0x38(%rbp), %rsi', 'movl  $0x0, -0x530(%rbp)', 'movl  $0x0, -0x4d8(%rbp)', 'movl  $0x0, -0x4f0(%rbp)', 'movl  $0x0, -0x518(%rbp)', 'movl  $0x0, -0x51c(%rbp)', 'movq  $0x0, -0x4e0(%rbp)', 'movb  $0x20, -0x508(%rbp)', 'movq  %rsi, -0x4f8(%rbp)', 'jmp %rax', 'nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1', 'movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7', 'movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e', 'cmp $0x2f, %eax', 'jnbe 0x7b4', 'mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036', 'test %r11, %r11', 'js 0xb40', 'movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967', 'test %r8d, %r8d', 'js 0xa85', 'mov $0x1, %ebx', 'jmp 0xfffffffffffff58c', 'xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72', 'mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3', 'mov %r8, %rax', 'retq', 'movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48', 'movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e', 'cmpl  $0xa, -0x510(%rbp)', 'jnz 0x3d', 'movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33', 'movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x670', 'movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c', 'mov $0x0, %edx', 'sub %rcx, %rbx', 'cmovs %rdx, %rbx', 'movl  -0x4f0(%rbp), %edx', 'mov %ebx, %r8d', 'test %edx, %edx', 'jnz 0xfffffffffffffd9e', 'mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0xa', 'movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932', 'cmpb  $0x20, -0x508(%rbp)', 'jnz 0xfffffffffffff718', 'test %ebx, %ebx', 'jle 0x17e0', 'xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e', 'cmpq  $0x0, -0x500(%rbp)', 'jz 0x6b', 'cmpl  $0x10, -0x510(%rbp)', 'jnz 0x62', 'add %r8d, %ebx', 'test %ebx, %ebx', 'jnle 0xa21', 'test %r9d, %r9d', 'js 0x1eea', 'movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555', 'movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c', 'movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111', 'cmp %rax, %r12', 'jb 0xfffffffffffffff0', 'xor %r15d, %r15d', 'jmp 0xffffffffffffff00', 'cmp %rdx, %rbx', 'mov %r12, %rsi', 'mov %rbx, %r14', 'cmovbe %rbx, %rdx', 'mov %rdx, %r13', 'callq  0xfffffffffffe489b', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %rdi, %rax', 'add %rdx, %rax', 'jmp 0xd', 'cmp $0x20, %rdx', 'jb 0x4b', 'cmp $0x10, %dl', 'jnb 0x19', 'cmp $0x8, %dl', 'jnb 0x29', 'cmp $0x4, %dl', 'jnb 0x35', 'movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq', 'add %r13, %r12', 'sub %r13, %r14', 'movq  %rax, 0x28(%rbp)', 'add %r14, %r15', 'jnz 0x44', 'sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f', 'movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35', 'addl  -0x4f0(%rbp), %r9d', 'jmp 0xfffffffffffff3d0', 'addl  $0x1, -0x514(%rbp)', 'cmpq  $0x0, -0x4e0(%rbp)', 'jnz 0x1519', 'movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36', 'vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c', 'tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq', 'movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a', 'movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482', 'mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq', 'cmp %rax, %r15', 'jnz 0xfffffffffffffce0', 'movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96', 'add %r15d, %r9d', 'cmpb  $0x0, (%rbx)', 'jnz 0xfffffffffffffad6', 'jmp 0xfffffffffffffbfc', 'testl  $0x8000, (%r12)', 'jnz 0x19', 'movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5', 'movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6', 'subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16', 'movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f', 'movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c', 'lea -0x28(%rbp), %rsp', 'mov %r9d, %eax', 'popq  %rbx', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'popq  %rbp', 'retq', 'movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa', 'add $0xd8, %rsp', 'retq')",[33.32541088438895]
195,"('mov $0x4b3e00, %edi', 'callq  0x915cb', 'jz 0x29d')",[0.08578677201654585]
196,"('mov $0x4b3e00, %edi', 'callq  0x915cb', 'nop %edi, %edx', 'jmp 0xfffffffffffffecc')","[0.11878121631766134, 0.11878121631766134, 6.111887698571151]"
197,"('mov $0x4c52c8, %r14', 'mov $0x4c4b60, %rbp', 'sub %rbp, %r14', 'mov %r14, %r13', 'mov %rbx, %rdi', 'callq  0x323f', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0x28(%rdi), %rax', 'cmpq  0x20(%rdi), %rax', 'jbe 0x39')","[1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 1.8324480394510163, 0.21776454922100774, 0.21776454922100774, 0.21776454922100774]"
198,"('mov $0x4c52c8, %rbx', 'mov $0x4c52d0, %rax', 'cmp %rax, %rbx', 'jnb 0x20')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
199,"('mov $0x5, %eax', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')",[0.3331731082842125]
200,"('mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')","[0.9105322803480983, 0.039593738772553774]"
201,"('mov $0x5, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x9')","[1.2353781903840853, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
202,"('mov $0x8, %eax', 'mov $0xa, %edx', 'xor %ebp, %ebp', 'cdqe', 'lea 0x998ac(%rip), %rsi', 'movq  (%rsi,%rax,8), %r8', 'lea 0x99861(%rip), %rsi', 'movzxb  (%rsi,%rax,1), %eax', 'movb  %al, 0x12(%rsp)', 'test %cl, %cl', 'jz 0x220')","[1.6658614853089102, 1.6658614853089102, 0.19796869386276886, 0.19796869386276886]"
203,"('mov $0xcccccccccccccccd, %rcx', 'nopw  %ax, (%rax,%rax,1)', 'mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3')","[1.188138680204856, 1.6103333099469, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057]"
204,"('mov $0xffffffff, %esi', 'mov %rbp, %rdi', 'callq  0x18(%rax)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')","[4.704412725686355, 6.382785288928365, 1.72138966067092, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717]"
205,"('mov $0xffffffff, %esi', 'mov %rbx, %rdi', 'callq  0x18(%r15)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')","[0.20456798833420717, 0.20456798833420717, 0.20456798833420717, 10.526028814205873]"
206,"('mov %eax, %ebp', 'jmp 0xfffffffffffffee3')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
207,"('mov %eax, %ebx',)","[27.882887149827376, 0.0409707888481858, 0.0409707888481858, 0.006599294471438303, 0.006599294471438303, 0.006599294471438303, 0.006599294471438303]"
208,"('mov %eax, %edi', 'callq  0xd98e', 'nop %edi, %edx', 'pushq  %rax', 'popq  %rax', 'mov $0x1, %ecx', 'mov $0x1, %edx', 'lea 0xb2ea9(%rip), %rsi', 'sub $0x8, %rsp', 'callq  0xfffffffffffffd25', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'mov %edi, %ebp', 'pushq  %rbx', 'mov %rsi, %rbx', 'sub $0x8, %rsp', 'cmpq  $0x0, 0xb3036(%rip)', 'jz 0xa')","[0.4355311264980915, 0.4355311264980915, 0.4355311264980915, 22.410254894760886]"
209,"('mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movl  $0x0, -0x4d8(%rbp)', 'movq  (%rdx), %rax', 'movl  $0x0, -0x518(%rbp)', 'movq  %rax, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'jmp 0xfffffffffffffcf4')","[1.9990345935931224, 0.23756243263532267, 0.23756243263532267, 0.23756243263532267]"
210,"('mov %eax, %edx', 'add $0x8, %eax', 'addq  0x10(%r14), %rdx', 'movl  %eax, (%r14)', 'movsxdl  (%rdx), %r11', 'jmp 0xfffffffffffff036')","[0.7374660870430403, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
211,"('mov %eax, %edx', 'movl  0x860(%rbx,%rdx,4), %esi', 'test %esi, %esi', 'jnz 0x244')","[1.0622876604061149, 1.4412745554480995]"
212,"('mov %eax, %edx', 'movqq  (%rsp), %xmm0', 'or $0x1, %eax', 'and $0xfffffffe, %edx', 'test %ebp, %ebp', 'cmovnz %edx, %eax', 'movhpsq  0x8(%rsp), %xmm0', 'movupsx  %xmm0, 0x38(%rbx)', 'movl  %eax, (%rbx)', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')","[4.400903993626399, 5.9709925588003365, 1.6103333099469, 1.6103333099469, 1.6103333099469, 1.6103333099469, 1.6103333099469, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057]"
213,"('mov %eax, %r12d', 'movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x3c')","[1.2140430404641311, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
214,"('mov %eax, %r12d', 'test %r12d, %r12d', 'js 0x94')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774]"
215,"('mov %eax, %r13d', 'test %eax, %eax', 'jnz 0x102')",[167.29732695507641]
216,"('mov %eax, %r14d', 'shr $0x4, %r14d', 'cmpq  0xa1cfa(%rip), %rax', 'jbe 0x272')","[1.2140430404641311, 1.6471709205121137, 0.3277622546733343, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
217,"('mov %ebp, %edi', 'callq  0x40c9b', 'nop %edi, %edx', 'mov $0xffffffffffffffc0, %r9', 'mov %edi, %edx', 'mov $0xe7, %r8d', 'mov $0x3c, %esi', 'jmp 0x17')","[0.14517636614733848, 0.14517636614733848, 7.470084964920296]"
218,"('mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x42')","[0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642]"
219,"('mov %edx, %edi', 'mov %r8d, %eax')",[0.6790986331745723]
220,"('mov %edx, %edi', 'mov %r8d, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')",[0.04619303324399208]
221,"('mov %edx, %edi', 'mov %r8d, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",[0.04619303324399208]
222,"('mov %esi, %ebx', 'movq  0x20(%rdi), %rsi', 'test $0x8, %ah', 'jz 0x52')","[1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 1.5175538005801636, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 2.058963650640142, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
223,"('mov %r10d, %edx', 'movl  %ecx, -0x4f0(%rbp)', 'sub %ecx, %edx', 'sub %ebx, %edx', 'mov %edx, %ebx', 'jmp 0xfffffffffffff824')","[0.6555245093466686, 0.888458918016465, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473]"
224,"('mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
225,"('mov %r12, %rax', 'sub %rbx, %rax', 'jmp 0xffffffffffffffd5')","[0.4097038323697059, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
226,"('mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
227,"('mov %r12d, %edx', 'mov %rbp, %rsi', 'mov $0xffffff9c, %edi', 'mov $0x101, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x97')","[0.4997576343702426, 0.4997576343702426]"
228,"('mov %r12d, %edx', 'mov %rbp, %rsi', 'mov $0xffffff9c, %edi', 'mov $0x101, %eax', 'syscall', 'jnz 0x52e')",[0.05279232771543038]
229,"('mov %r12d, %esi', 'mov $0x2, %edi', 'callq  0x250ee', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %esi, %ebx', 'test %edi, %edi', 'jnz 0x74')",[808.6037455974986]
230,"('mov %r13d, %eax', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')",[306.7117627042133]
231,"('mov %r14, %rax', 'xor %edx, %edx', 'div %rcx', 'sub %rdx, %r8', 'test %r8, %r8', 'jnz 0x4b')","[22.45978205219389, 30.472649861137647, 8.218251075820529, 0.9766448803709679, 0.9766448803709679, 0.9766448803709679]"
232,"('mov %r15d, %ebx', 'and $0x2, %ebx', 'jnz 0x425')","[0.9105322803480983, 1.2353781903840853, 0.24582270503303877, 0.3331731082842125, 0.3331731082842125, 1.8719079265225513, 1.8719079265225513, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
233,"('mov %r8, %rax', 'retq')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
234,"('mov %rax, %r12', 'test %rax, %rax', 'jz 0x160')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
235,"('mov %rax, %r13', 'movzxw  0x80(%rbx), %eax', 'test %r13, %r13', 'jz 0x7')","[0.3277622546733343, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
236,"('mov %rax, %r14', 'and $0xfffffffffffffff8, %r14', 'cmp $0x10, %rax', 'jbe 0x434')","[1.0622876604061149, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
237,"('mov %rax, %r8', 'test %rax, %rax', 'jz 0xc8')","[0.9105322803480983, 1.2353781903840853, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
238,"('mov %rax, %rbx', 'lea 0xe0(%rax), %rax', 'xor %edx, %edx', 'xor %esi, %esi', 'movq  %rax, 0x88(%rbx)', 'lea 0xf0(%rbx), %rcx', 'mov %rbx, %rdi', 'mov %rbx, %r12', 'lea 0xac4f0(%rip), %r8', 'callq  0x6f00', 'nop %edi, %edx', 'or $0xfbad0000, %esi', 'movl  $0x0, 0x74(%rdi)', 'movl  %esi, (%rdi)', 'movl  0xa6513(%rip), %esi', 'test %esi, %esi', 'jz 0x9')","[2.5543204033253755, 2.5543204033253755, 0.30355132123755363]"
239,"('mov %rax, %rbx', 'test %rax, %rax', 'jz 0xfffffffffffffe44')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
240,"('mov %rax, %rcx', 'mov %rax, %rdi', 'mov %rax, %rsi', 'mov %rax, %r15', 'shr $0xc, %rsi', 'shr $0xf, %r15', 'mov $0x2, %edx', 'shr $0x6, %rcx', 'shr $0x9, %rdi', 'lea 0x77(%r15), %r10d', 'movq  %rsi, 0x58(%rsp)', 'shr $0x12, %rax', 'cmp $0xbffff, %r13', 'movq  %r15, 0x60(%rsp)', 'lea 0x30(%rcx), %r11d', 'cmovnbe %rdx, %rax', 'mov %r15, %rdx', 'lea 0x6e(%rsi), %r15d', 'movq  %rcx, 0x40(%rsp)', 'movq  %rdi, 0x50(%rsp)', 'lea 0x7c(%rax), %r9d', 'mov %rsi, %rax', 'mov %edi, %esi', 'movl  %r11d, 0x4c(%rsp)', 'add $0x5b, %esi', 'movl  %r9d, 0x68(%rsp)', 'movl  %r10d, 0x6c(%rsp)', 'movl  %r15d, 0x70(%rsp)', 'movl  %esi, 0x74(%rsp)', 'movl  %r11d, 0x28(%rsp)', 'cmp $0x30, %rcx', 'jbe 0x20')","[12.595688432591057, 17.08939221614495, 3.400534913277901, 4.608885200336584, 4.608885200336584, 4.608885200336584, 0.5477130483443146, 0.5477130483443146, 0.5477130483443146, 0.5477130483443146]"
241,"('mov %rax, %rsi', 'test %rax, %rax', 'jz 0x53')","[0.9105322803480983, 1.2353781903840853, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
242,"('mov %rbp, %rdi', 'callq  0x1025', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7')","[2.428084052872186, 3.2943398129681514, 0.888458918016465, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473]"
243,"('mov %rbp, %rdi', 'callq  0x4e27', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  0x70(%rdi), %r12d', 'cmp $0xffffffff, %r12d', 'jz 0xec')","[1.6103333099469, 1.6103333099469, 1.6103333099469, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057]"
244,"('mov %rbp, %rdi', 'callq  0xe659', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')","[1.1105736475205814, 1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
245,"('mov %rbp, %rdx', 'mov %r12, %rsi', 'mov %rbx, %rdi', 'callq  0x78(%r14)', 'nop %edi, %edx', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'test %rdx, %rdx', 'jle 0x84')","[1.9435043901750364, 0.23096313816388434, 0.23096313816388434, 0.23096313816388434, 0.23096313816388434, 0.23096313816388434, 0.23096313816388434, 11.884226080555017]"
246,"('mov %rbp, %rsi', 'lea 0x9d283(%rip), %rdi', 'callq  0xffffffffffffda13', 'test %rsi, %rsi', 'js 0x60d')","[2.731594812988219, 3.70613254309618, 0.7374660870430403, 0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
247,"('mov %rbx, %r13', 'test %r14, %r14', 'jz 0xffffffffffffff62')","[0.9105322803480983, 1.2353781903840853, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
248,"('mov %rbx, %r14', 'movq  0xd8(%rbp), %rax', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %rax, %rdx', 'sub %r15, %r13', 'sub %r15, %rdx', 'cmp %rdx, %r13', 'jbe 0x1ac')","[2.27632867281417, 3.088443447904137, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
249,"('mov %rbx, %r15', 'movl  %r9d, -0x4c8(%rbp)', 'mov %r8, %rsi', 'mov %r12, %rdi', 'sub %r8, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')","[2.007544316888192, 2.7209069574674816, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685, 0.3233492046518685]"
250,"('mov %rbx, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924]"
251,"('mov %rbx, %rdi', 'callq  0x14ad', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x30, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'movl  (%rdi), %eax', 'test $0x80, %al', 'jnz 0x179')","[2.1656211477352287, 2.1656211477352287, 2.1656211477352287, 0.25735828799356153, 0.25735828799356153]"
252,"('mov %rbx, %rdi', 'callq  0x36c9', 'nop %edi, %edx', 'cmpq  $0x0, 0x38(%rdi)', 'jz 0x7')","[0.888458918016465, 0.888458918016465, 0.10558262737478473]"
253,"('mov %rbx, %rdi', 'callq  0x5e0d', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xdb')","[1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398]"
254,"('mov %rbx, %rdi', 'callq  0x60(%r13)', 'nop %edi, %edx', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x28(%rdi), %rdx', 'movq  0x20(%rdi), %rsi', 'cmp %rsi, %rdx', 'jbe 0x38')","[0.21776454922100774, 0.21776454922100774, 11.205127447380443]"
255,"('mov %rbx, %rdi', 'callq  0x68(%rbp)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0xa0, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x98(%rsp)', 'xor %eax, %eax', 'movl  0x70(%rdi), %eax', 'test %eax, %eax', 'js 0xae')","[6.0702111462085035, 8.235850546448416, 2.221149323097239, 2.221149323097239, 2.221149323097239, 0.2639575824649998, 0.2639575824649998, 0.2639575824649998, 0.2639575824649998]"
256,"('mov %rbx, %rdi', 'callq  0x88(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x36af9')","[1.1105736475205814, 1.1105736475205814, 1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
257,"('mov %rbx, %rdi', 'callq  0xfffffffffffb2591', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')","[4.856170133800449, 6.588681653992379, 1.3110510467494132, 1.7769198640890063, 1.7769198640890063, 1.7769198640890063, 0.21116728280564548, 0.21116728280564548, 0.21116728280564548, 0.21116728280564548]"
258,"('mov %rbx, %rdi', 'jz 0x5f')",[0.20485191618485296]
259,"('mov %rbx, %rdi', 'xor %r12d, %r12d', 'callq  0x32cd', 'nop %edi, %edx', 'pushq  %rbx', 'cmpq  $0x0, 0x60(%rdi)', 'mov %rdi, %rbx', 'jz 0xa')","[0.9013472143797073, 1.2216320263006775, 1.2216320263006775, 1.2216320263006775, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848]"
260,"('mov %rdi, %rax', 'mov %rdi, %r9', 'sub $0x1, %r8', 'mul %rcx', 'shr $0x3, %rdx', 'lea (%rdx,%rdx,4), %rax', 'add %rax, %rax', 'sub %rax, %r9', 'movzxb  (%rsi,%r9,1), %eax', 'movb  %al, (%r8)', 'mov %rdi, %rax', 'mov %rdx, %rdi', 'cmp $0x9, %rax', 'jnbe 0xffffffffffffffd3')","[1.1061991305645604, 1.1061991305645604, 1.1061991305645604, 1.1061991305645604, 1.1061991305645604, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 1.4992749311668039, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398]"
261,"('mov %rdi, %rbp', 'mov %rsi, %r12', 'movq  0x28(%rdi), %rdi', 'mov %rdx, %rbx', 'movl  (%rbp), %eax', 'and $0xa00, %eax', 'cmp $0xa00, %eax', 'jz 0x5c')","[2.27632867281417, 3.088443447904137, 0.6145537204984829, 0.6145537204984829, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 4.679767788250302, 4.679767788250302, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
262,"('mov %rsi, %r12', 'test $0xf, %sil', 'jnz 0x29e')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
263,"('mov %rsi, %rbp', 'mov %rdx, %r12', 'mov %rdx, %rbx', 'jmp 0x1a')","[0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
264,"('mov %rsp, %rsi', 'mov %rbp, %rdi', 'callq  0x90(%rbx)', 'nop %edi, %edx', 'mov %rsi, %rdx', 'movl  0x70(%rdi), %esi', 'mov $0x1, %edi', 'jmp 0x35421')","[3.490371713278301, 4.735614368416251, 1.2771602016626877, 1.2771602016626877, 1.2771602016626877, 0.15177566061877681, 0.15177566061877681, 0.15177566061877681, 0.15177566061877681]"
265,"('movb  $0x1, 0xb575e(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xa8')","[0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
266,"('movb  $0x1, 0xc372f(%rip)', 'popq  %rbp', 'retq')","[0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
267,"('movd %eax, %xmm1', 'movd %edx, %xmm2', 'mov %rdi, %rax', 'and $0xfff, %eax', 'punpcklbw %xmm1, %xmm1', 'cmp $0xfbf, %rax', 'punpcklbw %xmm2, %xmm2', 'punpcklwd %xmm1, %xmm1', 'punpcklwd %xmm2, %xmm2', 'pshufd $0x0, %xmm1, %xmm1', 'pshufd $0x0, %xmm2, %xmm2', 'jnbe 0x305')","[3.942538983768159, 3.942538983768159, 3.942538983768159, 3.942538983768159, 0.46852557079920704, 0.46852557079920704]"
268,"('movdqux  (%r14), %xmm1', 'movq  0x10(%r14), %rax', 'mov $0x25, %esi', 'mov %r13, %rdi', 'movq  %rax, -0x438(%rbp)', 'movupsx  %xmm1, -0x448(%rbp)', 'callq  0xfffffffffffed020', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36')","[7.02930522929741, 9.53711622263093, 1.897745360931317, 2.572090230663649, 2.572090230663649, 14.451124487664, 14.451124487664, 0.30566252761271256, 0.30566252761271256, 0.30566252761271256, 0.30566252761271256, 0.30566252761271256, 0.30566252761271256, 0.30566252761271256]"
269,"('movdqux  (%rdi), %xmm3', 'pxor %xmm5, %xmm5', 'movdqux  0x1(%rdi), %xmm4', 'movdqa %xmm3, %xmm6', 'pcmpeqb %xmm1, %xmm3', 'pcmpeqb %xmm2, %xmm4', 'movdqux  0x10(%rdi), %xmm0', 'pcmpeqb %xmm5, %xmm6', 'pminub %xmm4, %xmm3', 'movdqa %xmm3, %xmm4', 'movdqux  0x11(%rdi), %xmm3', 'pcmpeqb %xmm0, %xmm5', 'pcmpeqb %xmm2, %xmm3', 'por %xmm6, %xmm4', 'pcmpeqb %xmm1, %xmm0', 'pminub %xmm3, %xmm0', 'por %xmm5, %xmm0', 'pmovmskb %xmm4, %r8d', 'pmovmskb %xmm0, %eax', 'shl $0x10, %rax', 'or %rax, %r8', 'jz 0x68')","[2.274456777055984, 2.274456777055984, 2.274456777055984, 2.274456777055984, 0.2702932296465528, 0.2702932296465528]"
270,"('movl  $0x0, -0x18(%rbp)',)",[0.35919186870265774]
271,"('movl  $0x0, -0xc(%rbp)',)",[0.35919186870265774]
272,"('movl  $0x0, 0x14(%rsp)', 'cmp $0x2b, %cl', 'jz 0x171')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094]"
273,"('movl  $0x1, 0x1c(%rsp)', 'movq  0x60(%rbp), %rax', 'lea (%r12,%rbx,1), %r13', 'cmp %r12, %rax', 'jz 0x5a3')","[2.5798394329302026, 0.9439891214345513, 0.9439891214345513, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303]"
274,"('movl  $0x5, -0x10(%rbp)',)","[0.06285351390867114, 0.06285351390867114, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717]"
275,"('movl  $0xffffffff, 0x70(%rbx)', 'popq  %rbx', 'retq')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094]"
276,"('movl  $0xffffffff, 0xc0(%rbx)', 'movq  0x68(%rbx), %rbx', 'test %rbx, %rbx', 'jz 0x10f')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472, 4.41414111563472, 4.41414111563472]"
277,"('movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b')","[1.6693071525821044, 2.2648600157041567, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
278,"('movl  $0xffffffff, 0xc0(%rdi)', 'movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924]"
279,"('movl  %ebx, -0x14(%rbp)',)","[0.6070215202320656, 0.6070215202320656, 0.06285351390867114, 0.22211472950411626, 1.247937941663009, 0.02639514982967717]"
280,"('movl  %esi, 0x28(%rsp)', 'cmp $0x14, %rdi', 'jbe 0x16')","[0.36873304352152014, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
281,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",[0.059389594130792644]
282,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x190')","[0.4442294590082325, 0.4442294590082325, 0.05279232771543038]"
283,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x1eb')","[0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
284,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x22d')","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
285,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x90')","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
286,"('movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0xc7')","[0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
287,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x103')","[0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
288,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x123')","[1.0622876604061149, 1.4412745554480995, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
289,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x196')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208]"
290,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d3f')","[1.0622876604061149, 1.4412745554480995, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 2.1838919049242844, 2.1838919049242844, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
291,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x1d8')","[0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
292,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x238')","[0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
293,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x26b')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
294,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x297')","[0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
295,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x69')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208]"
296,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x8f')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
297,"('movl  %fs:0x18, %eax', 'test %eax, %eax', 'jz 0xc')","[1.0622876604061149, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
298,"('movl  (%r12), %r15d', 'test $0x8, %r15b', 'jnz 0x249b')","[0.28679146582514853, 0.3887012836462225, 2.1838919049242844, 2.1838919049242844, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
299,"('movl  (%rbp), %eax', 'test $0x8, %ah', 'jnz 0xe5')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208]"
300,"('movl  (%rbp), %eax', 'test $0x80, %ah', 'jnz 0x42')","[0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
301,"('movl  (%rbp), %edx', 'mov %eax, %r12d', 'and $0x8000, %edx', 'jmp 0xfffffffffffffeb3')","[0.6663441885123488, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
302,"('movl  (%rbx), %eax', 'jmp 0xffffffffffffffd0')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
303,"('movl  (%rbx), %eax', 'mov $0xffffffffffffffff, %r12', 'test $0x80, %ah', 'jnz 0x2f')","[0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038]"
304,"('movl  (%rbx), %eax', 'movq  0x38(%rbx), %rdi', 'mov %eax, %edx', 'test %rbp, %rbp', 'jz 0x57')","[0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
305,"('movl  (%rbx), %eax', 'test $0x1, %al', 'jz 0x122')","[0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
306,"('movl  (%rbx), %eax', 'test $0x202, %eax', 'jnz 0xfffffffffffffe18')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208]"
307,"('movl  (%rbx), %ebp', 'and $0x2, %ebp', 'jnz 0xffffffffffffffe4')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036, 2.3768452161110036, 2.3768452161110036]"
308,"('movl  (%rbx), %edx', 'mov %ebp, %eax', 'and $0x1004, %ebp', 'movl  %r12d, 0x70(%rbx)', 'and $0x100c, %eax', 'and $0xffffeff3, %edx', 'or %eax, %edx', 'movl  %edx, (%rbx)', 'cmp $0x1004, %ebp', 'jnz 0x3b')","[1.1105736475205814, 1.1105736475205814, 1.1105736475205814, 0.13197980526053793]"
309,"('movl  (%rbx), %edx', 'test $0x1, %dh', 'jnz 0x35')","[0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
310,"('movl  (%rcx), %edx', 'mov %rcx, %rbx', 'mov %rdi, %rbp', 'mov %edx, %ecx', 'and $0x8000, %ecx', 'jz 0x18b')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
311,"('movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test %eax, %eax', 'jz 0xc8')","[0.05279232771543038, 0.05279232771543038, 2.7163945326982892]"
312,"('movl  (%rdi), %eax', 'mov %rdi, %rbx', 'xor %ebp, %ebp', 'and $0x808, %eax', 'cmp $0x800, %eax', 'jz 0xe1')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
313,"('movl  -0x4(%rsi,%rdx,1), %ecx', 'movl  (%rsi), %esi', 'movl  %ecx, -0x4(%rdi,%rdx,1)', 'movl  %esi, (%rdi)', 'retq')","[0.49164338201000146, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
314,"('movl  -0x4b4(%rbp), %ecx', 'test %ecx, %ecx', 'jnz 0x9f')","[1.0622876604061149, 1.4412745554480995, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 2.1838919049242844, 2.1838919049242844, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
315,"('movl  -0x4b8(%rbp), %eax', 'mov %rdi, %rbx', 'movl  $0x0, -0x540(%rbp)', 'movl  $0x0, -0x514(%rbp)', 'movq  $0xffffffffffffffff, -0x528(%rbp)', 'mov %eax, %esi', 'and $0x2, %esi', 'movl  %esi, -0x550(%rbp)', 'mov %eax, %esi', 'and $0x8, %eax', 'and $0x1, %esi', 'movl  %eax, -0x54c(%rbp)', 'movb  %sil, -0x545(%rbp)', 'movzxb  0x1(%rbx), %r15d', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0x239')","[1.761723639911229, 2.387735877239345, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477]"
316,"('movl  -0x4c8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rax, %r15', 'jnle 0xfffffffffffffd96')","[0.5326141708581873, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
317,"('movl  -0x4d8(%rbp), %eax', 'orl  -0x518(%rbp), %eax', 'orl  -0x4e8(%rbp), %eax', 'jz 0x932')","[0.4097038323697059, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
318,"('movl  -0x4e0(%rbp), %r9d', 'movq  -0x4c8(%rbp), %r8', 'mov %rax, %rbx', 'test %r9d, %r9d', 'js 0x2a7a')","[0.49164338201000146, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
319,"('movl  -0x4f8(%rbp), %r9d', 'mov $0x7fffffff, %eax', 'sub %r9d, %eax', 'cdqe', 'cmp %rcx, %rax', 'jl 0xfffffffffffffc35')","[0.5326141708581873, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
320,"('movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x3b')",[0.04619303324399208]
321,"('movl  -0x500(%rbp), %r11d', 'test %r11d, %r11d', 'jnz 0x52e')","[0.28679146582514853, 0.04619303324399208, 0.04619303324399208]"
322,"('movl  -0x520(%rbp), %eax', 'test %eax, %eax', 'jz 0x33')","[0.28679146582514853, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
323,"('movl  -0x530(%rbp), %eax', 'test %eax, %eax', 'jz 0x3e')","[0.28679146582514853, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
324,"('movl  -0x53c(%rbp), %ebx', 'test %ebx, %ebx', 'jz 0x5d7')","[0.28679146582514853, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
325,"('movl  -0xc(%rbp), %eax', 'add $0x1, %eax', 'movl  %eax, -0xc(%rbp)', 'jmp 0xffffffffffffff7e')","[0.23570473326966887, 0.23570473326966887, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
326,"('movl  0x14(%rsp), %ecx', 'mov %rax, %rdx', 'neg %rdx', 'test %ecx, %ecx', 'cmovnz %rdx, %rax', 'add $0x28, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[1.3326883770246976, 1.3326883770246976, 0.1583749550902151, 0.1583749550902151]"
327,"('movl  0x18(%rsp), %eax', 'and $0xf000, %eax', 'cmp $0x2000, %eax', 'jz 0x83')","[1.2140430404641311, 1.6471709205121137, 0.3277622546733343, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
328,"('movl  0x1c(%rsp), %eax', 'test %eax, %eax', 'jnz 0xfffffffffffffeb1')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
329,"('movl  0x1c(%rsp), %esi', 'mov %r14, %rdx', 'mov %r8, %rdi', 'movq  %r8, 0x8(%rsp)', 'callq  0xfffffffffffe85d0', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'test %rdx, %rdx', 'jz 0x25c')","[1.6658614853089102, 1.6658614853089102, 0.19796869386276886, 0.19796869386276886]"
330,"('movl  0x28(%rsp), %eax', 'lea -0x2(%rax,%rax,1), %eax', 'lea 0x70(%rbx,%rax,8), %rax', 'movq  (%rax), %rdx', 'lea -0x10(%rax), %rcx', 'cmp %rcx, %rdx', 'jz 0xc')","[3.490371713278301, 4.735614368416251, 0.9423180032278933, 1.2771602016626877, 1.2771602016626877, 1.2771602016626877, 0.15177566061877681, 0.15177566061877681, 0.15177566061877681, 0.15177566061877681]"
331,"('movl  0x28(%rsp), %eax', 'lea 0x1(%rax), %ecx', 'add %eax, %eax', 'mov %ecx, %edi', 'lea 0x60(%rbx,%rax,8), %rdx', 'shr $0x5, %edi', 'mov %edi, %eax', 'movl  0x860(%rbx,%rax,4), %esi', 'mov $0x1, %eax', 'shl %cl, %eax', 'nop', 'cmp %esi, %eax', 'jnbe 0x1ae')","[3.7938824733943335, 5.147407098544279, 1.0242575528681888, 1.3882185804427838, 1.3882185804427838, 1.3882185804427838, 0.1649742495616534, 0.1649742495616534, 0.1649742495616534, 0.1649742495616534]"
332,"('movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0xffffffffffffff10')","[0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
333,"('movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa76e0(%rip), %edx', 'jnz 0x3e')","[0.7218743919304349, 0.7218743919304349, 0.08578677201654585]"
334,"('movl  0x70(%r13), %edi', 'mov %rbx, %rdx', 'mov %rbp, %rsi', 'testb  $0x2, 0x74(%r13)', 'jz 0xffffffffffffffdc')","[0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
335,"('movl  0x8(%rbp), %eax', 'test %eax, %eax', 'jnz 0x37b')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
336,"('movl  0x8(%rbx), %eax', 'test %eax, %eax', 'jz 0x228')","[1.0622876604061149, 1.4412745554480995, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
337,"('movl  0xa2ebf(%rip), %esi', 'test %esi, %esi', 'jnz 0x5a9')","[1.0622876604061149, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
338,"('movl  0xa5dde(%rip), %eax', 'sub $0x1, %eax', 'movl  %eax, 0xa5dd5(%rip)', 'test %eax, %eax', 'jnz 0x24')","[0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
339,"('movl  0xa60ee(%rip), %eax', 'sub $0x1, %eax', 'movl  %eax, 0xa60e5(%rip)', 'test %eax, %eax', 'jnz 0x20')","[0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
340,"('movl  0xc0(%rbp), %eax', 'test %eax, %eax', 'jle 0x127')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
341,"('movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jle 0x10')","[0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
342,"('movl  0xc0(%rbx), %eax', 'test %eax, %eax', 'jnle 0xffffffffffffff0b')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036, 2.3768452161110036, 2.3768452161110036]"
343,"('movl  0xc0(%rbx), %edx', 'test %edx, %edx', 'jz 0xffffffffffffffda')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036, 2.3768452161110036]"
344,"('movl  0xc0(%rdi), %edx', 'test %edx, %edx', 'jle 0x28')","[0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
345,"('movq  $0x0, (%rax)', 'movq  $0x0, 0x8(%rax)', 'movl  %edx, 0xc0(%rdi)', 'test %edx, %edx', 'js 0x3c')","[0.9439891214345513, 0.9439891214345513, 0.11218192184622303]"
346,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xc6')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
347,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x158')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924]"
348,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1a8')","[0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
349,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x1ad6')","[1.6693071525821044, 2.2648600157041567, 0.4506725931618157, 0.6108160131503387, 0.6108160131503387, 3.4318298465872936, 3.4318298465872936, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
350,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xaf')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
351,"('movq  $0x0, 0x8(%rdi)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xee')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
352,"('movq  $0x0, 0x8(%rsp)', 'lea -0x1b90(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe01')","[0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 6.790986331745724]"
353,"('movq  $0x0, 0x8(%rsp)', 'lea -0x1ed8(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffdc1')","[0.13197980526053793, 0.13197980526053793, 6.790986331745724]"
354,"('movq  $0x0, 0x8(%rsp)', 'lea -0x318(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe00')","[1.1105736475205814, 1.1105736475205814, 1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
355,"('movq  $0x0, 0x8(%rsp)', 'lea -0x5e0(%rip), %rax', 'movq  %rax, (%rsp)', 'jmp 0xfffffffffffffe7a')","[1.1105736475205814, 1.1105736475205814, 0.13197980526053793]"
356,"('movq  $0x0, 0xa5dca(%rip)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0xa0')","[0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
357,"('movq  $0x0, 0xa60da(%rip)', 'movl  %fs:0x18, %edx', 'test %edx, %edx', 'jnz 0x72')","[0.07258818307366924, 0.07258818307366924, 3.735042482460148]"
358,"('movq  $0x0, 0xa6155(%rip)', 'movq  0x68(%rbx), %rbx', 'test %rbx, %rbx', 'jz 0x6e')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472, 4.41414111563472, 4.41414111563472]"
359,"('movq  $0x0, 0xa7683(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa768e(%rip)', 'jnz 0x24')","[0.7218743919304349, 0.7218743919304349, 0.08578677201654585]"
360,"('movq  $0x0, 0xa7685(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0xb3')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924]"
361,"('movq  $0x0, 0xa79b9(%rip)', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x147')","[0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
362,"('movq  $0xffffffffffffffff, 0x90(%rbx)', 'movl  (%rbx), %edx', 'mov %edx, %ecx', 'or $0x20, %edx', 'or $0x10, %ecx', 'test %rax, %rax', 'mov $0xffffffff, %eax', 'cmovz %ecx, %edx', 'movl  %edx, (%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[1.8879762148130264, 1.8879762148130264, 0.22436384369244605, 0.22436384369244605]"
363,"('movq  $0xffffffffffffffff, 0x90(%rbx)', 'xor %eax, %eax', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')","[0.09238606648798416, 0.09238606648798416, 4.753690432222007]"
364,"('movq  $0xffffffffffffffff, 0x90(%rdi)', 'jmp 0xffffffffffffff80')","[0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
365,"('movq  %fs:0x10, %r12', 'cmpq  %r12, 0xa779a(%rip)', 'jz 0x25')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094]"
366,"('movq  %fs:0x10, %r12', 'cmpq  0xa7adc(%rip), %r12', 'jz 0x25')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
367,"('movq  %fs:0x10, %r12', 'jmp 0xaf')","[0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
368,"('movq  %fs:0x10, %r14', 'jmp 0x1d')","[0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
369,"('movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0xfb')",[501.8919828932853]
370,"('movq  %fs:0x10, %r9', 'xor %r8d, %r8d', 'lea 0x2d0(%r9), %r10', 'xor %edx, %edx', 'xor %esi, %esi', 'mov $0x1200011, %edi', 'mov $0x38, %eax', 'syscall', 'nop %edi, %edx', 'movzxb  (%rsi), %eax', 'test %al, %al', 'jz 0x19e')",[1.1661038509386674]
371,"('movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0xa6263(%rip)', 'jz 0x25')","[0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
372,"('movq  %fs:0x10, %rbx', 'cmpq  0xa5f5b(%rip), %rbx', 'jz 0x25')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
373,"('movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'lea 0xe0(%rsp), %rax', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x10, (%rsp)', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x320b', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2')","[5.552872293715059, 0.6598949701905376, 0.6598949701905376, 0.6598949701905376]"
374,"('movq  %fs:0x28, %rax', 'movq  %rax, 0x18(%rsp)', 'xor %eax, %eax', 'movq  0xb2897(%rip), %rdi', 'xor %ecx, %ecx', 'mov %rsp, %rdx', 'lea 0xe0(%rsp), %rax', 'mov %r10, %rsi', 'movl  $0x8, (%rsp)', 'movq  %rax, 0x8(%rsp)', 'lea 0x20(%rsp), %rax', 'movl  $0x30, 0x4(%rsp)', 'movq  %rax, 0x10(%rsp)', 'callq  0x3139', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rsp, %rbp', 'pushq  %r15', 'pushq  %r14', 'mov %rdx, %r14', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbx', 'sub $0x538, %rsp', 'movl  %ecx, -0x4b8(%rbp)', 'movq  %fs:0x28, %rax', 'movq  %rax, -0x38(%rbp)', 'xor %eax, %eax', 'mov $0xffffffffffffffc0, %rax', 'movl  %fs:(%rax), %eax', 'movl  %eax, -0x4d4(%rbp)', 'movl  0xc0(%rdi), %eax', 'test %eax, %eax', 'jnz 0xf2')","[15.934306793867417, 21.61911021949719, 4.301884155713684, 5.830515198581185, 32.75837654580819, 32.75837654580819, 0.6928894144916531, 0.6928894144916531, 0.6928894144916531, 0.6928894144916531]"
375,"('movq  %fs:0xffffffffffffffc8, %rax', 'test %rax, %rax', 'jz 0x88')","[1.3657984205221476, 1.8530672855761279, 0.36873304352152014, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
376,"('movq  %fs:0xffffffffffffffc8, %rdx', 'mov %rdi, %rbp', 'test %rdx, %rdx', 'jz 0x3a')","[1.5175538005801636, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
377,"('movq  %r11, -0x500(%rbp)', 'movl  $0x0, -0x4e8(%rbp)', 'movl  $0xa, -0x510(%rbp)', 'jmp 0xfffffffffffff967')","[0.8194056366833358, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
378,"('movq  %rax, (%rbp)', 'test %rax, %rax', 'jz 0xfc')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644]"
379,"('movq  %rax, (%rcx)', 'test %rbp, %rbp', 'jz 0xe')","[0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
380,"('movq  %rax, -0x10(%rbp)', 'cmpq  $0x0, -0x18(%rbp)', 'jnz 0xc')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094]"
381,"('movq  %rax, -0x18(%rbp)', 'mov $0x49608d, %rdi', 'mov $0x4ab33a, %rsi', 'callq  0x16867', 'nop %edi, %edx', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'mov $0x1d8, %edi', 'pushq  %rbx', 'sub $0x8, %rsp', 'callq  0xdc37', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')",[3.6648960789020326]
382,"('movq  %rax, -0x18(%rbp)', 'mov $0x49608d, %rdi', 'mov $0x4ab33a, %rsi', 'callq  0x16957', 'nop %edi, %edx', 'pushq  %r13', 'mov %rsi, %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'mov $0x1d8, %edi', 'pushq  %rbx', 'sub $0x8, %rsp', 'callq  0xdc37', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')","[3.6648960789020326, 0.4355311264980915]"
383,"('movq  %rax, -0x20(%rbp)', 'cmpq  $0x0, -0x8(%rbp)', 'jz 0xb')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094]"
384,"('movq  %rax, -0x30(%rbp)', 'cmp $0xffffffffffffffff, %rax', 'jz 0x4')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
385,"('movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.17949107495395683, 0.17949107495395683, 9.235743033619046]"
386,"('movq  %rbx, 0xa6145(%rip)', 'test %ebp, %ebp', 'jz 0x40')","[0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757, 3.0559438492855757, 3.0559438492855757]"
387,"('movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",[2.130456683432749]
388,"('movq  %rcx, -0x4e8(%rbp)', 'mov %rcx, %rdx', 'mov %r11, %rsi', 'mov %r12, %rdi', 'movl  %r9d, -0x4f8(%rbp)', 'callq  0x38(%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')","[2.831965336247577, 0.3365457655386691, 0.3365457655386691, 0.3365457655386691, 0.3365457655386691, 0.3365457655386691, 0.3365457655386691]"
389,"('movq  %rdx, 0x30(%rbp)', 'cmp $0xffffffff, %ebx', 'jnz 0xffffffffffffff4f')","[1.3657984205221476, 1.8530672855761279]"
390,"('movq  %rdx, 0xa4e4a(%rip)', 'and $0x7f, %sil', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jnz 0x109')","[0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
391,"('movq  (%r14), %rax', 'movq  %rax, (%rbx)', 'test %rax, %rax', 'jz 0xa')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472]"
392,"('movq  (%rbp), %rax', 'movb  $0x0, (%rax,%r12,1)', 'movl  (%rbx), %eax', 'jmp 0xffffffffffffff55')","[0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642]"
393,"('movq  -0x10(%rbp), %rdi', 'callq  0x163b3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')","[1.8324480394510163, 0.21776454922100774, 0.21776454922100774]"
394,"('movq  -0x10(%rbp), %rdi', 'callq  0x164a3', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",[0.21776454922100774]
395,"('movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xed6c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')","[2.276677498459249, 0.2705568769364381, 0.2705568769364381]"
396,"('movq  -0x10(%rbp), %rdi', 'movq  -0x20(%rbp), %rdx', 'mov $0x49605a, %rsi', 'mov $0x0, %al', 'callq  0xee5c', 'nop %edi, %edx', 'sub $0xd8, %rsp', 'movq  %rdx, 0x30(%rsp)', 'movq  %rcx, 0x38(%rsp)', 'movq  %r8, 0x40(%rsp)', 'movq  %r9, 0x48(%rsp)', 'test %al, %al', 'jz 0x39')",[0.2705568769364381]
397,"('movq  -0x18(%rbp), %rdi', 'callq  0x162e5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')",[1.8324480394510163]
398,"('movq  -0x18(%rbp), %rdi', 'callq  0x163d5', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x20, %ah', 'jnz 0xf8')","[1.8324480394510163, 0.21776454922100774, 0.21776454922100774]"
399,"('movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xef1e', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04')","[1.72138966067092, 1.72138966067092, 0.20456798833420717]"
400,"('movq  -0x18(%rbp), %rdx', 'lea -0x8(%rbp), %rdi', 'lea -0x28(%rbp), %rsi', 'callq  0xf00e', 'nop %edi, %edx', 'mov %rdx, %rcx', 'mov $0xa, %edx', 'jmp 0x7a04')","[1.72138966067092, 1.72138966067092, 0.20456798833420717, 0.20456798833420717]"
401,"('movq  -0x38(%rbp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x2d5c')","[1.5175538005801636, 2.058963650640142, 0.4097038323697059, 0.5552878377883288, 0.5552878377883288, 3.11984586818556, 3.11984586818556, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
402,"('movq  -0x4c0(%rbp), %r15', 'mov %r13, %rsi', 'mov %r12, %rdi', 'sub %r13, %r15', 'mov %r15, %rdx', 'callq  0x38(%rax)', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'xor %r13d, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x18, %rsp', 'test %rdx, %rdx', 'jz 0x5f')","[7.2842541866726345, 9.88302146696053, 1.966575556096082, 2.665378782105471, 2.665378782105471, 14.975259356068259, 14.975259356068259, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302]"
403,"('movq  -0x4c0(%rbp), %rdi', 'mov %r15d, %r9d', 'cmpb  $0x0, (%rdi)', 'jz 0x1ad')","[1.6693071525821044, 2.2648600157041567, 0.4506725931618157, 0.6108160131503387, 0.6108160131503387, 3.4318298465872936, 3.4318298465872936, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
404,"('movq  -0x4c8(%rbp), %r8', 'mov $0x25, %esi', 'movl  %r9d, -0x4e0(%rbp)', 'add $0x1, %r8', 'mov %r8, %rdi', 'movq  %r8, -0x4c8(%rbp)', 'callq  0xfffffffffffec9ca', 'jmpq  0xc1ff2(%rip)', 'nop %edi, %edx', 'mov %edi, %ecx', 'vmovd %esi, %xmm0', 'vpxor %xmm9, %xmm9, %xmm9', 'vpbroadcastb %xmm0, %ymm0', 'and $0x3f, %ecx', 'cmp $0x20, %ecx', 'jnbe 0x36')","[1.9796849105716128, 2.683148609443745, 0.3188611165555892, 0.3188611165555892, 0.3188611165555892, 0.3188611165555892, 0.3188611165555892, 0.3188611165555892]"
405,"('movq  -0x4e8(%rbp), %rcx', 'cmp %rax, %rcx', 'jnz 0xfffffffffffff14f')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
406,"('movq  -0x4f8(%rbp), %rcx', 'sub %r11, %rcx', 'cmp %rbx, %rcx', 'jnl 0x7bb')","[0.4097038323697059, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
407,"('movq  -0x528(%rbp), %rcx', 'movl  -0x53c(%rbp), %r10d', 'movl  -0x544(%rbp), %r9d', 'mov %rax, %r11', 'test %rcx, %rcx', 'jz 0x48')","[0.573584959706373, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
408,"('movq  -0x8(%rax), %rax', 'test $0x2, %al', 'jnz 0x20')","[1.3657984205221476, 1.8530672855761279, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
409,"('movq  -0x8(%rbp), %rdi', 'callq  0x24a3e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')",[1.2771602016626877]
410,"('movq  -0x8(%rbp), %rdi', 'callq  0x24b2e', 'nop %edi, %edx', 'sub $0x18, %rsp', 'movq  0x9f289(%rip), %rax', 'test %rax, %rax', 'jnz 0x86')","[1.2771602016626877, 0.15177566061877681, 0.15177566061877681]"
411,"('movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe5d2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf')",[1.6103333099469]
412,"('movq  -0x8(%rbp), %rdi', 'xor %esi, %esi', 'mov $0xa, %edx', 'callq  0xe6c2', 'nop %edi, %edx', 'mov $0xffffffffffffffb0, %rax', 'xor %ecx, %ecx', 'movq  %fs:(%rax), %r8', 'jmp 0xf')","[1.6103333099469, 0.19136939939133057, 0.19136939939133057]"
413,"('movq  -0x8(%rdi), %rax', 'lea -0x10(%rdi), %rsi', 'test $0x2, %al', 'jnz 0x39')","[1.972817912698137, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
414,"('movq  -0x8(%rsi,%rdx,1), %rcx', 'movq  (%rsi), %rsi', 'movq  %rcx, -0x8(%rdi,%rdx,1)', 'movq  %rsi, (%rdi)', 'retq')","[1.1105736475205814, 1.1105736475205814, 1.1105736475205814, 6.23969173637112, 6.23969173637112, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
415,"('movq  0x10(%rdi), %rdx', 'movq  0x20(%rdi), %rsi', 'cmp %rsi, %rdx', 'jz 0x3f')","[0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 4.41414111563472]"
416,"('movq  0x10(%rsp), %rax', 'cmpq  $0x0, (%rax)', 'jnz 0x25')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094]"
417,"('movq  0x10(%rsp), %rax', 'lea (%r15,%r14,1), %r12', 'movq  (%rbp), %rdi', 'lea 0x1(%r12), %rsi', 'movq  (%rax), %rax', 'cmp %rsi, %rax', 'jnb 0x37')","[1.3882185804427838, 1.3882185804427838, 0.1649742495616534, 0.1649742495616534]"
418,"('movq  0x10(%rsp), %rax', 'mov $0x78, %edi', 'movq  $0x78, (%rax)', 'callq  0xdae1', 'nop %edi, %edx', 'pushq  %r12', 'movq  0x9d2d3(%rip), %rax', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'test %rax, %rax', 'jnz 0x15b')","[2.221149323097239, 2.221149323097239, 0.2639575824649998]"
419,"('movq  0x18(%rax), %rdx', 'mov %rax, %r12', 'movq  0x28(%rax), %rax', 'cmp %rdx, %rbx', 'jnz 0xffffffffffffffe8')","[0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 4.753690432222007]"
420,"('movq  0x18(%rax), %rdx', 'movq  0x20(%rax), %rdi', 'movq  $0x0, 0x10(%rax)', 'mov %ebp, %esi', 'ror $0x11, %rdx', 'xorq  %fs:0x30, %rdx', 'callq  %rdx', 'nop %edi, %edx', 'pushq  %rbp', 'lea 0xbcfb4(%rip), %rax', 'lea 0xbcf9d(%rip), %rbp', 'pushq  %rbx', 'sub %rbp, %rax', 'sub $0x8, %rsp', 'sar $0x3, %rax', 'jz 0x17')","[0.3299464710672308, 0.3299464710672308, 0.3299464710672308, 16.97746582936431]"
421,"('movq  0x18(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xa')","[1.5175538005801636, 2.058963650640142, 0.4097038323697059, 0.5552878377883288, 0.5552878377883288, 3.11984586818556, 3.11984586818556, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
422,"('movq  0x20(%rbx), %rax', 'add $0x8, %rsp', 'mov %rbp, %rdi', 'popq  %rbx', 'popq  %rbp', 'jmp %rax')","[0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.9995172967965612, 0.11878121631766134, 0.11878121631766134, 0.11878121631766134]"
423,"('movq  0x20(%rbx), %rax', 'cmpq  %rax, 0x28(%rbx)', 'jnbe 0xffffffffffffff0e')","[0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862, 3.395493165872862, 3.395493165872862]"
424,"('movq  0x20(%rdi), %rsi', 'movq  0x28(%rdi), %rdx', 'sub %rsi, %rdx', 'callq  0xfffffffffffffd3d', 'nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7')","[1.3326883770246976, 0.1583749550902151, 0.1583749550902151, 0.1583749550902151]"
425,"('movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0')","[1.972817912698137, 2.6766507177761087, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
426,"('movq  0x28(%rdi), %rdx', 'cmp $0xffffffff, %ebx', 'jz 0xbd')","[1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.3657984205221476, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 1.8530672855761279, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
427,"('movq  0x28(%rsp), %rax', 'mov %rax, %rdx', 'shr $0x20, %rax', 'shr $0x8, %rdx', 'and $0xfffff000, %eax', 'and $0xfff, %edx', 'or %edx, %eax', 'sub $0x88, %eax', 'cmp $0x7, %eax', 'jnbe 0x13')","[2.731594812988219, 3.70613254309618]"
428,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x109')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
429,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x162')","[0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
430,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x163')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
431,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x657')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094]"
432,"('movq  0x28(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0xe4')","[0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
433,"('movq  0x28(%rsp), %rcx', 'xorq  %fs:0x28, %rcx', 'jnz 0xac')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094]"
434,"('movq  0x30(%rbp), %rax', 'cmp %rdi, %rax', 'jbe 0x73')","[1.3657984205221476, 1.8530672855761279, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
435,"('movq  0x3397b(%rip), %rax', 'test %rax, %rax', 'jz 0x50')","[0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
436,"('movq  0x38(%rbp), %rdx', 'movl  (%rbp), %eax', 'movq  %rdx, 0x18(%rbp)', 'movq  %rdx, 0x8(%rbp)', 'movq  %rdx, 0x10(%rbp)', 'jmp 0xfffffffffffffeba')","[3.94563785345235, 5.3533034636082935, 1.4437467558047938, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917]"
437,"('movq  0x38(%rbx), %rax', 'movl  0xc0(%rbx), %edx', 'movq  %rax, 0x18(%rbx)', 'movq  %rax, 0x8(%rbx)', 'movq  %rax, 0x10(%rbx)', 'movq  %rax, 0x28(%rbx)', 'movq  %rax, 0x20(%rbx)', 'test %edx, %edx', 'jle 0x3b')","[1.2700802579012276, 1.72138966067092, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717, 10.526028814205873]"
438,"('movq  0x38(%rbx), %rcx', 'movq  %rcx, 0x18(%rbx)', 'cmpq  %rax, 0x10(%rbx)', 'jnb 0x6')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
439,"('movq  0x38(%rsp), %rax', 'xorq  %fs:0x28, %rax', 'jnz 0x846')","[0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
440,"('movq  0x38(%rsp), %rbx', 'lea -0x1(%rbx), %rax', 'cmp $0x1ffe, %rax', 'jnbe 0x4e')","[1.972817912698137, 2.6766507177761087, 0.5326141708581873, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
441,"('movq  0x40(%rbp), %rcx', 'cmp %rdx, %rcx', 'jz 0xe3')","[1.3657984205221476, 1.8530672855761279, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
442,"('movq  0x40(%rbp), %rcx', 'subq  0x38(%rbp), %rcx', 'mov %r14, %r8', 'cmp $0x7f, %rcx', 'jbe 0xd')","[1.8210625326401206, 2.4707543527120945, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
443,"('movq  0x40(%rbp), %rdx', 'lea (%rsi,%rbx,1), %rax', 'sub %rdi, %rdx', 'cmp %rdx, %rbx', 'jbe 0xa7')","[0.573584959706373, 0.573584959706373, 0.777402567292445, 4.367783809848569, 4.367783809848569, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
444,"('movq  0x40(%rbx), %rax', 'movq  %rax, 0x30(%rbx)', 'xor %eax, %eax', 'cmp %r13, %rbp', 'setnz %al', 'neg %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[1.2782736044484344, 1.7324952957433222, 0.205886224783634, 0.205886224783634, 0.205886224783634, 0.205886224783634]"
445,"('movq  0x40(%rbx), %rdx', 'mov %rbx, %rdi', 'sub %rsi, %rdx', 'callq  0x70(%r12)', 'nop %edi, %edx', 'movl  0x70(%rdi), %r8d', 'testb  $0x2, 0x74(%rdi)', 'mov %r8d, %edi', 'jnz 0x11')","[1.3326883770246976, 1.3326883770246976, 1.3326883770246976, 1.3326883770246976, 0.1583749550902151, 0.1583749550902151, 0.1583749550902151]"
446,"('movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xf')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
447,"('movq  0x48(%rbp), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffffbd')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
448,"('movq  0x48(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0x3e')","[0.36873304352152014, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
449,"('movq  0x48(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0xd')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644]"
450,"('movq  0x50099(%rip), %r12', 'test %r12, %r12', 'jz 0x86')",[250.94599246067068]
451,"('movq  0x500ea(%rip), %rbp', 'mov %rbp, %rdi', 'test %rbp, %rbp', 'jnz 0x30')","[278.8288998910588, 0.5552878377883288]"
452,"('movq  0x60(%rbp), %rax', 'movq  0x8(%rax), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  0xa0255(%rip), %rax', 'jb 0xfffffffffffffab1')","[0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
453,"('movq  0x60(%rbp), %rax', 'test %rax, %rax', 'jz 0x12')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
454,"('movq  0x60(%rbx), %r8', 'movq  0x8(%r8), %rax', 'and $0xfffffffffffffff8, %rax', 'cmpq  %rax, 0x888(%rbx)', 'jb 0x218')","[2.27632867281417, 3.088443447904137, 0.6145537204984829, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
455,"('movq  0x68(%rbx), %rax', 'and $0x7f, %sil', 'add $0x68, %rcx', 'movq  %rax, (%rcx)', 'movl  %esi, (%rbx)', 'test %r8d, %r8d', 'jz 0xfffffffffffffeb9')","[1.0550454721585714, 1.0550454721585714, 0.12538051078909965, 0.12538051078909965]"
456,"('movq  0x68(%rcx), %rdx', 'cmp %rcx, %rbx', 'jnz 0xeb')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
457,"('movq  0x8(%r13), %rax', 'test $0x1, %al', 'jz 0x5c5')","[1.3657984205221476, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
458,"('movq  0x8(%r14), %rax', 'test %rax, %rax', 'jz 0x10a')","[0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757, 3.0559438492855757]"
459,"('movq  0x8(%rax), %rdx', 'and $0xfffffffffffffff8, %rdx', 'add %rdx, %rax', 'cmp %rax, %r13', 'jb 0xfffffffffffffa4f')","[1.6693071525821044, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
460,"('movq  0x8(%rbp), %rdx', 'movq  0x10(%rbp), %rsi', 'cmp %rsi, %rdx', 'jb 0xc4')","[0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
461,"('movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'jmp 0xfffffffffffffe39')","[0.9439891214345513, 0.9439891214345513, 0.11218192184622303, 0.11218192184622303]"
462,"('movq  0x8(%rbx), %r8', 'movq  0x10(%rbx), %r14', 'sub %r8, %r14', 'test %r14, %r14', 'jle 0x1b1')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
463,"('movq  0x8(%rbx), %rax', 'movzxb  (%rax), %eax', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[1.2771602016626877, 1.2771602016626877, 0.15177566061877681, 0.15177566061877681]"
464,"('movq  0x8(%rbx), %rsi', 'subq  0x10(%rbx), %rsi', 'jz 0x41')","[0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
465,"('movq  0x8(%rdi), %rdx', 'cmpq  0x10(%rdi), %rdx', 'jb 0x191')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
466,"('movq  0x8(%rsp), %r8', 'mov %rax, %r13', 'sub %r8, %rax', 'add $0x1, %rax', 'test %r13, %r13', 'cmovnz %rax, %r14', 'mov $0x7fffffffffffffff, %rax', 'sub %r15, %rax', 'cmp %r14, %rax', 'jnle 0xffffffffffffff3d')","[0.9439891214345513, 0.9439891214345513, 0.11218192184622303, 0.11218192184622303]"
467,"('movq  0x8(%rsp), %rbx', 'test %rbx, %rbx', 'jz 0x5')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644]"
468,"('movq  0x88(%r12), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jz 0xd5')","[2.27632867281417, 3.088443447904137, 0.6145537204984829, 0.8329307426544551, 0.8329307426544551, 4.679767788250302, 4.679767788250302, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
469,"('movq  0x88(%r12), %rdi', 'movq  %fs:0x10, %r15', 'cmpq  %r15, 0x8(%rdi)', 'jz 0x26')","[2.1245732927561534, 2.882547082840123, 0.573584959706373, 0.777402567292445, 0.777402567292445, 4.367783809848569, 4.367783809848569, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
470,"('movq  0x88(%rbp), %rdi', 'movq  %fs:0x10, %rbx', 'cmpq  %rbx, 0x8(%rdi)', 'jz 0x28')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
471,"('movq  0x88(%rbp), %rdi', 'subl  $0x1, 0x4(%rdi)', 'jz 0x144')","[0.6663441885123488, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
472,"('movq  0x88(%rbx), %rax', 'movq  %r14, 0x8(%rax)', 'movl  $0x1, 0x4(%rax)', 'jmp 0xfffffffffffffdcf')","[0.13197980526053793, 0.13197980526053793, 6.790986331745724]"
473,"('movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'jnz 0x1d')","[0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
474,"('movq  0x88(%rbx), %rdi', 'movl  0x4(%rdi), %eax', 'sub $0x1, %eax', 'movl  %eax, 0x4(%rdi)', 'movl  0xa79f9(%rip), %edx', 'jnz 0x23')","[0.9439891214345513, 0.9439891214345513, 0.9439891214345513, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303]"
475,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x125')","[0.777402567292445, 0.777402567292445, 0.09238606648798416]"
476,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  %r12, 0x8(%rdi)', 'jz 0x8c')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
477,"('movq  0x88(%rbx), %rdi', 'movq  %fs:0x10, %r12', 'cmpq  0x8(%rdi), %r12', 'jz 0x1bb')","[0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
478,"('movq  0x88(%rbx), %rdi', 'test %rdi, %rdi', 'jz 0xffffffffffffff1f')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
479,"('movq  0x88(%rbx), %rdx', 'test %rdx, %rdx', 'jz 0x3f')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
480,"('movq  0x90(%r13), %rdx', 'test %rdx, %rdx', 'js 0xc')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
481,"('movq  0x90(%rbx), %rdx', 'addq  %rax, 0x10(%rbx)', 'cmp $0xffffffffffffffff, %rdx', 'jz 0xc')","[0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585]"
482,"('movq  0xb26f9(%rip), %r10', 'lea -0x1(%rbp), %rsi', 'movq  0xb26de(%rip), %r11', 'mov %rbx, %rdi', 'xor %eax, %eax', 'movq  %rsi, 0x18(%rsp)', 'xor %r9d, %r9d', 'movsxd %edx, %r15', 'jmp 0x2e')","[1.55480513458489, 1.55480513458489, 0.18477010491989226, 0.18477010491989226]"
483,"('movq  0xb2ed0(%rip), %rax', 'movq  %rax, -0x538(%rbp)', 'test %rax, %rax', 'jnz 0x1d16')","[0.5326141708581873, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
484,"('movq  0xd8(%r12), %rax', 'mov $0x4c52c8, %rcx', 'sub $0x4c4b60, %rcx', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'movq  %rcx, -0x4d0(%rbp)', 'cmp %rdx, %rcx', 'jbe 0x354')","[2.5798394329302026, 3.5002361780321656, 0.6964952981948545, 0.9439891214345513, 0.9439891214345513, 5.3037377731098445, 5.3037377731098445, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 0.11218192184622303]"
485,"('movq  0xd8(%r12), %rax', 'mov %rax, %rdx', 'sub $0x4c4b60, %rdx', 'cmpq  %rdx, -0x4d0(%rbp)', 'jbe 0x1482')","[0.49164338201000146, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
486,"('movq  0xd8(%r12), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x6d')","[2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.1245732927561534, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123, 2.882547082840123]"
487,"('movq  0xd8(%r12), %rbx', 'mov %rbx, %rax', 'sub $0x4c4b60, %rax', 'cmpq  %rax, -0x4d0(%rbp)', 'jbe 0x1555')","[0.49164338201000146, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
488,"('movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x103')","[0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
489,"('movq  0xd8(%rbp), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x15d')","[0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
490,"('movq  0xd8(%rbx), %r12', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r12, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xf1')","[0.573584959706373, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
491,"('movq  0xd8(%rbx), %r12', 'movdqux  0x38(%rbx), %xmm0', 'movq  0x38(%rbx), %rsi', 'mov %r12, %rax', 'punpcklqdq %xmm0, %xmm0', 'sub %rbp, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'cmp %r13, %rax', 'jnb 0x121')","[1.4437467558047938, 1.4437467558047938, 1.4437467558047938, 1.4437467558047938, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917]"
492,"('movq  0xd8(%rbx), %r15', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r15, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x16e')","[0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 4.753690432222007]"
493,"('movq  0xd8(%rbx), %r15', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r15, %rsi', 'sub %rdx, %rax', 'sub %rdx, %rsi', 'cmp %rsi, %rax', 'jbe 0x19b')","[0.09238606648798416, 0.09238606648798416, 4.753690432222007]"
494,"('movq  0xd8(%rbx), %rbp', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbp, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0x68')","[2.1245732927561534, 2.882547082840123, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
495,"('movq  0xd8(%rdi), %rbx', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %rbx, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xff')","[2.1245732927561534, 2.882547082840123, 0.777402567292445, 0.777402567292445, 0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
496,"('movq %r12, %xmm0', 'movq %rbp, %xmm1', 'or $0x1, %edx', 'punpcklqdq %xmm1, %xmm0', 'movl  %edx, (%rbx)', 'movupsx  %xmm0, 0x38(%rbx)', 'jmp 0xffffffffffffffa5')","[0.17817081044845398, 0.17817081044845398, 9.167831547856727]"
497,"('movqq  0x10(%rbp), %xmm0', 'movq %rcx, %xmm2', 'movq %rdx, %xmm1', 'mov %eax, %ecx', 'movqq  %xmm0, 0x8(%rbp)', 'or $0x8, %ch', 'punpcklqdq %xmm1, %xmm0', 'mov %rdx, %rsi', 'movl  %ecx, (%rbp)', 'movl  0xc0(%rbp), %ecx', 'movupsx  %xmm0, 0x18(%rbp)', 'movq %rdx, %xmm0', 'punpcklqdq %xmm2, %xmm0', 'movupsx  %xmm0, 0x28(%rbp)', 'test %ecx, %ecx', 'jnle 0xffffffffffffff5e')","[6.980743426556602, 9.471228736832503, 2.5543204033253755, 0.30355132123755363, 0.30355132123755363, 0.30355132123755363]"
498,"('movqq  0x38(%rbx), %xmm0', 'mov %rbx, %rax', 'punpcklqdq %xmm0, %xmm0', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'popq  %rbx', 'retq')","[0.1385770716759002, 0.1385770716759002, 7.1305356483330105]"
499,"('movqq  0xa5d38(%rip), %xmm0', 'or $0x1, %eax', 'movq  %rbx, 0xa5d2e(%rip)', 'movl  %eax, (%rbx)', 'movhpsq  0x38(%rbx), %xmm0', 'movupsx  %xmm0, 0xa8(%rbx)', 'jmp 0xfffffffffffffec5')","[0.17817081044845398, 0.17817081044845398, 9.167831547856727]"
500,"('movsx %r15b, %eax', 'mov $0x1, %r11d', 'lea 0xaba97(%rip), %rsi', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %eax', 'movq  (%rsi,%rax,8), %rax', 'jmp %rax')","[1.7769198640890063, 0.21116728280564548, 0.21116728280564548, 0.21116728280564548]"
501,"('movsx %r15b, %eax', 'movq  %rdx, -0x4c8(%rbp)', 'movl  $0x1, -0x4e8(%rbp)', 'sub $0x20, %eax', 'cdqe', 'movzxb  (%rbx,%rax,1), %ecx', 'lea 0xaae7b(%rip), %rax', 'movq  (%rax,%rcx,8), %rax', 'jmp %rax')","[1.72138966067092, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717]"
502,"('movsxb  (%r13), %rax', 'movq  0x68(%r8), %rsi', 'mov %r13, %rbx', 'mov %rax, %rcx', 'testb  $0x20, 0x1(%rsi,%rax,2)', 'jz 0x15')","[0.7218743919304349, 0.7218743919304349, 0.08578677201654585, 0.08578677201654585]"
503,"('movzx %bl, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 1.6693071525821044, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567, 2.2648600157041567]"
504,"('movzx %cl, %ecx', 'testb  $0x4, 0x1(%r11,%rcx,2)', 'jz 0x2d')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208]"
505,"('movzx %sil, %ecx', 'cmp %edx, %ecx', 'jnl 0x1e')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
506,"('movzxb  (%r14), %esi', 'lea 0x1(%r14), %r15', 'mov %r12, %rdi', 'callq  0x18(%rbx)', 'nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'test $0x8, %al', 'jnz 0x201')","[5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 5.463189625976438, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436, 7.412267114248436]"
507,"('movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1')","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
508,"('movzxb  (%rdx), %eax', 'mov %rdi, %rbp', 'mov %rdx, %rbx', 'mov %ecx, %r9d', 'cmp $0x72, %al', 'jz 0x5b6')","[0.5552878377883288, 0.5552878377883288, 0.06598888860223094]"
509,"('movzxb  (%rsi), %ecx', 'movb  %cl, (%rdi)', 'retq')","[0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
510,"('movzxb  -0x51c(%rbp), %eax', 'and $0x1, %eax', 'cmpl  $0x8, -0x510(%rbp)', 'jnz 0x1c')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
511,"('movzxb  0x1(%rbx), %eax', 'lea 0x1(%rbx), %rdi', 'cmp $0x78, %al', 'jnle 0x25')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924]"
512,"('movzxb  0x1(%rsi), %edx', 'test %dl, %dl', 'jz 0xbb')","[0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208]"
513,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')","[0.3887012836462225, 0.04619303324399208]"
514,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')","[0.3887012836462225, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208]"
515,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'jnz 0x1eb')",[0.039593738772553774]
516,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'nop %edi, %edx', 'jmp 0xfffffffffffffecc')",[0.07258818307366924]
517,"('nop %edi, %edx', 'mov $0x3, %eax', 'syscall', 'retq')",[0.039593738772553774]
518,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x53')",[0.04619303324399208]
519,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",[0.3887012836462225]
520,"('nop %edi, %edx', 'mov $0x8, %eax', 'syscall', 'syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x7')",[0.3887012836462225]
521,"('nop %edi, %edx', 'mov %edi, %r8d', 'mov %esi, %edi', 'mov %rdx, %rsi', 'cmp $0x1, %r8d', 'jnbe 0x30')","[1.3657984205221476, 1.8530672855761279, 0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
522,"('nop %edi, %edx', 'movl  $0xa, -0x510(%rbp)', 'movl  -0x4e8(%rbp), %edi', 'movl  (%r14), %eax', 'test %edi, %edi', 'jz 0x65f')","[0.777402567292445, 0.09238606648798416, 0.09238606648798416, 0.09238606648798416]"
523,"('nop %edi, %edx', 'movl  %fs:0x18, %eax', 'test %eax, %eax', 'jnz 0x12')","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
524,"('nop %edi, %edx', 'movl  (%rdi), %eax', 'test $0x10, %al', 'jnz 0x2f0')","[0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
525,"('nop %edi, %edx', 'movl  -0x4e8(%rbp), %edx', 'movl  (%r14), %eax', 'test %edx, %edx', 'jz 0x9e1')","[0.4097038323697059, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
526,"('nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffff03e')","[1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
527,"('nop %edi, %edx', 'movq  -0x4c8(%rbp), %rax', 'movzxb  0x1(%rax), %r15d', 'lea 0x1(%rax), %rdx', 'lea -0x20(%r15), %eax', 'cmp $0x5a, %al', 'jnbe 0xfffffffffffffb46')","[1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
528,"('nop %edi, %edx', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'test %rdi, %rdi', 'jz 0xd5')","[0.11878121631766134, 0.11878121631766134, 0.11878121631766134, 6.111887698571151]"
529,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')",[0.4487276873848921]
530,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x10(%rsp)', 'movl  %edx, 0x1c(%rsp)', 'test %rdi, %rdi', 'jz 0x29d')","[2.1656211477352287, 2.1656211477352287, 2.1656211477352287, 2.1656211477352287, 0.25735828799356153, 0.25735828799356153]"
531,"('nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'xor %r14d, %r14d', 'pushq  %r13', 'mov %rdi, %r13', 'pushq  %r12', 'xor %r12d, %r12d', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x28, %rsp', 'movq  %rsi, 0x8(%rsp)', 'test %ecx, %ecx', 'jnz 0x296')","[2.1100909443171427, 2.1100909443171427, 0.2507610215781993, 0.2507610215781993]"
532,"('nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'movq  0x38(%rdi), %rdi', 'test %rdi, %rdi', 'jz 0x8')","[0.8329307426544551, 0.8329307426544551, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642, 0.09898333290334642]"
533,"('nop %edi, %edx', 'sub $0x8, %rsp', 'add $0x8, %rsp', 'retq')","[0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
534,"('nop %edi, %edx', 'xor %eax, %eax', 'test %rdx, %rdx', 'jnz 0x7')","[1.0622876604061149, 1.4412745554480995, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
535,"('or $0x2, %edx', 'lea 0x84(%rbx), %rbp', 'lea 0x83(%rbx), %r12', 'movl  %edx, (%rbx)', 'test %rdi, %rdi', 'jz 0x6')","[0.11878121631766134, 0.11878121631766134, 6.111887698571151]"
536,"('or %ecx, %edx', 'mov %rbp, %rdi', 'mov $0x1b6, %ecx', 'callq  0xfffffffffffff98b', 'nop %edi, %edx', 'pushq  %r12', 'xor %eax, %eax', 'pushq  %rbp', 'mov %r8d, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'mov %rsi, %rdi', 'mov %edx, %esi', 'mov %ecx, %edx', 'testb  $0x2, 0x74(%rbx)', 'jnz 0xb5')","[1.9990345935931224, 1.9990345935931224, 0.23756243263532267]"
537,"('orl  $0x200, (%rbp)', 'jmp 0xffffffffffffff55')","[1.8210625326401206, 2.4707543527120945]"
538,"('popq  %rbp', 'retq')","[0.5387878030539867, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
539,"('popq  %rbx', 'mov %r8, %rax', 'popq  %rbp', 'popq  %r12', 'retq')","[1.6693071525821044, 2.2648600157041567, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924, 0.07258818307366924]"
540,"('popq  %rbx', 'mov %rbp, %rdi', 'sub %rsi, %rdx', 'popq  %rbp', 'popq  %r12', 'jmp 0xfffffffffffff479')","[2.428084052872186, 3.2943398129681514, 0.888458918016465, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 0.10558262737478473, 5.4327890653965785]"
541,"('popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[278.8288998910588, 278.8288998910588, 1.5175538005801636, 2.058963650640142, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
542,"('popq  %rbx', 'retq')","[0.24582270503303877, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
543,"('pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x30, %rsp', 'mov $0x0, %rbp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %rbp, %rbp', 'jz 0x203')","[1.6103333099469, 1.6103333099469, 1.6103333099469, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057, 0.19136939939133057]"
544,"('pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'movl  (%rdi), %eax', 'mov %rdi, %rbx', 'test $0x2, %al', 'jz 0xc')","[3.0351055731042518, 4.117925273224208, 1.1105736475205814, 1.1105736475205814, 1.1105736475205814, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
545,"('pushq  %r15', 'lea 0x17(%rsi), %rax', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x88, %rsp', 'cmp $0x1f, %rax', 'jnbe 0x108')","[5.463189625976438, 7.412267114248436, 1.4749321740860806, 1.9990345935931224, 1.9990345935931224, 1.9990345935931224, 0.23756243263532267, 0.23756243263532267, 0.23756243263532267, 0.23756243263532267]"
546,"('pushq  %r15', 'pushq  %r14', 'mov %rsi, %r14', 'pushq  %r13', 'mov %rdx, %r13', 'pushq  %r12', 'mov %rdi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'jmp 0x58')","[5.614945006034454, 7.61816347931245, 2.0545627689551322, 0.24416172710676096, 0.24416172710676096, 0.24416172710676096]"
547,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'mov %edx, %r13d', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x48, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x38(%rsp)', 'xor %eax, %eax', 'movq  0x8(%rsi), %rax', 'mov %rax, %rbx', 'and $0xfffffffffffffff8, %rbx', 'mov %rbx, %rdx', 'neg %rdx', 'cmp %rdx, %rsi', 'jnbe 0x2ab')","[7.2842541866726345, 2.665378782105471, 2.665378782105471, 2.665378782105471, 2.665378782105471, 2.665378782105471, 2.665378782105471, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302, 0.3167499101804302]"
548,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'mov %rsi, %r12', 'pushq  %rbp', 'mov %rdx, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r14', 'mov $0x4c4b60, %r15', 'mov $0x4c52c8, %r13', 'mov %r14, %rax', 'sub %r15, %r13', 'sub %r15, %rax', 'testl  $0x1000, (%rdi)', 'jnz 0xc5')","[2.387735877239345, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 14.600620613253307]"
549,"('pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'test $0x4, %al', 'jnz 0x2df')","[1.72138966067092, 1.72138966067092, 1.72138966067092, 1.72138966067092, 0.20456798833420717, 0.20456798833420717, 0.20456798833420717]"
550,"('pushq  %rbp', 'mov %rsp, %rbp', 'callq  0xffffffffffffff7f', 'mov $0x4c4b10, %eax', 'cmp $0x4c4b10, %rax', 'jz 0x15')","[0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 6.4514370151584375]"
551,"('pxor %xmm0, %xmm0', 'mov %rbx, %rax', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'add $0x8, %rsp', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'retq')","[0.1406903061071352, 0.1406903061071352, 7.239190780662997]"
552,"('pxor %xmm0, %xmm0', 'mov %rbx, %rdi', 'movupsx  %xmm0, 0x8(%rbx)', 'movupsx  %xmm0, 0x18(%rbx)', 'movupsx  %xmm0, 0x28(%rbx)', 'callq  0x1128', 'nop %edi, %edx', 'testb  $0x80, (%rdi)', 'jz 0x9')","[1.294930029000961, 1.294930029000961, 0.15388686699393578, 0.15388686699393578, 0.15388686699393578, 0.15388686699393578, 0.15388686699393578, 0.15388686699393578]"
553,"('pxor %xmm0, %xmm0', 'movq  %rcx, 0xa0(%rdi)', 'movq  $0x0, 0x50(%rcx)', 'movq  %r8, 0xe0(%rcx)', 'movupsx  %xmm0, (%rcx)', 'movupsx  %xmm0, 0x10(%rcx)', 'movupsx  %xmm0, 0x20(%rcx)', 'movupsx  %xmm0, 0x30(%rcx)', 'movupsx  %xmm0, 0x40(%rcx)', 'movq  $0x0, 0xa8(%rdi)', 'retq')","[1.7391594880091938, 1.7391594880091938, 0.20667919470936616]"
554,"('retq',)","[0.6070215202320656, 0.6070215202320656, 0.6070215202320656, 0.8235854602560568, 0.8235854602560568, 0.16388112733666715, 0.16388112733666715, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.22211472950411626, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 0.02639514982967717, 1.3581972663491446, 1.3581972663491446, 1.3581972663491446]"
555,"('sub $0x1, %rax', 'cmpb  $0xa, (%rax)', 'jz 0x111')","[0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.28679146582514853, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 0.3887012836462225, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 2.1838919049242844, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208]"
556,"('sub $0x1, %rax', 'sub %rbx, %rax', 'shr $0x3, %rax', 'lea 0x8(%rbx,%rax,8), %r12', 'nopl  %eax, (%rax)', 'callq  (%rbx)', 'nop %edi, %edx', 'pushq  %r15', 'xor %edi, %edi', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'pushq  %rbx', 'sub $0x38, %rsp', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'callq  0xfffffffffffffcdc', 'nop %edi, %edx', 'pushq  %r15', 'pushq  %r14', 'pushq  %r13', 'pushq  %r12', 'pushq  %rbp', 'mov %edi, %ebp', 'pushq  %rbx', 'sub $0x38, %rsp', 'mov $0x0, %r13', 'movq  %fs:0x28, %rax', 'movq  %rax, 0x28(%rsp)', 'xor %eax, %eax', 'test %r13, %r13', 'jz 0x202')","[0.6796908255487765, 0.6796908255487765, 0.6796908255487765, 34.973581636546555]"
557,"('sub $0x1, %rbp', 'mov %r15, %r14', 'movq  0x28(%r12), %rdi', 'movq  0x30(%r12), %rbx', 'cmp %rbx, %rdi', 'jnb 0xffffffffffffffb0')","[2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 2.27632867281417, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137, 3.088443447904137]"
558,"('sub $0x1, %rbx', 'cmp $0xffffffffffffffff, %rbx', 'jnz 0xfffffffffffffff4')","[0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717, 2.037295899523717]"
559,"('sub %r14, %rax', 'add %rax, %r13', 'jmp 0xffffffffffffff47')","[1.5175538005801636, 2.058963650640142, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
560,"('sub %r14, %rbx', 'mov %rbx, %r13', 'add $0x18, %rsp', 'mov %r13, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[0.8194056366833358, 0.8194056366833358, 1.1105736475205814, 1.1105736475205814, 6.23969173637112, 6.23969173637112, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793, 0.13197980526053793]"
561,"('sub %rax, %rbx', 'add %rax, %rbp', 'test %rbx, %rbx', 'jle 0x55')","[0.28679146582514853, 0.3887012836462225, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 0.04619303324399208, 2.3768452161110036]"
562,"('sub %rbx, %rbp', 'test %rbp, %rbp', 'jz 0x7c')","[0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
563,"('sub %rdi, %rax', 'xor %r15d, %r15d', 'mov %rax, %rdx', 'test %rdx, %rdx', 'jz 0x65')","[0.4442294590082325, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
564,"('sub %rdi, %rbx', 'cmp %rbx, %rbp', 'cmovbe %rbp, %rbx', 'cmp $0x14, %rbx', 'jbe 0xffffffffffffff94')","[0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
565,"('subl  $0x1, (%rdi)', 'add $0x28, %rsp', 'mov %r12, %rax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'popq  %r13', 'popq  %r14', 'popq  %r15', 'retq')","[1.2216320263006775, 1.2216320263006775, 1.2216320263006775, 1.2216320263006775, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848, 0.14517636614733848]"
566,"('subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffea7')","[0.6663441885123488, 0.6663441885123488, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
567,"('subl  $0x1, (%rdi)', 'jmp 0xfffffffffffffeef')","[0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
568,"('subl  $0x1, (%rdi)', 'jmp 0xffffffffffffff16')","[1.8210625326401206, 2.4707543527120945, 0.49164338201000146, 0.6663441885123488, 0.6663441885123488, 3.7438138249890267, 3.7438138249890267, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 0.07918747754510755]"
569,"('subl  $0x1, (%rdi)', 'movl  0xa76bd(%rip), %edx', 'jmp 0x1b')","[0.777402567292445, 0.777402567292445, 0.09238606648798416]"
570,"('subl  $0x1, (%rdi)', 'movl  0xa79d6(%rip), %edx', 'movq  $0x0, 0xa79b7(%rip)', 'sub $0x1, %edx', 'movl  %edx, 0xa79c2(%rip)', 'jnz 0x24')","[1.0550454721585714, 1.0550454721585714, 1.0550454721585714, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965, 0.12538051078909965]"
571,"('subl  $0x1, 0xa5dab(%rip)', 'test %r13, %r13', 'jz 0xc')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
572,"('subl  $0x1, 0xa60bf(%rip)', 'test %r13, %r13', 'jz 0xc')","[0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
573,"('subl  $0x1, 0xa7666(%rip)', 'test %rbp, %rbp', 'jz 0xc')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644]"
574,"('subl  $0x1, 0xa799a(%rip)', 'test %rbp, %rbp', 'jz 0xc')","[0.4997576343702426, 0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
575,"('subl  $0x1, 0xb6ce3(%rip)', 'test %r13b, %r13b', 'jz 0x33')","[0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 3.0559438492855757]"
576,"('subl  $0x1, 0xb6d06(%rip)', 'jmp 0xfffffffffffffe66')","[0.07918747754510755, 0.07918747754510755, 0.07918747754510755, 4.074591799047434]"
577,"('subl  $0x1, 0xb6e0e(%rip)', 'mov %r8, %rax', 'shl $0x5, %rax', 'add %r14, %rax', 'movq  0x10(%rax), %rdx', 'cmp $0x3, %rdx', 'jz 0x34')","[0.11218192184622303, 0.11218192184622303, 0.11218192184622303, 5.772338381983865]"
578,"('syscall', 'cmp $0xfffffffffffff000, %rax', 'jnbe 0x58')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
579,"('syscall', 'cmpxchgl  %edx, 0xb6e84(%rip)', 'movq  (%rbx), %r14', 'test %r14, %r14', 'jnz 0x3d')",[0.21776454922100774]
580,"('syscall', 'movq  %rdx, -0x8(%r8)', 'movq  %rax, 0x8(%rcx)', 'movl  0xa118c(%rip), %eax', 'test %eax, %eax', 'jz 0xfffffffffffff6e8')",[0.8329307426544551]
581,"('test $0x1, %ah', 'jnz 0x150')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
582,"('test $0x1, %ah', 'jz 0x34')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
583,"('test $0x1, %al', 'jz 0x2b')","[0.7587769002900818, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
584,"('test $0x1, %al', 'jz 0x2e')","[0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
585,"('test $0x2, %ah', 'jz 0xb')","[0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071]"
586,"('test $0x202, %eax', 'jz 0xe5')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
587,"('test $0x202, %eax', 'jz 0xffffffffffffff53')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
588,"('test $0x4, %al', 'jz 0x1c')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
589,"('test $0x8, %al', 'jnz 0x29c')","[0.7587769002900818, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
590,"('test $0x80, %ah', 'jnz 0x2f')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
591,"('test %al, %al', 'jz 0xfffffffffffffec1')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
592,"('test %ax, %ax', 'jnz 0x6d')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
593,"('test %bl, %bl', 'jz 0xffffffffffffff2c')",[139.4144499455294]
594,"('test %cl, %cl', 'jz 0x364')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
595,"('test %eax, %eax', 'js 0x73')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
596,"('test %ebp, %ebp', 'jnz 0x16a')","[139.4144499455294, 0.2776429048661263]"
597,"('test %ebp, %ebp', 'jz 0x16')",[139.4144499455294]
598,"('test %ebp, %ebp', 'jz 0x3e')","[0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431, 1.697746582936431]"
599,"('test %ebx, %ebx', 'jle 0x17e0')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
600,"('test %edx, %edx', 'jnz 0x13')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
601,"('test %edx, %edx', 'jnz 0x140')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
602,"('test %r11, %r11', 'js 0xb40')","[0.20485191618485296, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
603,"('test %r12d, %r12d', 'movl  $0xfbad240c, (%rbx)', 'movl  $0xffffffff, 0x70(%rbx)', 'cmovz %ebp, %r12d', 'movq  $0xffffffffffffffff, 0x90(%rbx)', 'mov %r12d, %eax', 'popq  %rbx', 'popq  %rbp', 'popq  %r12', 'retq')","[1.4437467558047938, 1.4437467558047938, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917, 0.1715735440330917]"
604,"('test %r13, %r13', 'jz 0x2a99')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 1.5599219200647423, 1.5599219200647423, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
605,"('test %r14, %r14', 'jnz 0x347')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
606,"('test %r8d, %r8d', 'js 0xa85')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
607,"('test %r9d, %r9d', 'jnz 0x321')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
608,"('test %r9d, %r9d', 'js 0x1eea')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
609,"('test %rax, %rax', 'jle 0x51')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
610,"('test %rax, %rax', 'js 0x30')","[0.20485191618485296, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
611,"('test %rax, %rax', 'jz 0x1a')","[0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
612,"('test %rax, %rax', 'jz 0x4f')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
613,"('test %rax, %rax', 'jz 0xd0')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547]"
614,"('test %rbp, %rbp', 'jnz 0xcc')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
615,"('test %rbp, %rbp', 'jz 0x7c')","[0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071]"
616,"('test %rbx, %rbx', 'jnz 0xad')","[0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
617,"('test %rdi, %rdi', 'js 0x132')","[0.7587769002900818, 1.029481825320071, 0.20485191618485296, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
618,"('test %rdi, %rdi', 'jz 0x75')","[0.7587769002900818, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
619,"('test %rdx, %rdx', 'jnz 0xfffffffffffffff1')","[0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
620,"('test %rsi, %rsi', 'jz 0x135')","[0.7587769002900818, 1.029481825320071, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
621,"('test %rsi, %rsi', 'jz 0x185')","[0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 0.7587769002900818, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 1.029481825320071, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547, 1.697746582936431]"
622,"('test %rsi, %rsi', 'jz 0x294')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547, 0.03299444430111547]"
623,"('test %sil, %sil', 'jz 0x1e')","[139.4144499455294, 0.2776429048661263]"
624,"('testb  $0x1, 0x74(%rbx)', 'jz 0x36')","[0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774]"
625,"('testb  $0x1, 0x8(%r12)', 'jnz 0x26')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
626,"('testb  $0x2, 0x4(%rbp)', 'jz 0x5a9')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
627,"('testb  $0x2, 0x8(%r12)', 'jnz 0x142')","[0.9105322803480983, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
628,"('testb  $0x20, 0x74(%rbx)', 'jnz 0x37')","[0.24582270503303877, 0.3331731082842125, 0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
629,"('testb  $0x80, (%rbp)', 'jz 0xe')","[0.3331731082842125, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
630,"('testl  $0x202, (%rbx)', 'jnz 0xffffffffffffffc5')","[0.24582270503303877, 0.3331731082842125, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 2.037295899523717]"
631,"('testl  $0x8000, (%r12)', 'jnz 0x19')","[0.9105322803480983, 1.2353781903840853, 0.24582270503303877, 0.3331731082842125, 0.3331731082842125, 1.8719079265225513, 1.8719079265225513, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774, 0.039593738772553774]"
632,"('tzcnt %eax, %eax', 'add %rdi, %rax', 'vzeroupper', 'retq')","[1.972817912698137, 2.6766507177761087, 0.5326141708581873, 0.5326141708581873, 0.7218743919304349, 0.7218743919304349, 0.7218743919304349, 4.055799831446836, 4.055799831446836, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585, 0.08578677201654585]"
633,"('tzcnt %eax, %eax', 'cmp %rax, %rdx', 'jbe 0x69')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644]"
634,"('vmovdqux  (%rsi), %xmm0', 'vmovdqux  -0x10(%rsi,%rdx,1), %xmm1', 'vmovdqux  %xmm0, (%rdi)', 'vmovdqux  %xmm1, -0x10(%rdi,%rdx,1)', 'retq')","[0.3277622546733343, 0.05279232771543038, 0.05279232771543038, 0.05279232771543038]"
635,"('vmovdquy  (%rdi), %ymm8', 'vpcmpeqb %ymm8, %ymm0, %ymm1', 'vpcmpeqb %ymm8, %ymm9, %ymm2', 'vpor %ymm1, %ymm2, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x15c')","[2.324890475554978, 3.1543309337025662, 0.6276651030300897, 0.8507005699927287, 0.8507005699927287, 0.8507005699927287, 4.779602904705586, 4.779602904705586, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142, 0.10109656733458142]"
636,"('vpcmpeqby  (%rdi), %ymm0, %ymm1', 'vpmovmskb %ymm1, %eax', 'test %eax, %eax', 'jnz 0x1c6')","[0.6108160131503387, 0.6108160131503387, 0.07258818307366924, 0.07258818307366924]"
637,"('xor %eax, %eax', 'add $0x18, %rsp', 'popq  %rbx', 'popq  %rbp', 'retq')","[0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
638,"('xor %eax, %eax', 'nopw  %ax, (%rax,%rax,1)', 'movzxb  (%r14,%rax,1), %edx', 'movb  %dl, (%rdi,%rax,1)', 'add $0x1, %rax', 'cmp %rbx, %rax', 'jnz 0xfffffffffffffff1')","[0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
639,"('xor %eax, %eax', 'pxor %xmm0, %xmm0', 'movq  $0x0, 0x68(%rdi)', 'movw  %ax, 0x80(%rdi)', 'movq  0x88(%rdi), %rax', 'movupsx  %xmm0, 0x8(%rdi)', 'movupsx  %xmm0, 0x18(%rdi)', 'movupsx  %xmm0, 0x28(%rdi)', 'movupsx  %xmm0, 0x38(%rdi)', 'movupsx  %xmm0, 0x48(%rdi)', 'movupsx  %xmm0, 0x58(%rdi)', 'test %rax, %rax', 'jz 0x11')","[1.7391594880091938, 1.7391594880091938, 0.20667919470936616]"
640,"('xor %eax, %eax', 'retq')","[0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.2776429048661263, 0.03299444430111547, 0.03299444430111547]"
641,"('xor %ebx, %ebx', 'jmp 0xffffffffffffdf2e')","[0.36873304352152014, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
642,"('xor %ecx, %ecx', 'movl  -0x510(%rbp), %edx', 'cmp $0x58, %r15b', 'movq  -0x4f8(%rbp), %rsi', 'movq  -0x500(%rbp), %rdi', 'setz %cl', 'movl  %r9d, -0x544(%rbp)', 'movl  %r10d, -0x53c(%rbp)', 'callq  0x527f4', 'nop %edi, %edx', 'mov %rsi, %r8', 'test %ecx, %ecx', 'lea 0x428d0(%rip), %rsi', 'lea 0x42889(%rip), %rax', 'cmovz %rax, %rsi', 'cmp $0xa, %edx', 'jz 0x72')","[2.0157396914914747, 2.732012592539883, 0.32466744110129536, 0.32466744110129536, 0.32466744110129536, 0.32466744110129536, 0.32466744110129536, 0.32466744110129536]"
643,"('xor %ecx, %ecx', 'xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x19c0', 'nop %edi, %edx', 'pushq  %rbp', 'mov %ecx, %ebp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x18, %rsp', 'movq  0x38(%rdi), %rdi', 'movl  (%rbx), %eax', 'movq  %rsi, (%rsp)', 'movq  %rdx, 0x8(%rsp)', 'test %rdi, %rdi', 'jz 0x6')","[6.525477286382552, 2.387735877239345, 2.387735877239345, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477, 0.28375546587931477]"
644,"('xor %edx, %edx', 'add $0x18, %rsp', 'jmp 0xffffffffffffc1ea')","[1.5175538005801636, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.5552878377883288, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 0.06598888860223094]"
645,"('xor %edx, %edx', 'xor %esi, %esi', 'mov %rbx, %rdi', 'callq  0x58(%r15)', 'nop %edi, %edx', 'pushq  %rbx', 'mov %rdi, %rbx', 'callq  0x3fa8', 'nop %edi, %edx', 'pushq  %r13', 'pushq  %r12', 'mov %rdx, %r12', 'pushq  %rbp', 'mov %rsi, %rbp', 'pushq  %rbx', 'mov %rdi, %rbx', 'sub $0x8, %rsp', 'movq  0xd8(%rdi), %r13', 'mov $0x4c4b60, %rdx', 'mov $0x4c52c8, %rax', 'mov %r13, %rcx', 'sub %rdx, %rax', 'sub %rdx, %rcx', 'cmp %rcx, %rax', 'jbe 0xd0')","[0.3959373877255377, 0.3959373877255377, 20.372958995237173]"
646,"('xor %esi, %esi', 'mov $0x2, %edx', 'mov %rbx, %rdi', 'callq  0x80(%rbp)', 'nop %edi, %edx', 'movl  0x70(%rdi), %edi', 'jmp 0x35f39')","[1.2216320263006775, 1.2216320263006775, 0.14517636614733848]"
647,"('xor %esi, %esi', 'mov %rbp, %rdi', 'callq  0x10(%rbx)', 'nop %edi, %edx', 'pushq  %rbp', 'mov %rdi, %rbp', 'pushq  %rbx', 'sub $0x8, %rsp', 'cmpl  $0xffffffff, 0x70(%rdi)', 'jz 0x59')","[1.4992749311668039, 1.4992749311668039, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398, 0.17817081044845398]"
648,"('xor %r12d, %r12d', 'nop', 'movl  %fs:0x18, %eax', 'mov $0x1, %edx', 'test %eax, %eax', 'jnz 0x1eb')","[0.06598888860223094, 0.06598888860223094, 0.06598888860223094, 3.395493165872862]"
649,"('xor %r15d, %r15d', 'jmp 0x91')","[0.4997576343702426, 0.4997576343702426, 0.059389594130792644, 0.059389594130792644]"
650,"('xor %r15d, %r15d', 'jmp 0xffffffffffffff00')","[0.36873304352152014, 0.36873304352152014, 0.4997576343702426, 2.807859861727751, 2.807859861727751, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644, 0.059389594130792644]"
