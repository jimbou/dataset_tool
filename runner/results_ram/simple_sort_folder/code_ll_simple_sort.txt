new basic block
Basic Block name: do_nothing
Of function : do_nothing

do_nothing:
  ret void
Case 1  
new basic block
Basic Block name: main
Of function : main

main:
  %0 = alloca i32, align 4
  %1 = alloca [20 x i32], align 16
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 0, i32* %0, align 4
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  store i32 0, i32* %2, align 4
  br label %5
new basic block
Basic Block name: main1
Of function : main

main1:                                            ; preds = %19, %main
  %5 = load i32, i32* %2, align 4
  %6 = icmp slt i32 %5, 20
  br i1 %6, label %7, label %22
Case 1  
new basic block
Basic Block name: main2
Of function : main

main2:                                            ; preds = %main1
  %7 = load i32, i32* %2, align 4
  %8 = add nsw i32 %7, 1
  call void @rapl_B()
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %8)
  call void @rapl_C()
  %10 = load i32, i32* %2, align 4
  %11 = srem i32 %10, 9
  %12 = load i32, i32* %2, align 4
  %13 = mul nsw i32 %12, 7
  %14 = add nsw i32 %11, %13
  %15 = load i32, i32* %2, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %16
  store i32 %14, i32* %17, align 4
  br label %18
new basic block
Basic Block name: main3
Of function : main

main3:                                            ; preds = %main2
  %18 = load i32, i32* %2, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %2, align 4
  br label %main1
new basic block
Basic Block name: main4
Of function : main

main4:                                            ; preds = %main1
  store i32 0, i32* %2, align 4
  br label %20
new basic block
Basic Block name: main5
Of function : main

main5:                                            ; preds = %59, %main4
  %20 = load i32, i32* %2, align 4
  %21 = icmp slt i32 %20, 20
  br i1 %21, label %22, label %62
new basic block
Basic Block name: main6
Of function : main

main6:                                            ; preds = %main5
  %22 = load i32, i32* %2, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %3, align 4
  br label %24
new basic block
Basic Block name: main7
Of function : main

main7:                                            ; preds = %53, %main6
  %24 = load i32, i32* %3, align 4
  %25 = icmp slt i32 %24, 20
  br i1 %25, label %26, label %56
new basic block
Basic Block name: main8
Of function : main

main8:                                            ; preds = %main7
  %26 = load i32, i32* %2, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = load i32, i32* %3, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %29, %33
  br i1 %34, label %35, label %51
new basic block
Basic Block name: main9
Of function : main

main9:                                            ; preds = %main8
  %35 = load i32, i32* %2, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %36
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %4, align 4
  %39 = load i32, i32* %3, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = load i32, i32* %2, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %44
  store i32 %42, i32* %45, align 4
  %46 = load i32, i32* %4, align 4
  %47 = load i32, i32* %3, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %48
  store i32 %46, i32* %49, align 4
  br label %50
new basic block
Basic Block name: main10
Of function : main

main10:                                           ; preds = %main9, %main8
  br label %50
new basic block
Basic Block name: main11
Of function : main

main11:                                           ; preds = %main10
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %3, align 4
  br label %main7
new basic block
Basic Block name: main12
Of function : main

main12:                                           ; preds = %main7
  br label %52
new basic block
Basic Block name: main13
Of function : main

main13:                                           ; preds = %main12
  %52 = load i32, i32* %2, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %2, align 4
  br label %main5
Case 1  
new basic block
Basic Block name: main14
Of function : main

main14:                                           ; preds = %main5
  call void @rapl_B()
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0))
  call void @rapl_C()
  store i32 0, i32* %2, align 4
  br label %55
new basic block
Basic Block name: main15
Of function : main

main15:                                           ; preds = %63, %main14
  %55 = load i32, i32* %2, align 4
  %56 = icmp slt i32 %55, 20
  br i1 %56, label %57, label %66
Case 1  
new basic block
Basic Block name: main16
Of function : main

main16:                                           ; preds = %main15
  %57 = load i32, i32* %2, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [20 x i32], [20 x i32]* %1, i64 0, i64 %58
  %60 = load i32, i32* %59, align 4
  call void @rapl_B()
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 %60)
  call void @rapl_C()
  br label %62
new basic block
Basic Block name: main17
Of function : main

main17:                                           ; preds = %main16
  %62 = load i32, i32* %2, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %2, align 4
  br label %main15
Case 1  
new basic block
Basic Block name: main18
Of function : main

main18:                                           ; preds = %main15
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  ret i32 0
