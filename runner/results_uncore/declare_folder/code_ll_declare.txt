Case 1  
new basic block
Basic Block name: hello
Of function : hello

hello:
  call void @rapl_B()
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  call void @rapl_C()
  ret void
new basic block
Basic Block name: do_nothing
Of function : do_nothing

do_nothing:
  ret void
Case 1  
new basic block
Basic Block name: main
Of function : main

main:
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  store i32 0, i32* %2, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  store i32 1, i32* %5, align 4
  br label %7
new basic block
Basic Block name: main1
Of function : main

main1:                                            ; preds = %25, %main
  %7 = load i32, i32* %5, align 4
  %8 = icmp sle i32 %7, 20
  br i1 %8, label %9, label %28
Case 1  
Case 1  
Case 1  
Case 1  
Case 1  
new basic block
Basic Block name: main2
Of function : main

main2:                                            ; preds = %main1
  call void @rapl_B()
  %9 = call noalias i8* @malloc(i64 4) #4
  call void @rapl_C()
  %10 = bitcast i8* %9 to i32*
  store i32* %10, i32** %6, align 8
  call void @rapl_B()
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0))
  call void @rapl_C()
  %12 = load i8**, i8*** %4, align 8
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8*, i8** %12, i64 %14
  %16 = load i8*, i8** %15, align 8
  %17 = load i32*, i32** %6, align 8
  call void @rapl_B()
  %18 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* %17) #4
  call void @rapl_C()
  %19 = load i32*, i32** %6, align 8
  %20 = load i32, i32* %19, align 4
  call void @rapl_B()
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 %20)
  call void @rapl_C()
  %22 = load i32*, i32** %6, align 8
  %23 = bitcast i32* %22 to i8*
  call void @rapl_B()
  call void @free(i8* %23) #4
  call void @rapl_C()
  br label %24
new basic block
Basic Block name: main3
Of function : main

main3:                                            ; preds = %main2
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %5, align 4
  br label %main1
Case 1  
new basic block
Basic Block name: main4
Of function : main

main4:                                            ; preds = %main1
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  ret i32 0
