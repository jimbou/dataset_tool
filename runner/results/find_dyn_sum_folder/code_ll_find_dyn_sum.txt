Case 1  
new basic block
Basic Block name: hello
Of function : hello

hello:
  call void @rapl_B()
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  call void @rapl_C()
  ret void
new basic block
Basic Block name: do_nothing
Of function : do_nothing

do_nothing:
  ret void
Case 1  
Case 1  
Case 1  
Case 1  
new basic block
Basic Block name: main
Of function : main

main:
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %2, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  call void @rapl_B()
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0))
  call void @rapl_C()
  %10 = load i8**, i8*** %4, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 1
  %12 = load i8*, i8** %11, align 8
  call void @rapl_B()
  %13 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* %6) #4
  call void @rapl_C()
  %14 = load i32, i32* %6, align 4
  %15 = sext i32 %14 to i64
  %16 = mul i64 %15, 4
  call void @rapl_B()
  %17 = call noalias i8* @malloc(i64 %16) #4
  call void @rapl_C()
  %18 = bitcast i8* %17 to i32*
  store i32* %18, i32** %5, align 8
  store i32 0, i32* %7, align 4
  br label %19
new basic block
Basic Block name: main1
Of function : main

main1:                                            ; preds = %37, %main
  %19 = load i32, i32* %7, align 4
  %20 = load i32, i32* %6, align 4
  %21 = icmp slt i32 %19, %20
  br i1 %21, label %22, label %40
Case 1  
Case 1  
new basic block
Basic Block name: main2
Of function : main

main2:                                            ; preds = %main1
  %22 = load i32, i32* %7, align 4
  %23 = add nsw i32 %22, 1
  call void @rapl_B()
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 %23)
  call void @rapl_C()
  %25 = load i8**, i8*** %4, align 8
  %26 = load i32, i32* %7, align 4
  %27 = add nsw i32 %26, 2
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8*, i8** %25, i64 %28
  %30 = load i8*, i8** %29, align 8
  %31 = load i32*, i32** %5, align 8
  %32 = load i32, i32* %7, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %31, i64 %33
  call void @rapl_B()
  %35 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* %34) #4
  call void @rapl_C()
  br label %36
new basic block
Basic Block name: main3
Of function : main

main3:                                            ; preds = %main2
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  br label %main1
Case 1  
new basic block
Basic Block name: main4
Of function : main

main4:                                            ; preds = %main1
  call void @rapl_B()
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0))
  call void @rapl_C()
  store i32 0, i32* %7, align 4
  br label %39
new basic block
Basic Block name: main5
Of function : main

main5:                                            ; preds = %49, %main4
  %39 = load i32, i32* %7, align 4
  %40 = load i32, i32* %6, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %52
Case 1  
new basic block
Basic Block name: main6
Of function : main

main6:                                            ; preds = %main5
  %42 = load i32*, i32** %5, align 8
  %43 = load i32, i32* %7, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %42, i64 %44
  %46 = load i32, i32* %45, align 4
  call void @rapl_B()
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0), i32 %46)
  call void @rapl_C()
  br label %48
new basic block
Basic Block name: main7
Of function : main

main7:                                            ; preds = %main6
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %main5
new basic block
Basic Block name: main8
Of function : main

main8:                                            ; preds = %main5
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %50
new basic block
Basic Block name: main9
Of function : main

main9:                                            ; preds = %61, %main8
  %50 = load i32, i32* %7, align 4
  %51 = load i32, i32* %6, align 4
  %52 = icmp slt i32 %50, %51
  br i1 %52, label %53, label %64
new basic block
Basic Block name: main10
Of function : main

main10:                                           ; preds = %main9
  %53 = load i32*, i32** %5, align 8
  %54 = load i32, i32* %7, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %53, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %8, align 4
  %59 = add nsw i32 %58, %57
  store i32 %59, i32* %8, align 4
  br label %60
new basic block
Basic Block name: main11
Of function : main

main11:                                           ; preds = %main10
  %60 = load i32, i32* %7, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %7, align 4
  br label %main9
Case 1  
Case 1  
Case 1  
new basic block
Basic Block name: main12
Of function : main

main12:                                           ; preds = %main9
  %62 = load i32, i32* %8, align 4
  call void @rapl_B()
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %62)
  call void @rapl_C()
  %64 = load i32*, i32** %5, align 8
  %65 = bitcast i32* %64 to i8*
  call void @rapl_B()
  call void @free(i8* %65) #4
  call void @rapl_C()
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  ret i32 0
