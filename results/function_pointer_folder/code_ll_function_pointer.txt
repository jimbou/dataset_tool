Case 1  
new basic block
Basic Block name: hello
Of function : hello

hello:
  call void @rapl_B()
  %0 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  call void @rapl_C()
  ret void
new basic block
Basic Block name: do_nothing
Of function : do_nothing

do_nothing:
  ret void
new basic block
Basic Block name: addTwoNumbers
Of function : addTwoNumbers

addTwoNumbers:
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 %1, i32* %3, align 4
  %4 = load i32, i32* %2, align 4
  %5 = load i32, i32* %3, align 4
  %6 = add nsw i32 %4, %5
  ret i32 %6
Case 1  
new basic block
Basic Block name: main
Of function : main

main:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32 (i32, i32)*, align 8
  store i32 0, i32* %0, align 4
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  store i32 0, i32* %1, align 4
  br label %6
new basic block
Basic Block name: main1
Of function : main

main1:                                            ; preds = %17, %main
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, 80
  br i1 %7, label %8, label %20
Case 1  
Case 1  
Case 1  
Case 1  
new basic block
Basic Block name: main2
Of function : main

main2:                                            ; preds = %main1
  call void @rapl_B()
  %8 = call i32 @rand() #4
  call void @rapl_C()
  store i32 %8, i32* %2, align 4
  call void @rapl_B()
  %9 = call i32 @rand() #4
  call void @rapl_C()
  store i32 %9, i32* %3, align 4
  store i32 (i32, i32)* @addTwoNumbers, i32 (i32, i32)** %5, align 8
  %10 = load i32 (i32, i32)*, i32 (i32, i32)** %5, align 8
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  call void @rapl_B()
  %13 = call i32 %10(i32 %11, i32 %12)
  call void @rapl_C()
  store i32 %13, i32* %4, align 4
  %14 = load i32, i32* %4, align 4
  call void @rapl_B()
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i32 %14)
  call void @rapl_C()
  br label %16
new basic block
Basic Block name: main3
Of function : main

main3:                                            ; preds = %main2
  %16 = load i32, i32* %1, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %1, align 4
  br label %main1
Case 1  
new basic block
Basic Block name: main4
Of function : main

main4:                                            ; preds = %main1
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  ret i32 0
