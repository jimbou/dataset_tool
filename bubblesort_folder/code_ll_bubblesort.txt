new basic block
Basic Block name: do_nothing
Of function : do_nothing

do_nothing:
  ret void
Case 1  
Case 1  
new basic block
Basic Block name: main
Of function : main

main:
  %0 = alloca i32, align 4
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [28 x i32], align 16
  %5 = alloca i32, align 4
  store i32 0, i32* %0, align 4
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  %6 = bitcast [28 x i32]* %4 to i8*
  call void @rapl_B()
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 bitcast ([28 x i32]* @__const.main.array to i8*), i64 112, i1 false)
  call void @rapl_C()
  store i32 28, i32* %5, align 4
  store i32 0, i32* %1, align 4
  br label %7
new basic block
Basic Block name: main1
Of function : main

main1:                                            ; preds = %53, %main
  %7 = load i32, i32* %1, align 4
  %8 = load i32, i32* %5, align 4
  %9 = sub nsw i32 %8, 1
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %11, label %56
new basic block
Basic Block name: main2
Of function : main

main2:                                            ; preds = %main1
  store i32 0, i32* %2, align 4
  br label %11
new basic block
Basic Block name: main3
Of function : main

main3:                                            ; preds = %47, %main2
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %5, align 4
  %13 = load i32, i32* %1, align 4
  %14 = sub nsw i32 %12, %13
  %15 = sub nsw i32 %14, 1
  %16 = icmp slt i32 %11, %15
  br i1 %16, label %17, label %50
new basic block
Basic Block name: main4
Of function : main

main4:                                            ; preds = %main3
  %17 = load i32, i32* %2, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = load i32, i32* %2, align 4
  %22 = add nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %23
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %20, %25
  br i1 %26, label %27, label %45
new basic block
Basic Block name: main5
Of function : main

main5:                                            ; preds = %main4
  %27 = load i32, i32* %2, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %28
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %3, align 4
  %31 = load i32, i32* %2, align 4
  %32 = add nsw i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = load i32, i32* %2, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %37
  store i32 %35, i32* %38, align 4
  %39 = load i32, i32* %3, align 4
  %40 = load i32, i32* %2, align 4
  %41 = add nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %42
  store i32 %39, i32* %43, align 4
  br label %44
new basic block
Basic Block name: main6
Of function : main

main6:                                            ; preds = %main5, %main4
  br label %44
new basic block
Basic Block name: main7
Of function : main

main7:                                            ; preds = %main6
  %44 = load i32, i32* %2, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %2, align 4
  br label %main3
new basic block
Basic Block name: main8
Of function : main

main8:                                            ; preds = %main3
  br label %46
new basic block
Basic Block name: main9
Of function : main

main9:                                            ; preds = %main8
  %46 = load i32, i32* %1, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %1, align 4
  br label %main1
Case 1  
new basic block
Basic Block name: main10
Of function : main

main10:                                           ; preds = %main1
  call void @rapl_B()
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0))
  call void @rapl_C()
  store i32 0, i32* %1, align 4
  br label %49
new basic block
Basic Block name: main11
Of function : main

main11:                                           ; preds = %58, %main10
  %49 = load i32, i32* %1, align 4
  %50 = load i32, i32* %5, align 4
  %51 = icmp slt i32 %49, %50
  br i1 %51, label %52, label %61
Case 1  
new basic block
Basic Block name: main12
Of function : main

main12:                                           ; preds = %main11
  %52 = load i32, i32* %1, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds [28 x i32], [28 x i32]* %4, i64 0, i64 %53
  %55 = load i32, i32* %54, align 4
  call void @rapl_B()
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %55)
  call void @rapl_C()
  br label %57
new basic block
Basic Block name: main13
Of function : main

main13:                                           ; preds = %main12
  %57 = load i32, i32* %1, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %1, align 4
  br label %main11
Case 1  
new basic block
Basic Block name: main14
Of function : main

main14:                                           ; preds = %main11
  call void @rapl_B()
  call void @do_nothing()
  call void @rapl_C()
  ret i32 0
